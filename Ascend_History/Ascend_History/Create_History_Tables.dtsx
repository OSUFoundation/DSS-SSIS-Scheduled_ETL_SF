<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/3/2021 1:27:37 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ETL2"
  DTS:CreatorName="FOUNDATION\krobertson"
  DTS:DTSID="{86F2B3B6-4273-4030-9C8F-FB08C9E4D2AF}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.166"
  DTS:LocaleID="1033"
  DTS:ObjectName="Loop Version 1"
  DTS:PackageType="5"
  DTS:VersionBuild="149"
  DTS:VersionGUID="{ED045D0F-2BE8-4E47-B949-8958D30B9795}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[dw2.OSUF_Secure]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{F89FBADB-7C69-4283-A2F9-E5B1C142AFA3}"
      DTS:ObjectName="dw2.OSUF_Secure">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=dw2;Initial Catalog=OSUF_Secure;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C003EE20-32EB-4FCE-B8CE-2B581597D5D6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Catalog">
      <DTS:VariableValue
        DTS:DataType="8">ASCEND_FULL</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3EF5C0F0-7735-46C1-BBFC-6E42AFFC6EA4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="HistoryCatalog">
      <DTS:VariableValue
        DTS:DataType="8">ASCEND_FULL</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2867C1F4-DC36-44ED-95F6-F7D0ACF44EBC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="HistorySchema">
      <DTS:VariableValue
        DTS:DataType="8">HISTORY</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6DF19141-5842-4050-BC35-637BCFA004D3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Schema">
      <DTS:VariableValue
        DTS:DataType="8">SF</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5AC916EF-C85A-433C-8D01-D5F3C7F8A621}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SFPassword">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{18F42479-FF5B-4954-92C2-B82B8230737A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SnowSQLConfigDir">
      <DTS:VariableValue
        DTS:DataType="8">C:\temp\DWAH\SnowSQL\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A88CCDA2-A78D-49AF-873F-945E5D60D2AC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SnowSQLDir">
      <DTS:VariableValue
        DTS:DataType="8">C:\temp\DWAH\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8ABFF29C-D4F7-4747-8254-1E088CC25D91}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SnowSQLLogDir">
      <DTS:VariableValue
        DTS:DataType="8">C:\temp\DWAH\logs\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D768E0C-CC22-4BFF-BE56-97F80A784010}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLStorage">
      <DTS:VariableValue
        DTS:DataType="8">E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3C8BE343-5AC4-4D70-8935-3C0A15230660}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SVC_SQL_PW">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2DF69699-CCB5-4180-AD89-D59064D7A655}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableNames">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9CB9F717-C929-42A2-BB70-9E040F690950}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TableNames2">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B1697312-6FE2-4DC5-BBFC-2CE19F3B8E1E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TableNames3">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\1 Create SnowSQL dir and config"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{0EB01267-B932-48A9-90FA-C17478042620}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="1 Create SnowSQL dir and config">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\1 Create SnowSQL dir and config\1 Execute SQL Task - Get Snowflake Password"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A589D098-D2AD-4998-9C28-02E0352505F6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1 Execute SQL Task - Get Snowflake Password"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F89FBADB-7C69-4283-A2F9-E5B1C142AFA3}"
              SQLTask:SqlStatementSource="EXEC dbo.EncryptedText @Action = 'Retrieve', @Name = 'Snowflake OSUF_SSIS'"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Result"
                SQLTask:DtsVariableName="User::SFPassword" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\1 Create SnowSQL dir and config\2 Script Task - Create SnowSQL folder"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{D733C7C3-1F48-4614-9B4A-C53BAE386F1B}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="2 Script Task - Create SnowSQL folder"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_ea5b5d781f59475d8e90a4605f58b2da"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::SnowSQLConfigDir,User::SnowSQLDir">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_ea5b5d781f59475d8e90a4605f58b2da")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_ea5b5d781f59475d8e90a4605f58b2da")> 
<Assembly: AssemblyCopyright("Copyright @  2021")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("be382f33-10d5-44a7-aa91-7b708387f824")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math

'Imports added for this script
Imports System.IO

Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        '
        Dim SnowSQLConfigDir As String = Dts.Variables("SnowSQLDir").Value.ToString + "SnowSQL\"
        Dim SnowSqlLogDir As String = Dts.Variables("SnowSQLDir").Value.ToString + "logs\"

        ' Delete the folder
        If Directory.Exists(SnowSQLConfigDir) = True Then
            Directory.Delete(SnowSQLConfigDir, True)
        End If

        If Directory.Exists(SnowSqlLogDir) = True Then
            Directory.Delete(SnowSqlLogDir, True)
        End If

        'Create the folder
        If Directory.Exists(SnowSQLConfigDir) = False Then
            Directory.CreateDirectory(SnowSQLConfigDir)
        End If

        If Directory.Exists(SnowSqlLogDir) = False Then
            Directory.CreateDirectory(SnowSqlLogDir)
        End If


        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ea5b5d781f59475d8e90a4605f58b2da</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ea5b5d781f59475d8e90a4605f58b2da</msb:DisplayName>
		<msb:ProjectId>{37D8279E-33E5-4893-8A4C-596F5AA1A36F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ea5b5d781f59475d8e90a4605f58b2da.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_ea5b5d781f59475d8e90a4605f58b2da.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8C2E0B00-8680-4B5D-A3F3-A0B052710EEC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_ea5b5d781f59475d8e90a4605f58b2da</RootNamespace>
    <AssemblyName>ST_ea5b5d781f59475d8e90a4605f58b2da</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_ea5b5d781f59475d8e90a4605f58b2da.dll">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
CQAPAAUBAAAbBwAAYQAJABEABQEAABAAAABhAAkAGAACAQAAjQgAAJUACgAaADEAKQYRATEAAAYZ
ATEAFAYhATEAQgYpAREAswYxAREAegE1AREAKQQ5AREAqQg9ASEA1AjPAAYGhgBAAVaAfQhDAVaA
WgFDAVAgAAAAAAYYxQYGAAEAWCAAAAAABhjFBgYAAQBgIAAAAAARGMsGRwEBAIogAAAAABMImwZL
AQEAliAAAAAAEwiMBVABAQCiIAAAAAATCIwGVQEBAK4gAAAAABMICwdaAQEAuiAAAAAAAxjFBgYA
AQDCIAAAAAAWCGAGXwEBAO4gAAAAABYIYgFkAQEA9SAAAAAAFghuAWkBAQD9IAAAAAARGMsGRwEC
AA4hAAAAAAYYxQYGAAIAGCEAAAAAFggxBG8BAgB0IQAAAAAGGMUGBgACAHwhAAAAAAYAhwUGAAIA
JSIAAAAAxgJnCKcAAgAzIgAAAADGAvkArAADADsiAAAAAIMAUgF0AQMARyIAAAAAxgJ/BIsAAwBQ
IgAAAAARAHMAeQEDAHAiAAAAAAEAXwCBAQQAuiAAAAAABhjFBgYABQB8IgAAAAADCOAASgAFALAi
AAAAAAYYxQYGAAUAAAABAE4EAAABAP4FAAABAPAAAAABAPAACQDFBgEAEQDFBgYAGQDFBgoAKQDF
BhAAMQDFBhAAOQDFBhAAQQDFBhAASQDFBhAAUQDFBhAAWQDFBhUAYQDFBhUAaQDFBhAAcQDFBhAA
eQDFBhAAgQDFBhoAkQDFBiAAqQDFBgYAsQDFBgYAuQDFBgYA0QDFBiYA6QDFBhAACQHFBgYAEQHF
BgYAmQDFBgYAoQDFBgYADADFBgYAFADFBgYAHADFBgYAJADFBgYADADgAEoAFADgAEoAHADgAEoA
JADgAEoAwQDFBgYA2QAgAU8A2QAFCVcA8QDFBl0AQQFFBGUAAQHFBgYASQGVBmoASQHACGoAGQHF
BgYAGQGFCHQAUQFOCHoAWQFPBYAAYQExBIcAwQB/BIsAaQGiCI8AcQGbCJUAcQHfAZoAcQESCaAA
UQHFCAEAwQBnCKcAwQD5AKwAgQHRALgANADUCM8APAAxBEoAPAA7BOYAPADFBgYACAAsAAcBCAAw
AAwBKQCrADMDLgALALEBLgATALoBLgAbANkBLgAjAOIBLgArAAsCLgAzAAsCLgA7AOIBLgBDABEC
LgBLAAsCLgBTACgCLgBbAAsCLgBjAC4CLgBrAFgCLgBzAGUCQACLAAwBQACDAK8CQwB7ALgCQwCD
AK8CSQCrAEQDYwB7ALgCYwCDAK8CaQCrAFgDgACLAAwBgwCTAAwBgwCbAAwBgwB7ALgCiQCrAGUD
oACLAAwBqQCDANkBwACLAAwByQCDANkB4ACLAAwB4wC7AAwB4wBTAAsC6QCzAAwBAwGDAK8CAwGj
ANECIwGDAK8CIwFbAAsCIAKDAK8CIAKLAAwBQAKDAK8CQAKLAAwBYAKDAK8CYAKLAAwBgAKDAK8C
gAKLAAwBoAKLAAwBwAKLAAwB4AKLAAwB4AKDAK8CAAOLAAwBIAOLAAwBIAODAK8CbwCwAMMABAAB
AAUABQAGAAcACQAIAAAAqgaJAQAAngWOAQAAkAaTAQAAHQeYAQAAZAadAQAAfgGiAQAATgSnAQAA
5ACsAQIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQALAAIACgANAAEACwANAAIADgAPAAIAGAAR
AC4ANQA8AEMAtQDIANcA3gAEgAAAAQAAAAAAAAAAAAAAAACOAAAABAAAAAAAAAAAAAAA7ACyAAAA
AAAEAAAAAAAAAAAAAADsAFgFAAAAAAoAAAAAAAAAAAAAAPUAuwAAAAAADQAAAAAAAAAAAAAA/gCN
BAAAAAANAAAAAAAAAAAAAAD+AD4AAAAAAAAAAAABAAAABwgAAAgABAAJAAQACgAHAAAAEAASAF0A
AAAQACsAXQAAAAAALQBdAG8AvgBvAOEAAAAAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVj
dFByb3ZpZGVyYDEAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBUAERpc3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAHZhbHVlX18AU1Rf
ZWE1YjVkNzgxZjU5NDc1ZDhlOTBhNDYwNWY1OGIyZGEAbXNjb3JsaWIATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29k
ZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQBfcmVzQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25C
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBH
dWlkQXR0cmlidXRlAEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAU3RhbmRhcmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlk
ZGVuQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBtX1ZhbHVlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVt
LlRocmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1hdGgATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAU2NyaXB0
T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2VhNWI1ZDc4MWY1OTQ3NWQ4ZTkw
YTQ2MDVmNThiMmRhLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQBTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwuRGVzaWduAFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGljYXRpb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3Vs
dHVyZUluZm8ARGlyZWN0b3J5SW5mbwBtX0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFBy
b3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92
aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAGdldF9Vc2Vy
AEVudGVyAGdldF9Db21wdXRlcgBNeUNvbXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5j
Y3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2
aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMu
QXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9z
b2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2VhNWI1ZDc4MWY1OTQ3NWQ4ZTkwYTQ2MDVmNThi
MmRhLk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF9lYTViNWQ3ODFmNTk0NzVkOGU5MGE0NjA1
ZjU4YjJkYS5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMA
TXlTZXR0aW5ncwBFcXVhbHMAUnVudGltZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMARXhpc3RzAENvbmNhdABtX1N5bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rhc2tS
ZXN1bHQAbV9Db250ZXh0AFNUX2VhNWI1ZDc4MWY1OTQ3NWQ4ZTkwYTQ2MDVmNThiMmRhLk15AGdl
dF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4A
TQB5AFIAZQBzAG8AdQByAGMAZQBzAAAVUwBuAG8AdwBTAFEATABEAGkAcgAAEVMAbgBvAHcAUwBR
AEwAXAAAC2wAbwBnAHMAXAAAAP2Ykr5rpF9GhSFTMqX5vAcABCABAQgDIAABBSABARERBCABAQ4E
IAEBAgUgAgEODgUgAQERRQcgBAEODg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMA
BwABEm0RgJkFIAASgJ0HIAIBDhKAnQQAARwcBAABARwEBwIODgUgABKAqQUgABKArQYgARKAsRwD
IAAcAyAADgUAAg4ODgQAAQIOBQACAQ4CBgABEoC9DgQgAQIcAyAACAQHAR4AAh4ABRABAB4ABAoB
HgAEBwETAAYVEiQBEwAHBhUScQETAAYVEnEBEwACEwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/
EdUKOgiJhF3NgIDMkQQAAAAABAEAAAAHBhUSJAESDAcGFRIkARIIBwYVEiQBEmUHBhUSJAESIAMG
EnkDBhJ9AwYSGAIGHAIGCAMGESgDAAABBAAAEgwEAAASCAQAABJlBAAAEiAEAAASeQQAABJ9BQAB
ARJ9BAAAEhgEIAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAASIAQIABJ5BAgA
En0ECAASGAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTVF9lYTViNWQ3ODFmNTk0NzVkOGU5MGE0NjA1ZjU4YjJkYQAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDIxAAAFAQABAAApAQAkYmUzODJmMzMtMTBkNS00NGE3LWFhOTEtN2I3MDgz
ODdmODI0AAAMAQAHMS4wLjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUIAQABAAAAAAAYAQAKTXlUZW1w
bGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRw
Q2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQ
AQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5X
ZWJTZXJ2aWNlcwAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAPw4AAAAAAAAAAAAABY5AAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAIOQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBlAGEANQBiADUAZAA3ADgAMQBmADUAOQA0ADcANQBkADgAZQA5ADAAYQA0ADYAMAA1AGYA
NQA4AGIAMgBkAGEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGUAYQA1AGIANQBkADcA
OAAxAGYANQA5ADQANwA1AGQAOABlADkAMABhADQANgAwADUAZgA1ADgAYgAyAGQAYQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZQBhADUA
YgA1AGQANwA4ADEAZgA1ADkANAA3ADUAZAA4AGUAOQAwAGEANAA2ADAANQBmADUAOABiADIAZABh
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAYQA1AGIA
NQBkADcAOAAxAGYANQA5ADQANwA1AGQAOABlADkAMABhADQANgAwADUAZgA1ADgAYgAyAGQAYQAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAKDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\1 Create SnowSQL dir and config\3 Script Task - Create SnowSQL config"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{5694893E-EED2-4437-B7FD-BF7AFDEDAF30}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="3 Script Task - Create SnowSQL config"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_7018e947eef243c3bf43d476691144a5"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::HistoryCatalog,User::HistorySchema,User::SFPassword,User::SnowSQLConfigDir,User::SnowSQLLogDir">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_7018e947eef243c3bf43d476691144a5")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_7018e947eef243c3bf43d476691144a5")> 
<Assembly: AssemblyCopyright("Copyright @  2021")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("094bede2-3a3f-4e84-91e3-c74170f6c1af")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        '
        Dim SnowSQLConfigDir As String = Dts.Variables("SnowSQLConfigDir").Value.ToString
        Dim SFPassword As String = Dts.Variables("SFPassword").Value.ToString

        Dim file As System.IO.StreamWriter
        file = My.Computer.FileSystem.OpenTextFileWriter(SnowSQLConfigDir + "config.txt", True)
        file.WriteLine("[connections.SF]")
        file.WriteLine("accountname = vr05459.east-us-2.azure")
        file.WriteLine("username = OSUF_SSIS")
        file.WriteLine("password = """ + SFPassword + """")
        file.WriteLine("dbname = " + Dts.Variables("HistoryCatalog").Value.ToString)
        file.WriteLine("schemaname = " + Dts.Variables("HistorySchema").Value.ToString)
        file.WriteLine("warehousename = S_WH")
        file.WriteLine("[options]")
        file.WriteLine("log_file = " + Dts.Variables("SnowSQLLogDir").Value.ToString + "log")
        file.WriteLine("log_level = ERROR")

        file.Close()



        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_7018e947eef243c3bf43d476691144a5</msb:CodeName>
		<msb:DisplayName>ST_7018e947eef243c3bf43d476691144a5</msb:DisplayName>
		<msb:ProjectId>{D487B6FD-2CEE-453B-994F-939F12D87D8D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7018e947eef243c3bf43d476691144a5.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_7018e947eef243c3bf43d476691144a5.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A11E014B-2289-4AAB-B3CE-994E3B2BCA95}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_7018e947eef243c3bf43d476691144a5</RootNamespace>
    <AssemblyName>ST_7018e947eef243c3bf43d476691144a5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_7018e947eef243c3bf43d476691144a5.dll">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
XQBBAU4EZQABAQIHBgBJAcMGagBJARcJagAZAQIHBgAZAeMIdABRAawIegBZAVgFgABhAToEhwDB
AIgEiwBpAWEFjwB5AfkIlQBxAZgGmwCJAVIBEAB5AfkIowCBAdQBBgBRARwJAQDBAMUIqgDBAPkA
rwCRAdEAuwA0ACsJ0gA8ADoESgA8AEQE6QA8AAIHBgAIACwACgEIADAADwEpAKsANgMuAAsAtAEu
ABMAvQEuABsA3AEuACMA5QEuACsADgIuADMADgIuADsA5QEuAEMAFAIuAEsADgIuAFMAKwIuAFsA
DgIuAGMAMQIuAGsAWwIuAHMAaAJAAIsADwFAAIMAsgJDAHsAuwJDAIMAsgJJAKsARwNjAHsAuwJj
AIMAsgJpAKsAWwOAAIsADwGDAJMADwGDAJsADwGDAHsAuwKJAKsAaAOgAIsADwGpAIMA3AHAAIsA
DwHJAIMA3AHgAIsADwHjALsADwHjAFMADgLpALMADwEDAYMAsgIDAaMA1AIjAYMAsgIjAVsADgIg
AoMAsgIgAosADwFAAoMAsgJAAosADwFgAoMAsgJgAosADwGAAoMAsgKAAosADwGgAosADwHAAosA
DwHgAosADwHgAoMAsgIAA4sADwEgA4sADwEgA4MAsgJvALMAxgAEAAEABQAFAAYABwAJAAgAAADn
BowBAACvBZEBAACTBpYBAABaB5sBAABnBqABAACIAaUBAABXBKoBAADkAK8BAgAEAAMAAgAFAAUA
AgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAOAA8AAgAYABEALgA1ADwAQwC4AMsA2gDh
AASAAAABAAAAAAAAAAAAAAAAACsAAAAEAAAAAAAAAAAAAADvALIAAAAAAAQAAAAAAAAAAAAAAO8A
aQUAAAAACgAAAAAAAAAAAAAA+AC7AAAAAAANAAAAAAAAAAAAAAABAZYEAAAAAA0AAAAAAAAAAAAA
AAEBYgAAAAAAAAAAAAEAAABlCAAACAAEAAkABAAKAAcAAAAQABIAgQAAABAAKwCBAAAAAAAtAIEA
cwDBAHMA5AAAAABDb250ZXh0VmFsdWVgMQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBTVF83
MDE4ZTk0N2VlZjI0M2MzYmY0M2Q0NzY2OTExNDRhNQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVfX0lu
c3RhbmNlX18AdmFsdWVfXwBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMAQ3JlYXRlSW5z
dGFuY2UAZ2V0X0dldEluc3RhbmNlAGluc3RhbmNlAEdldEhhc2hDb2RlAFZhcmlhYmxlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAV3JpdGVMaW5lAEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBf
cmVzQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAEd1aWRBdHRy
aWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTdGFu
ZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRy
aWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AG1fVmFsdWUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBTeXN0ZW0uVGhyZWFk
aW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWF0aABNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABTY3JpcHRPYmplY3RN
b2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNzAxOGU5NDdlZWYyNDNjM2JmNDNkNDc2Njkx
MTQ0YTUuZGxsAGdldF9JdGVtAGdldF9GaWxlU3lzdGVtAEVudW0AU3lzdGVtLkNvbXBvbmVudE1v
ZGVsLkRlc2lnbgBTY3JpcHRNYWluAGdldF9BcHBsaWNhdGlvbgBNeUFwcGxpY2F0aW9uAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1
bHR1cmVJbmZvAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAbV9Db21w
dXRlck9iamVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAGdldF9SZXNv
dXJjZU1hbmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIAT3BlblRleHRGaWxl
V3JpdGVyAFN0cmVhbVdyaXRlcgBUZXh0V3JpdGVyAEVudGVyAGdldF9Db21wdXRlcgBTZXJ2ZXJD
b21wdXRlcgBNeUNvbXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9y
AFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2Vi
U2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25T
ZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJh
c2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBNaWNy
b3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzcwMThlOTQ3
ZWVmMjQzYzNiZjQzZDQ3NjY5MTE0NGE1Lk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF83MDE4
ZTk0N2VlZjI0M2MzYmY0M2Q0NzY2OTExNDRhNS5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAGdldF9WYXJpYWJsZXMATXlTZXR0aW5ncwBFcXVhbHMAUnVudGltZUhlbHBlcnMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AG1fU3luY09iamVjdABNeVByb2plY3QA
RXhpdABzZXRfVGFza1Jlc3VsdABtX0NvbnRleHQAU1RfNzAxOGU5NDdlZWYyNDNjM2JmNDNkNDc2
NjkxMTQ0YTUuTXkAZ2V0X0Fzc2VtYmx5AEZpbGVTeXN0ZW1Qcm94eQAAAAAAMU0AeQAuAFIAZQBz
AG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAhUwBuAG8AdwBTAFEATABDAG8A
bgBmAGkAZwBEAGkAcgAAFVMARgBQAGEAcwBzAHcAbwByAGQAABVjAG8AbgBmAGkAZwAuAHQAeAB0
AAAhWwBjAG8AbgBuAGUAYwB0AGkAbwBuAHMALgBTAEYAXQAAS2EAYwBjAG8AdQBuAHQAbgBhAG0A
ZQAgAD0AIAB2AHIAMAA1ADQANQA5AC4AZQBhAHMAdAAtAHUAcwAtADIALgBhAHoAdQByAGUAASl1
AHMAZQByAG4AYQBtAGUAIAA9ACAATwBTAFUARgBfAFMAUwBJAFMAABlwAGEAcwBzAHcAbwByAGQA
IAA9ACAAIgAAAyIAABNkAGIAbgBhAG0AZQAgAD0AIAAAHUgAaQBzAHQAbwByAHkAQwBhAHQAYQBs
AG8AZwAAG3MAYwBoAGUAbQBhAG4AYQBtAGUAIAA9ACAAABtIAGkAcwB0AG8AcgB5AFMAYwBoAGUA
bQBhAAApdwBhAHIAZQBoAG8AdQBzAGUAbgBhAG0AZQAgAD0AIABTAF8AVwBIAAATWwBvAHAAdABp
AG8AbgBzAF0AABdsAG8AZwBfAGYAaQBsAGUAIAA9ACAAABtTAG4AbwB3AFMAUQBMAEwAbwBnAEQA
aQByAAAHbABvAGcAACNsAG8AZwBfAGwAZQB2AGUAbAAgAD0AIABFAFIAUgBPAFIAAADYovltmGRV
RLAWb00IAuAwAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQBDg4ODgYV
EiQBEgwGFRIkARIIBhUSJAESZQYVEiQBEiAEIAATAAcAARJtEYCZBSAAEoCdByACAQ4SgJ0EAAEc
HAQAAQEcBAcCDg4FIAASgKkFIAASgK0GIAESgLEcAyAAHAMgAA4FIAASgLkFAAIODg4HIAISgMEO
AgYAAw4ODg4EIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRIkARMABwYVEnEBEwAG
FRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEEAAAAAAQBAAAA
BwYVEiQBEgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiADBhJ5AwYSfQMGEhgCBhwCBggDBhEoAwAA
AQQAABIMBAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUAAQESfQQAABIYBCAAEm0HEAEBHgAeAAcw
AQEBEB4ABAgAEgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNzAxOGU5NDdlZWYy
NDNjM2JmNDNkNDc2NjkxMTQ0YTUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAABQEAAQAA
KQEAJDA5NGJlZGUyLTNhM2YtNGU4NC05MWUzLWM3NDE3MGY2YzFhZgAADAEABzEuMC4wLjAAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC41CAEAAQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4wLjAAAGEBADRTeXN0
ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9f
SW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1dGVyAAATAQAOTXku
QXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMAALQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AAAAPAAAAAAAAAAAAAAaPAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDwAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANwAwADEAOABlADkANAA3AGUAZQBmADIANAAzAGMAMwBiAGYANAAzAGQANAA3ADYANgA5ADEA
MQA0ADQAYQA1AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA3ADAAMQA4AGUAOQA0ADcA
ZQBlAGYAMgA0ADMAYwAzAGIAZgA0ADMAZAA0ADcANgA2ADkAMQAxADQANABhADUALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADcAMAAxADgA
ZQA5ADQANwBlAGUAZgAyADQAMwBjADMAYgBmADQAMwBkADQANwA2ADYAOQAxADEANAA0AGEANQAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA3ADAAMQA4AGUA
OQA0ADcAZQBlAGYAMgA0ADMAYwAzAGIAZgA0ADMAZAA0ADcANgA2ADkAMQAxADQANABhADUAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACw8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\1 Create SnowSQL dir and config\4 Script Task - Create Table Name Query"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{483C7CD2-F8A1-47E0-B658-AE5083F94479}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4 Script Task - Create Table Name Query"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_af6449977cca4f69b26cda996878890f"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::Catalog,User::Schema,User::SQLStorage">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_af6449977cca4f69b26cda996878890f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_af6449977cca4f69b26cda996878890f")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_af6449977cca4f69b26cda996878890f.Properties.Settings.get_Default():ST_af6449977cca4f69b26cda996878890f.Properties.Sett" +
    "ings")]

namespace ST_af6449977cca4f69b26cda996878890f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_af6449977cca4f69b26cda996878890f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Modify these, specify which table in Snowflake to generate a history table for.
            var catalog = (string)Dts.Variables["Catalog"].Value;
            var schema = (string)Dts.Variables["Schema"].Value;
            var dir = (string)Dts.Variables["SQLStorage"].Value + "TableNames.sql";

            var sqlquery =
@"SELECT DISTINCT(TABLE_NAME) FROM information_schema.columns
WHERE
    table_catalog='{catalog}'
AND
    table_schema='{schema}'
AND
    COLUMN_NAME != 'ID'
AND
    TABLE_NAME NOT LIKE '%FIVETRAN%';";

            //Replace catalog, schema, and table in query
            sqlquery = sqlquery.Replace("{catalog}", catalog);
            sqlquery = sqlquery.Replace("{schema}", schema);

            using (StreamWriter writer = new StreamWriter(dir))
            {
                writer.WriteLine(sqlquery);
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_af6449977cca4f69b26cda996878890f</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_af6449977cca4f69b26cda996878890f</msb:DisplayName>
		<msb:ProjectId>{75EA5CF9-8153-4A0C-B42A-6DFBA63675A8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_af6449977cca4f69b26cda996878890f.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_af6449977cca4f69b26cda996878890f.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{01C51AEF-879E-4986-B85A-61ADA801C180}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_af6449977cca4f69b26cda996878890f</RootNamespace>
    <AssemblyName>ST_af6449977cca4f69b26cda996878890f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_af6449977cca4f69b26cda996878890f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_af6449977cca4f69b26cda996878890f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_af6449977cca4f69b26cda996878890f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_af6449977cca4f69b26cda996878890f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_af6449977cca4f69b26cda996878890f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_af6449977cca4f69b26cda996878890f.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPRQumAAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAmjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEgwAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAoBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB8
MAAAAAAAAEgAAAACAAUAhCEAAAwOAAABAAAAAAAAAJAvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBACvAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdBwAAAEKAigQAAAKbxEAAApyEQAAcG8SAAAKbxMAAAp0HAAAAQsCKBAAAApvEQAACnIfAABw
bxIAAApvEwAACnQcAAABcjUAAHAoFAAACnJTAABwDAhy8AEAcAZvFQAACgwIcgQCAHAHbxUAAAoM
cxYAAAoNCQhvFwAACt4KCSwGCW8YAAAK3AIoEAAAChZvGQAACioAARAAAAIAjwAJmAAKAAAAAB4C
KBoAAAoqHgIoGwAACiqufgEAAAQtHnIWAgBw0AMAAAIoHAAACm8dAAAKcx4AAAqAAQAABH4BAAAE
Khp+AgAABCoeAoACAAAEKhp+AwAABCoeAigfAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA7AMAACN+AABYBAAAqAUAACNTdHJpbmdzAAAAAAAKAACI
AgAAI1VTAIgMAAAQAAAAI0dVSUQAAACYDAAAdAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6
ATMAFgAAAQAAACEAAAAFAAAABgAAAAkAAAABAAAAHwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAA
AAEAAAAEAAAAAQAAAAEAAAAAAKMDAQAAAAAABgAxAosEBgDAAosEBgB9AXgEDwD/BAAABgCqASEE
BgAUAiEEBgD1ASEEBgCnAiEEBgBRAiEEBgBqAiEEBgDBASEEBgDcARIDCgCFAlIDCgD0AFIDBgBT
BAoABgDbA9QDBgBgAXgEBgB5BdQDBgBDBKsEBgAzBAwEDgAwAY0DDgCRAY0DDgAQAfcDBgBFAYsE
CgB7A1IDEgBBBZUAEgBcAJUABgAsA9QDBgBgBAoABgBlANQDBgC/ANQDBgBxANQDBgCfBSEEAAAA
AAEAAAAAAAEAAQABABAA7APuAjkAAQABAAAAEACyBA4FSQABAAMAAAEQAEsFDgVdAAMABwADAQAA
ZAUAAEEABAAKABEA4AN1ABEA5AB5ABEATAB9AAYGMwCBAFaAVAWEAFaAxACEAFAgAAAAAIYA8gMG
AAEAHCEAAAAAhhhrBAYAAQAkIQAAAACDGGsEBgABACwhAAAAAJMIPwSIAAEAWCEAAAAAkwjMAI0A
AQBfIQAAAACTCNgAkgABAGchAAAAAJYIgAWYAAIAbiEAAAAAhhhrBAYAAgB2IQAAAACRGHEEnQAC
AAAAAQDoAgkAawQBABEAawQGABkAawQKACkAawQQADEAawQQADkAawQQAEEAawQQAEkAawQQAFEA
awQQAFkAawQQAGEAawQQAGkAawQGAIkAawQGALEAawQVAMEAawQGAHEAXAUjAMkAPQUoANEAywMt
ANkA3gIzAOEAcgU3AOEARAA9AHkAawQQAOkAtQAQAPEAKAEGAMkAjAUBAHEAawQGAJEAawQGAPkA
gwBDAPkAmwVLAJkAawRRALkAawQGAAgAFABrAAgAGABwACkAcwDYAC4ACwCwAC4AEwC5AC4AGwDY
AC4AIwDhAC4AKwAKAS4AMwAKAS4AOwAKAS4AQwDhAC4ASwAQAS4AUwAKAS4AWwAnAUMAYwBwAEkA
cwDYAGEAewBwAGMAawBwABsAAwABAAQAAwAAAEMEoQAAAOwApgAAAIQFqwACAAQAAwACAAUABQAB
AAYABQACAAcABwAEgAAAAQAAAJEe0U4AAAAAAADuAgAABAAAAAAAAAAAAAAAWQA7AAAAAAANAAAA
AAAAAAAAAABiADMDAAAAAAQAAAAAAAAAAAAAAFkA1AMAAAAADQAAAAAAAAAAAAAAYgAUAAAAAAAA
AAAAAQAAALwEAAAFAAIAAAAAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
TWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAFZhcmlh
YmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAV3JpdGVMaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTVF9hZjY0NDk5NzdjY2E0ZjY5YjI2Y2RhOTk2ODc4
ODkwZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3Jp
cHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYWY2NDQ5OTc3Y2NhNGY2OWIy
NmNkYTk5Njg3ODg5MGYuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBTdHJlYW1Xcml0ZXIAVGV4
dFdyaXRlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9hZjY0NDk5NzdjY2E0ZjY5YjI2Y2Rh
OTk2ODc4ODkwZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
U1RfYWY2NDQ5OTc3Y2NhNGY2OWIyNmNkYTk5Njg3ODg5MGYuUHJvcGVydGllcwBnZXRfVmFyaWFi
bGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QA
Z2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAAPQwBhAHQAYQBsAG8AZwAA
DVMAYwBoAGUAbQBhAAAVUwBRAEwAUwB0AG8AcgBhAGcAZQAAHVQAYQBiAGwAZQBOAGEAbQBlAHMA
LgBzAHEAbAAAgZtTAEUATABFAEMAVAAgAEQASQBTAFQASQBOAEMAVAAoAFQAQQBCAEwARQBfAE4A
QQBNAEUAKQAgAEYAUgBPAE0AIABpAG4AZgBvAHIAbQBhAHQAaQBvAG4AXwBzAGMAaABlAG0AYQAu
AGMAbwBsAHUAbQBuAHMADQAKAFcASABFAFIARQANAAoAIAAgACAAIAB0AGEAYgBsAGUAXwBjAGEA
dABhAGwAbwBnAD0AJwB7AGMAYQB0AGEAbABvAGcAfQAnAA0ACgBBAE4ARAANAAoAIAAgACAAIAB0
AGEAYgBsAGUAXwBzAGMAaABlAG0AYQA9ACcAewBzAGMAaABlAG0AYQB9ACcADQAKAEEATgBEAA0A
CgAgACAAIAAgAEMATwBMAFUATQBOAF8ATgBBAE0ARQAgACEAPQAgACcASQBEACcADQAKAEEATgBE
AA0ACgAgACAAIAAgAFQAQQBCAEwARQBfAE4AQQBNAEUAIABOAE8AVAAgAEwASQBLAEUAIAAnACUA
RgBJAFYARQBUAFIAQQBOACUAJwA7AAETewBjAGEAdABhAGwAbwBnAH0AABF7AHMAYwBoAGUAbQBh
AH0AAHFTAFQAXwBhAGYANgA0ADQAOQA5ADcANwBjAGMAYQA0AGYANgA5AGIAMgA2AGMAZABhADkA
OQA2ADgANwA4ADgAOQAwAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAOaX4T4XXOhFjNKkUgCSHeEABCABAQgDIAABBSABARERBCABAQ4FIAEBEVUHBwQODg4SPQQg
ABJlBCAAEmkFIAESbRwDIAAcBQACDg4OBSACDg4OBwABEn0RgIEFIAASgIUHIAIBDhKAhQi3elxW
GTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQES
UQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfYWY2NDQ5OTc3Y2NhNGY2OWIyNmNkYTk5Njg3ODg5MGYA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAcDAAAAAAAAAAAAAAijAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwwAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABANFOkR4AAAEA0U6RHj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AYQBmADYANAA0ADkAOQA3ADcAYwBjAGEANABmADYAOQBiADIANgBjAGQAYQA5ADkA
NgA4ADcAOAA4ADkAMABmAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcAOAAyADUALgAyADAAMQA3ADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AYQBmADYANAA0ADkAOQA3ADcAYwBjAGEANABmADYAOQBiADIANgBjAGQAYQA5ADkANgA4
ADcAOAA4ADkAMABmAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwBhAGYANgA0ADQAOQA5ADcANwBjAGMAYQA0AGYANgA5AGIAMgA2AGMAZABh
ADkAOQA2ADgANwA4ADgAOQAwAGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AYQBmADYANAA0ADkAOQA3ADcAYwBjAGEANABmADYAOQBiADIANgBjAGQAYQA5
ADkANgA4ADcAOAA4ADkAMABmAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADgAMgA1AC4AMgAwADEANwA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADgAMgA1AC4AMgAwADEANwA3AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJwwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\1 Create SnowSQL dir and config\5 Process Task - Get Table Names"
          DTS:CreationName="Microsoft.ExecuteProcess"
          DTS:Description="Execute Process Task"
          DTS:DTSID="{60535044-FE26-4C01-8EFD-F42EF0C985F0}"
          DTS:ExecutableType="Microsoft.ExecuteProcess"
          DTS:LocaleID="-1"
          DTS:ObjectName="5 Process Task - Get Table Names"
          DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Arguments">"--config " +  "\"" +  @[User::SnowSQLConfigDir]   + "config.txt" +  "\"" + " -c SF -f " +  "\"" + @[User::SQLStorage]  + "TableNames.sql " +  "\""+ " -o output_format=csv -o friendly=false -o header=false -o timing=false -o output_file=" +  "\"" +  @[User::SQLStorage] + "tables.csv" +  "\""</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ExecuteProcessData
              Executable="C:\Program Files\Snowflake SnowSQL\snowsql.exe"
              Arguments="--config &quot;C:\temp\DWAH\SnowSQL\config.txt&quot; -c SF -f &quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\TableNames.sql &quot; -o output_format=csv -o friendly=false -o header=false -o timing=false -o output_file=&quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\tables.csv&quot;" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\1 Create SnowSQL dir and config\6 Script Task - Set Table Names"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{03B2B7B8-7BD4-43C0-9622-2F6F6B9B46F0}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="6 Script Task - Set Table Names"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_3e891becbb544c22a787464bce597618"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::SQLStorage"
              ReadWriteVariables="User::Catalog,User::Schema,User::TableNames,User::TableNames2,User::TableNames3">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_66d27c026e81456e94836a065e4d4ae8.Properties.Settings.get_Default():ST_66d27c026e81456e94836a065e4d4ae8.Properties.Sett" +
    "ings")]

namespace ST_66d27c026e81456e94836a065e4d4ae8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections.Generic;
#endregion

namespace ST_66d27c026e81456e94836a065e4d4ae8
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            string dir = Dts.Variables["SQLStorage"].Value + "\\";
            var tableNames = new List<string>();
            var tableNames2 = new List<string>();
            var tableNames3 = new List<string>();
            var count = 0;
            using (var reader = new StreamReader(dir + "tables.csv"))
            {
                while (!reader.EndOfStream)
                {
                    var value = reader.ReadLine().Replace("\"", "");
                    //value = value.Replace("ASCENDV2__", "ASCENDV_2_");
                    //value = value.Replace("__", "_");
                    if (count < 14)
                    {
                        tableNames.Add(value);
                    }
                    else if(count > 14 && count < 30)
                    {
                        tableNames2.Add(value);
                    }
                    else
                    {
                        tableNames3.Add(value);
                    }
                    count++;
                }
            }
            Dts.Variables["TableNames"].Value = tableNames;
            Dts.Variables["TableNames2"].Value = tableNames2;
            Dts.Variables["TableNames3"].Value = tableNames3;

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_3e891becbb544c22a787464bce597618.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{FF366ED8-D1F6-42E5-8626-623C56EE2B97}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_66d27c026e81456e94836a065e4d4ae8</RootNamespace><AssemblyName>ST_3e891becbb544c22a787464bce597618</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_66d27c026e81456e94836a065e4d4ae8</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_66d27c026e81456e94836a065e4d4ae8</msb:DisplayName>
		<msb:ProjectId>{0EF30C17-F174-4C97-B762-3873093482EA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_3e891becbb544c22a787464bce597618.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_66d27c026e81456e94836a065e4d4ae8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_66d27c026e81456e94836a065e4d4ae8")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_66d27c026e81456e94836a065e4d4ae8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_66d27c026e81456e94836a065e4d4ae8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_66d27c026e81456e94836a065e4d4ae8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_66d27c026e81456e94836a065e4d4ae8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_66d27c026e81456e94836a065e4d4ae8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_3e891becbb544c22a787464bce597618.dll">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
cQDOBAYAmQDOBAYAAQHxAHAAAQH+BXkAoQDOBH8AwQDOBAYACAAUAJkACAAYAJ4AKQBzAAYBLgAL
AN4ALgATAOcALgAbAAYBLgAjAA8BLgArADgBLgAzADgBLgA7ADgBLgBDAA8BLgBLAD4BLgBTADgB
LgBbAFUBQwBjAJ4ASQBzAAYBYQB7AJ4AYwBrAJ4AGwADAAEABAADAAAAvgTPAAAAWQHUAAAA5wXZ
AAIABAADAAIABQAFAAEABgAFAAIABwAHAEsABIAAAAEAAABgHqxjAAAAAAAACAAAAAQAAAAAAAAA
AAAAAIcAigAAAAAADQAAAAAAAAAAAAAAkACGAwAAAAAEAAAAAAAAAAAAAACHADcEAAAAAA0AAAAA
AAAAAAAAAJAAYwAAAAAAAAAAAAEAAAAfBQAABQACAAAAAAAATGlzdGAxAFNUXzNlODkxYmVjYmI1
NDRjMjJhNzg3NDY0YmNlNTk3NjE4AFNUXzY2ZDI3YzAyNmU4MTQ1NmU5NDgzNmEwNjVlNGQ0YWU4
ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVf
XwBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBZGQAUmVwbGFjZQBkZWZhdWx0
SW5zdGFuY2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBSZWFkTGluZQBUeXBlAEZh
aWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVs
AFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8zZTg5MWJlY2JiNTQ0YzIyYTc4NzQ2NGJjZTU5NzYx
OC5kbGwAZ2V0X0VuZE9mU3RyZWFtAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNj
cmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVt
LlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAZ2V0X1Jlc291
cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1l
LkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF82NmQyN2MwMjZlODE0NTZlOTQ4
MzZhMDY1ZTRkNGFlOC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9k
ZXMAU1RfNjZkMjdjMDI2ZTgxNDU2ZTk0ODM2YTA2NWU0ZDRhZTguUHJvcGVydGllcwBnZXRfVmFy
aWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmpl
Y3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAAAFVMAUQBMAFMAdABv
AHIAYQBnAGUAAANcAAAVdABhAGIAbABlAHMALgBjAHMAdgAAAyIAAAEAFVQAYQBiAGwAZQBOAGEA
bQBlAHMAABdUAGEAYgBsAGUATgBhAG0AZQBzADIAABdUAGEAYgBsAGUATgBhAG0AZQBzADMAAHFT
AFQAXwA2ADYAZAAyADcAYwAwADIANgBlADgAMQA0ADUANgBlADkANAA4ADMANgBhADAANgA1AGUA
NABkADQAYQBlADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAR
f/wQc9L3Qr8WqJo0ejB1AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZFQcGFRI9AQ4VEj0BDhUS
PQEOCBJBDgQgABJpBCAAEm0FIAEScRwDIAAcBQACDhwcBRUSPQEOBQACDg4OAyAADgUgAg4ODgUg
AQETAAMgAAIEIAEBHAgAARKAgRGAhQUgABKAiQcgAgEOEoCJCLd6XFYZNOCJCImEXc2AgMyRBAAA
AAAEAQAAAAMGElEDBhJVAwYSEAIGCAMGERQEAAASUQQAABJVBQABARJVBAAAEhADAAABBAgAElEE
CAASVQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAA
ACgBACNTVF82NmQyN2MwMjZlODE0NTZlOTQ4MzZhMDY1ZTRkNGFlOAAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA7C8AAAAAAAAAAAAA
BjAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgvAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAKxjYB4AAAEArGNgHj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANgA2AGQAMgA3AGMAMAAyADYAZQA4ADEANAA1ADYAZQA5ADQAOAAzADYAYQAwADYA
NQBlADQAZAA0AGEAZQA4AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcANwA3ADYALgAyADUANQAxADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMwBlADgAOQAxAGIAZQBjAGIAYgA1ADQANABjADIAMgBhADcAOAA3ADQANgA0AGIAYwBl
ADUAOQA3ADYAMQA4AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAzAGUAOAA5ADEAYgBlAGMAYgBiADUANAA0AGMAMgAyAGEANwA4ADcANAA2
ADQAYgBjAGUANQA5ADcANgAxADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8ANgA2AGQAMgA3AGMAMAAyADYAZQA4ADEANAA1ADYAZQA5ADQAOAAzADYAYQAw
ADYANQBlADQAZAA0AGEAZQA4AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADcANwA2AC4AMgA1ADUAMQA2AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADcANwA2AC4AMgA1ADUAMQA2AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABgwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\1 Create SnowSQL dir and config.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{6DCAEF39-0CCB-491C-A8D7-64821007CAFB}"
          DTS:From="Package\1 Create SnowSQL dir and config\2 Script Task - Create SnowSQL folder"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\1 Create SnowSQL dir and config\3 Script Task - Create SnowSQL config" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\1 Create SnowSQL dir and config.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{F0CAA565-6384-47C8-9F6F-4050290D89ED}"
          DTS:From="Package\1 Create SnowSQL dir and config\3 Script Task - Create SnowSQL config"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\1 Create SnowSQL dir and config\4 Script Task - Create Table Name Query" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\1 Create SnowSQL dir and config.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{67D028BA-F0FE-47D3-8ADB-2FE5EB78A960}"
          DTS:From="Package\1 Create SnowSQL dir and config\4 Script Task - Create Table Name Query"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\1 Create SnowSQL dir and config\5 Process Task - Get Table Names" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\1 Create SnowSQL dir and config.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{43825A49-C85E-4266-B3FF-41EF41E5878A}"
          DTS:From="Package\1 Create SnowSQL dir and config\1 Execute SQL Task - Get Snowflake Password"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\1 Create SnowSQL dir and config\2 Script Task - Create SnowSQL folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\1 Create SnowSQL dir and config.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{C54FA78E-149B-42DE-88FD-1F7B7F3B557D}"
          DTS:From="Package\1 Create SnowSQL dir and config\5 Process Task - Get Table Names"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\1 Create SnowSQL dir and config\6 Script Task - Set Table Names" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\2 Create History Tables"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{9CC3967E-86DF-460A-9449-0FDBED5AD93C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="2 Create History Tables">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{59A4F7C9-D0C3-4951-A42A-8BB6B3DB402D}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="2-1 Foreach Loop Container - Create History Table Set 1">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
            DTS:DTSID="{573404A2-5F9B-47F8-ACC1-A89F2DC2C96A}"
            DTS:ObjectName="{573404A2-5F9B-47F8-ACC1-A89F2DC2C96A}">
            <DTS:ObjectData>
              <FEEFVE
                VariableName="User::TableNames" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{FBCC98BE-C250-4F35-AC1E-EF71ACCFFB92}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="Table">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\1 Script Task - Create Folder"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{66C028E0-651C-4688-867A-F8B23C0E3B64}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="1 Script Task - Create Folder"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c6fc86bcc0d64126ac165df9086b286e"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="VisualBasic"
                  ReadOnlyVariables="User::SQLStorage,User::Table">
                  <ProjectItem
                    Name="My Project\AssemblyInfo.vb"
                    Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_ea5b5d781f59475d8e90a4605f58b2da")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_ea5b5d781f59475d8e90a4605f58b2da")> 
<Assembly: AssemblyCopyright("Copyright @  2021")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("be382f33-10d5-44a7-aa91-7b708387f824")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c6fc86bcc0d64126ac165df9086b286e.vbproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{8C2E0B00-8680-4B5D-A3F3-A0B052710EEC}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>My Project</AppDesignerFolder><RootNamespace>ST_ea5b5d781f59475d8e90a4605f58b2da</RootNamespace><AssemblyName>ST_c6fc86bcc0d64126ac165df9086b286e</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>true</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>false</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><Import Include="Microsoft.VisualBasic" /><Import Include="System" /><Import Include="System.Collections" /><Import Include="System.Data" /><Import Include="System.Diagnostics" /><Import Include="System.Windows.Forms" /></ItemGroup><ItemGroup><AppDesigner Include="My Project\" /><Compile Include="My Project\AssemblyInfo.vb"><SubType>Code</SubType></Compile><EmbeddedResource Include="My Project\Resources.resx"><Generator>VbMyResourcesResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.vb</LastGenOutput><CustomToolNamespace>My.Resources</CustomToolNamespace></EmbeddedResource><Compile Include="My Project\Resources.Designer.vb"><AutoGen>True</AutoGen><DesignTime>True</DesignTime><DependentUpon>Resources.resx</DependentUpon><SubType>Code</SubType></Compile><None Include="My Project\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.vb</LastGenOutput></None><Compile Include="My Project\Settings.Designer.vb"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon><SubType>Code</SubType></Compile><Compile Include="ScriptMain.vb"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a VB project.--><Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_ea5b5d781f59475d8e90a4605f58b2da</msb:CodeName>
		<msb:DisplayName>ST_ea5b5d781f59475d8e90a4605f58b2da</msb:DisplayName>
		<msb:ProjectId>{37D8279E-33E5-4893-8A4C-596F5AA1A36F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c6fc86bcc0d64126ac165df9086b286e.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.vb"
                    Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math

'Imports added for this script
Imports System.IO

Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here

        Dim Dir As String = Dts.Variables("SQLStorage").Value.ToString + "\" + Dts.Variables("Table").Value.ToString + "\"
        Dim fireAgain As Boolean
        Dts.Events.FireInformation(0, "Table3", Dir, Nothing, 0, fireAgain)


        ' Delete the folder
        If Directory.Exists(Dir) = True Then
            Directory.Delete(Dir, True)
        End If

        'Create the folder
        If Directory.Exists(Dir) = False Then
            Directory.CreateDirectory(Dir)
        End If


        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c6fc86bcc0d64126ac165df9086b286e.dll">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
DwAFAQAAYwcAAGEACQARAAUBAAAQAAAAYQAJABgAAgEAANUIAACVAAoAGgAxAF0GJAExADQGLAEx
AEgGNAExAHYGPAERAPsGRAERAJ4BSAERAE0ETAERAPwIUAEhACcJ4gAGBoYAUwFWgMUIVgFWgH4B
VgFQIAAAAAAGGA0HBgABAFggAAAAAAYYDQcGAAEAYCAAAAAAERgTB1oBAQCKIAAAAAATCOMGXgEB
AJYgAAAAABMIsAVjAQEAoiAAAAAAEwjUBmgBAQCuIAAAAAATCFMHbQEBALogAAAAAAMYDQcGAAEA
wiAAAAAAFgiUBnIBAQDuIAAAAAAWCIYBdwEBAPUgAAAAABYIkgF8AQEA/SAAAAAAERgTB1oBAgAO
IQAAAAAGGA0HBgACABghAAAAABYIVQSCAQIAdCEAAAAABhgNBwYAAgB8IQAAAAAGAKsFBgACABwi
AAAAAMYCrwi6AAIAKiIAAAAAxgIdAb8AAwAyIgAAAACDAHYBhwEDAD4iAAAAAMYCowSLAAMASCIA
AAAAEQBzAIwBAwBoIgAAAAABAF8AlAEEALogAAAAAAYYDQcGAAUAdCIAAAAAAwgEAUoABQCoIgAA
AAAGGA0HBgAFAAAAAQByBAAAAQAyBgAAAQAUAQAAAQAUAQkADQcBABEADQcGABkADQcKACkADQcQ
ADEADQcQADkADQcQAEEADQcQAEkADQcQAFEADQcQAFkADQcVAGEADQcVAGkADQcQAHEADQcQAHkA
DQcQAIEADQcaAJEADQcgAKkADQcGALEADQcGALkADQcGANEADQcmAOkADQcQAAkBDQcGABEBDQcG
AJkADQcGAKEADQcGAAwADQcGABQADQcGABwADQcGACQADQcGAAwABAFKABQABAFKABwABAFKACQA
BAFKAMEADQcGANkARAFPANkAWAlXAPEADQddAEEBaQRlAAEBDQcGAEkB3QZqAEkBEwlqABkBDQcG
ABkBzQh0AFEBlgh6AFkBcwWAAGEBVQSHAMEAowSLAGkB9QiPAFEB4wiXAHEBzgWdAHkB7gioAHkB
AwKtAHkBZQmzAFEBGAkBAMEArwi6AMEAHQG/AIkB9QDLADQAJwniADwAVQRKADwAXwT5ADwADQcG
AAgALAAaAQgAMAAfASkAqwBGAy4ACwDEAS4AEwDNAS4AGwDsAS4AIwD1AS4AKwAeAi4AMwAeAi4A
OwD1AS4AQwAkAi4ASwAeAi4AUwA7Ai4AWwAeAi4AYwBBAi4AawBrAi4AcwB4AkAAiwAfAUAAgwDC
AkMAewDLAkMAgwDCAkkAqwBXA2MAewDLAmMAgwDCAmkAqwBrA4AAiwAfAYMAkwAfAYMAmwAfAYMA
ewDLAokAqwB4A6AAiwAfAakAgwDsAcAAiwAfAckAgwDsAeAAiwAfAeMAuwAfAeMAUwAeAukAswAf
AQMBgwDCAgMBowDkAiMBgwDCAiMBWwAeAiACgwDCAiACiwAfAUACgwDCAkACiwAfAWACgwDCAmAC
iwAfAYACgwDCAoACiwAfAaACiwAfAcACiwAfAeACiwAfAeACgwDCAgADiwAfASADiwAfASADgwDC
Am8AwwDWAAQAAQAFAAUABgAHAAkACAAAAPIGnAEAAMIFoQEAANgGpgEAAGUHqwEAAJgGsAEAAKIB
tQEAAHIEugEAAAgBvwECAAQAAwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQABAAsADQAC
AA4ADwACABgAEQAuADUAPABDAMgA2wDqAPEABIAAAAEAAAAAAAAAAAAAAAAA0QAAAAQAAAAAAAAA
AAAAAP8AsgAAAAAABAAAAAAAAAAAAAAA/wB8BQAAAAAKAAAAAAAAAAAAAAAIAbsAAAAAAA0AAAAA
AAAAAAAAABEBsQQAAAAADQAAAAAAAAAAAAAAEQE+AAAAAAAAAAAAAQAAAE8IAAAIAAQACQAEAAoA
BwAAABAAEgBdAAAAEAArAF0AAAAAAC0AXQBzANEAcwD0AAAAAAAAQ29udGV4dFZhbHVlYDEAVGhy
ZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuTWFuYWdlZERUUwBUAERpc3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9f
AHZhbHVlX18AU1RfZWE1YjVkNzgxZjU5NDc1ZDhlOTBhNDYwNWY1OGIyZGEAbXNjb3JsaWIATWlj
cm9zb2Z0LlZpc3VhbEJhc2ljAFNUX2M2ZmM4NmJjYzBkNjQxMjZhYzE2NWRmOTA4NmIyODZlAENy
ZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBWYXJpYWJs
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVz
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBHdWlkQXR0cmli
dXRlAEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRh
cmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmli
dXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBt
X1ZhbHVlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVtLlRocmVhZGlu
ZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1hdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAU2NyaXB0T2JqZWN0TW9k
ZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2M2ZmM4NmJjYzBkNjQxMjZhYzE2NWRmOTA4NmIy
ODZlLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWdu
AFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGljYXRpb24ARmlyZUluZm9ybWF0aW9u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAEN1bHR1cmVJbmZvAERpcmVjdG9yeUluZm8AbV9BcHBPYmplY3RQcm92aWRlcgBtX1VzZXJP
YmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2VzT2Jq
ZWN0UHJvdmlkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBF
dmVudHNPYmplY3RXcmFwcGVyAGdldF9Vc2VyAEVudGVyAGdldF9Db21wdXRlcgBNeUNvbXB1dGVy
AF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGlj
cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2
aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVu
dGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2Vh
NWI1ZDc4MWY1OTQ3NWQ4ZTkwYTQ2MDVmNThiMmRhLk15LlJlc291cmNlcwBNeVJlc291cmNlcwBT
VF9lYTViNWQ3ODFmNTk0NzVkOGU5MGE0NjA1ZjU4YjJkYS5SZXNvdXJjZXMucmVzb3VyY2VzAERl
YnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMATXlTZXR0aW5ncwBFcXVhbHMAUnVudGltZUhlbHBl
cnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBFeGlzdHMAQ29uY2F0
AG1fU3luY09iamVjdABNeVByb2plY3QARXhpdABzZXRfVGFza1Jlc3VsdABtX0NvbnRleHQAU1Rf
ZWE1YjVkNzgxZjU5NDc1ZDhlOTBhNDYwNWY1OGIyZGEuTXkAZ2V0X0Fzc2VtYmx5AENyZWF0ZURp
cmVjdG9yeQAAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMA
ZQBzAAAVUwBRAEwAUwB0AG8AcgBhAGcAZQAAA1wAAAtUAGEAYgBsAGUAAA1UAGEAYgBsAGUAMwAA
AH8FFxDXmPxJh1RcmlZkJD0ABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcg
BAEODg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgJkFIAASgJ0HIAIB
DhKAnQQAARwcBAABARwEBwIOAgUgABKAqQUgABKArQYgARKAsRwDIAAcAyAADgcABA4ODg4OBSAA
EoC5CiAGAQgODg4IEAIEAAECDgUAAgEOAgYAARKAwQ4EIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQK
AR4ABAcBEwAGFRIkARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9f
fxHVCjoIiYRdzYCAzJEEAAAAAAQBAAAABwYVEiQBEgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiAD
BhJ5AwYSfQMGEhgCBhwCBggDBhEoAwAAAQQAABIMBAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUA
AQESfQQAABIYBCAAEm0HEAEBHgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEiAECAASeQQI
ABJ9BAgAEhgEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU1RfZWE1YjVkNzgxZjU5NDc1ZDhlOTBhNDYwNWY1OGIyZGEAAAUBAAAAABYBABFD
b3B5cmlnaHQgQCAgMjAyMQAABQEAAQAAKQEAJGJlMzgyZjMzLTEwZDUtNDRhNy1hYTkxLTdiNzA4
Mzg3ZjgyNAAADAEABzEuMC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41CAEAAQAAAAAAGAEACk15VGVt
cGxhdGUIMTEuMC4wLjAAAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0
cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAA
EAEAC015LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXku
V2ViU2VydmljZXMAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABsOQAAAAAAAAAAAACGOQAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAeDkAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBlAGEANQBiADUAZAA3ADgAMQBmADUAOQA0ADcANQBkADgAZQA5ADAAYQA0ADYAMAA1AGYA
NQA4AGIAMgBkAGEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGMANgBmAGMAOAA2AGIA
YwBjADAAZAA2ADQAMQAyADYAYQBjADEANgA1AGQAZgA5ADAAOAA2AGIAMgA4ADYAZQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYwA2AGYA
YwA4ADYAYgBjAGMAMABkADYANAAxADIANgBhAGMAMQA2ADUAZABmADkAMAA4ADYAYgAyADgANgBl
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAYQA1AGIA
NQBkADcAOAAxAGYANQA5ADQANwA1AGQAOABlADkAMABhADQANgAwADUAZgA1ADgAYgAyAGQAYQAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAmDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\2 Script Task - Generate Fields Command"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{05C52823-97FD-423E-A48C-21B49AE59A96}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="2 Script Task - Generate Fields Command"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_6af3621bad0842628de84d2edfe55c00"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Catalog,User::Schema,User::SQLStorage,User::Table">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections.Generic;
#endregion

namespace ST_fb05d46188b0481895042273cb5ed851
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Modify these, specify which table in Snowflake to generate a history table for.
            var catalog = (string) Dts.Variables["Catalog"].Value;
            var schema = (string) Dts.Variables["Schema"].Value;
            var table = (string) Dts.Variables["Table"].Value;
            var dir = (string) Dts.Variables["SQLStorage"].Value + table + "_Fields.sql";

            var sqlquery =
@"SELECT COLUMN_NAME FROM information_schema.columns
WHERE
    table_catalog='{catalog}'
AND
    table_schema='{schema}'
AND
    table_name='{table}'
AND
    COLUMN_NAME != 'ID';";

            //Replace catalog, schema, and table in query
            sqlquery = sqlquery.Replace("{catalog}", catalog);
            sqlquery = sqlquery.Replace("{schema}", schema);
            sqlquery = sqlquery.Replace("{table}", table);
            
            using (StreamWriter writer = new StreamWriter(dir))
            {
                writer.WriteLine(sqlquery);
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_6af3621bad0842628de84d2edfe55c00.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{EEB16687-8058-4612-9047-307B5BAC32EF}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_fb05d46188b0481895042273cb5ed851</RootNamespace><AssemblyName>ST_6af3621bad0842628de84d2edfe55c00</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_fb05d46188b0481895042273cb5ed851</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_fb05d46188b0481895042273cb5ed851</msb:DisplayName>
		<msb:ProjectId>{BB1A5D2F-BB49-4A8F-ABBB-D2FED5C52EE9}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_6af3621bad0842628de84d2edfe55c00.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Settings.get_Default():ST_fb05d46188b0481895042273cb5ed851.Properties.Sett" +
    "ings")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fb05d46188b0481895042273cb5ed851.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_7cfe74ebe5b24fbeb1f3d1e45d23afd4.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF0JVWAAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAA3jAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIwwAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5BAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
MAAAAAAAAEgAAAACAAUAuCEAABwOAAABAAAAAAAAANQvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBADhAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdBwAAAEKAigQAAAKbxEAAApyEQAAcG8SAAAKbxMAAAp0HAAAAQsCKBAAAApvEQAACnIfAABw
bxIAAApvEwAACnQcAAABDAIoEAAACm8RAAAKcisAAHBvEgAACm8TAAAKdBwAAAEIckEAAHAoFAAA
CnJZAABwDQlyzAEAcAZvFQAACg0JcuABAHAHbxUAAAoNCXLyAQBwCG8VAAAKDXMWAAAKEwQRBAlv
FwAACt4MEQQsBxEEbxgAAArcAigQAAAKFm8ZAAAKKgAAAAEQAAACAL4ACsgADAAAAAAeAigaAAAK
Kh4CKBsAAAoqrn4BAAAELR5yAgIAcNADAAACKBwAAApvHQAACnMeAAAKgAEAAAR+AQAABCoafgIA
AAQqHgKAAgAABCoafgMAAAQqHgIoHwAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAAOwDAAAjfgAAWAQAAMwFAAAjU3RyaW5ncwAAAAAkCgAAdAIAACNV
UwCYDAAAEAAAACNHVUlEAAAAqAwAAHQBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYA
AAEAAAAhAAAABQAAAAYAAAAJAAAAAQAAAB8AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAA
BAAAAAEAAAABAAAAAADHAwEAAAAAAAYAeQKvBAYACAOvBAYAxQGcBA8AIwUAAAYA8gFFBAYAXAJF
BAYAPQJFBAYA7wJFBAYAmQJFBAYAsgJFBAYACQJFBAYAJAI2AwoAzQJ2AwoAPAF2AwYAdwRSAAYA
/wP4AwYAqAGcBAYAnQX4AwYAZwTPBAYAVwQwBA4AeAGxAw4A2QGxAw4AWAEbBAYAjQGvBAoAnwN2
AxIAZQXdABIApADdAAYAUAP4AwYAhARSAAYArQD4AwYABwH4AwYAuQD4AwYAwwVFBAAAAABJAAAA
AAABAAEAAQAQABAEAQA5AAEAAQAAABAA1gQyBUkAAQADAAABEABvBTIFXQADAAcAAwEAAIgFAABB
AAQACgARAAQEdwARACwBewARAJQAfwAGBnsAgwBWgHgFhgBWgAwBhgBQIAAAAACGABYEBgABAFAh
AAAAAIYYjwQGAAEAWCEAAAAAgxiPBAYAAQBgIQAAAACTCGMEigABAIwhAAAAAJMIFAGPAAEAkyEA
AAAAkwggAZQAAQCbIQAAAACWCKQFmgACAKIhAAAAAIYYjwQGAAIAqiEAAAAAkRiVBJ8AAgAAAAEA
MAMJAI8EAQARAI8EBgAZAI8ECgApAI8EEAAxAI8EEAA5AI8EEABBAI8EEABJAI8EEABRAI8EEABZ
AI8EEABhAI8EEABpAI8EBgCJAI8EBgCxAI8EFQDBAI8EBgBxAIAFJADJAGEFKQDRAO8DLgDZACYD
NADhAJYFOADhAIwAPwB5AI8EEADpAP0AEADxAHABBgDJALAFAQBxAI8EBgCRAI8EBgD5AMsARQD5
AL8FTQCZAI8EUwC5AI8EBgAIABQAbQAIABgAcgApAHMA2gAuAAsAsgAuABMAuwAuABsA2gAuACMA
4wAuACsADAEuADMADAEuADsADAEuAEMA4wAuAEsAEgEuAFMADAEuAFsAKQFDAGMAcgBJAHMA2gBh
AHsAcgBjAGsAcgAbAAMAAQAEAAMAAABnBKMAAAA0AagAAACoBa0AAgAEAAMAAgAFAAUAAQAGAAUA
AgAHAAcABIAAAAEAAABEHsZsAAAAAAAAJQAAAAQAAAAAAAAAAAAAAFsAgwAAAAAADQAAAAAAAAAA
AAAAZABXAwAAAAAEAAAAAAAAAAAAAABbAPgDAAAAAA0AAAAAAAAAAAAAAGQAXAAAAAAAAAAAAAEA
AADgBAAABQACAAAAAFNUX2ZiMDVkNDYxODhiMDQ4MTg5NTA0MjI3M2NiNWVkODUxAFNUXzdjZmU3
NGViZTViMjRmYmViMWYzZDFlNDVkMjNhZmQ0ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBSZXBsYWNlAGRlZmF1bHRJbnN0
YW5jZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdyaXRlTGluZQBUeXBlAEZhaWx1
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9i
amVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRh
c2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBTdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNUXzdjZmU3NGViZTViMjRmYmViMWYzZDFlNDVkMjNhZmQ0LmRsbABnZXRfSXRl
bQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9S
ZXNvdXJjZU1hbmFnZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfZmIwNWQ0NjE4OGIwNDgxODk1MDQyMjczY2I1ZWQ4NTEuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2ZiMDVkNDYxODhiMDQ4MTg5NTA0MjI3
M2NiNWVkODUxLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0
AGdldF9Bc3NlbWJseQAAD0MAYQB0AGEAbABvAGcAAA1TAGMAaABlAG0AYQAAC1QAYQBiAGwAZQAA
FVMAUQBMAFMAdABvAHIAYQBnAGUAABdfAEYAaQBlAGwAZABzAC4AcwBxAGwAAIFxUwBFAEwARQBD
AFQAIABDAE8ATABVAE0ATgBfAE4AQQBNAEUAIABGAFIATwBNACAAaQBuAGYAbwByAG0AYQB0AGkA
bwBuAF8AcwBjAGgAZQBtAGEALgBjAG8AbAB1AG0AbgBzAA0ACgBXAEgARQBSAEUADQAKACAAIAAg
ACAAdABhAGIAbABlAF8AYwBhAHQAYQBsAG8AZwA9ACcAewBjAGEAdABhAGwAbwBnAH0AJwANAAoA
QQBOAEQADQAKACAAIAAgACAAdABhAGIAbABlAF8AcwBjAGgAZQBtAGEAPQAnAHsAcwBjAGgAZQBt
AGEAfQAnAA0ACgBBAE4ARAANAAoAIAAgACAAIAB0AGEAYgBsAGUAXwBuAGEAbQBlAD0AJwB7AHQA
YQBiAGwAZQB9ACcADQAKAEEATgBEAA0ACgAgACAAIAAgAEMATwBMAFUATQBOAF8ATgBBAE0ARQAg
ACEAPQAgACcASQBEACcAOwABE3sAYwBhAHQAYQBsAG8AZwB9AAARewBzAGMAaABlAG0AYQB9AAAP
ewB0AGEAYgBsAGUAfQAAcVMAVABfAGYAYgAwADUAZAA0ADYAMQA4ADgAYgAwADQAOAAxADgAOQA1
ADAANAAyADIANwAzAGMAYgA1AGUAZAA4ADUAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAsS+YQ1AL6kCS0GiGltKg2QAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQER
VQgHBQ4ODg4SPQQgABJlBCAAEmkFIAESbRwDIAAcBgADDg4ODgUgAg4ODgcAARJ9EYCBBSAAEoCF
ByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSTQMGElEDBhIQAgYIAwYRFAQA
ABJNBAAAElEFAAEBElEEAAASEAMAAAEECAASTQQIABJRBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2ZiMDVkNDYxODhiMDQ4MTg5NTA0
MjI3M2NiNWVkODUxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC41ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAAC0MAAAAAAAAAAAAADOMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
wDAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAMZsRB4AAAEAxmxEHj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AZgBiADAANQBkADQANgAxADgAOABiADAANAA4ADEAOAA5ADUAMAA0ADIAMgA3ADMA
YwBiADUAZQBkADgANQAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcANwA0ADgALgAyADcAOAA0ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8ANwBjAGYAZQA3ADQAZQBiAGUANQBiADIANABmAGIAZQBiADEAZgAzAGQAMQBlADQANQBk
ADIAMwBhAGYAZAA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA3AGMAZgBlADcANABlAGIAZQA1AGIAMgA0AGYAYgBlAGIAMQBmADMAZAAx
AGUANAA1AGQAMgAzAGEAZgBkADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AZgBiADAANQBkADQANgAxADgAOABiADAANAA4ADEAOAA5ADUAMAA0ADIAMgA3
ADMAYwBiADUAZQBkADgANQAxAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADcANAA4AC4AMgA3ADgANAA2AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADcANAA4AC4AMgA3ADgANAA2AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\3 Process Task - Get Field Names"
              DTS:CreationName="Microsoft.ExecuteProcess"
              DTS:Description="Execute Process Task"
              DTS:DTSID="{77DAEFAD-218B-4CC8-8B29-06FD0A632DB6}"
              DTS:ExecutableType="Microsoft.ExecuteProcess"
              DTS:LocaleID="-1"
              DTS:ObjectName="3 Process Task - Get Field Names"
              DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="Arguments">"--config " +  "\"" + @[User::SnowSQLConfigDir]  + "config.txt"+ "\" "   + "-c SF -f " + "\"" + @[User::SQLStorage]  + @[User::Table] + "_Fields.sql" +  "\" " +  "-o output_format=csv -o friendly=false -o header=false -o timing=false -o output_file=" +  "\"" + @[User::SQLStorage] +  @[User::Table] + "\\fields.csv" + "\""</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExecuteProcessData
                  Executable="C:\Program Files\Snowflake SnowSQL\snowsql.exe"
                  Arguments="--config &quot;C:\temp\DWAH\SnowSQL\config.txt&quot; -c SF -f &quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\_Fields.sql&quot; -o output_format=csv -o friendly=false -o header=false -o timing=false -o output_file=&quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\\fields.csv&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\4 Script Task - Generate SQL Command"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{28A3F7CA-66C6-4C0C-97CF-2FCD660D7F3F}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="4 Script Task - Generate SQL Command"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_cbfe01bf3b7248acbac839db81e82a9e"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Catalog,User::HistoryCatalog,User::HistorySchema,User::Schema,User::SQLStorage,User::Table">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections.Generic;
#endregion

namespace ST_fb05d46188b0481895042273cb5ed851
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Modify these, specify which table in Snowflake to generate a history table for.
            var catalog = (string) Dts.Variables["Catalog"].Value;
            var schema = (string) Dts.Variables["Schema"].Value;
            var table = (string) Dts.Variables["Table"].Value;

            //Get history catalog and schema to replace into SQL query below, table name matches above table name
            var historyCatalog = (string) Dts.Variables["HistoryCatalog"].Value;
            var historySchema = (string) Dts.Variables["HistorySchema"].Value;
            var dir = (string)Dts.Variables["SQLStorage"].Value + (string)Dts.Variables["Table"].Value;

            var sqlquery =
@"CREATE OR REPLACE TEMPORARY TABLE tmpFieldType (FieldName VARCHAR(), FieldType VARCHAR()); 
INSERT INTO tmpFieldType (FieldName, FieldType)
SELECT COLUMN_NAME, DATA_TYPE FROM information_schema.columns
WHERE table_catalog='{catalog}'
AND
table_schema='{schema}'
AND
table_name='{table}';

CREATE TABLE IF NOT EXISTS ""{history_catalog}"".""{history_schema}"".""{table}""
(
    _KEY NUMBER(38, 0) autoincrement start 1 increment 1,
    _EFF_FROM DATE,
    _EFF_TO DATE,
    DWID VARCHAR(),
    FieldValue VARCHAR(),
    FieldName VARCHAR(),
    FieldType VARCHAR(),
    DataSource VARCHAR()
);

SET VAR_CurrentDate = CURRENT_DATE();
SET VAR_YesterdayDate = DATEADD(Day, -1, $Var_CurrentDate);

CREATE OR REPLACE TEMPORARY TABLE tmp{table}_LoadData
(
  DWID VARCHAR(),
  FieldValue VARCHAR(),
  FieldName VARCHAR(),
  FieldType VARCHAR(),
  DateUpdated DATE,
  DataSource VARCHAR()
);

INSERT INTO tmp{table}_LoadData
SELECT
    UP.DWID,
    UP.FieldValue,
    UP.FieldName,
    FT.FieldType,
    $VAR_CurrentDate AS DateUpdated,
    'Ascend' AS DataSource
FROM
    (
      SELECT 
      ID AS DWID,
      {cast_columns}
      FROM
      ""{catalog}"".""{schema}"".""{table}""
    ) AS C
    UNPIVOT 
    (
      FieldValue for FieldName IN 
      (
        {list_columns}
      )
    ) AS UP
    INNER JOIN tmpFieldType AS FT ON UPPER(UP.FieldName) = UPPER(FT.FieldName);

--Existing records that have changed.
UPDATE ""{history_catalog}"".""{history_schema}"".""{table}"" AS T
SET
    T._EFF_TO = $VAR_YesterdayDate
FROM tmp{table}_LoadData AS S
WHERE
(
  T._EFF_TO IS NULL
  AND S.DWID = T.DWID
  AND S.FieldName = T.FieldName
)
AND
(
  COALESCE(S.FieldValue, '') != COALESCE(T.FieldValue, '')
  OR COALESCE(S.FieldType, '') != COALESCE(T.FieldType, '')
  OR COALESCE(S.DataSource, '') != COALESCE(T.DataSource, '')
);

            --Inserting new records
INSERT INTO ""{history_catalog}"".""{history_schema}"".""{table}""(_EFF_FROM, DWID, FieldValue, FieldName, FieldType, DataSource)
SELECT
    $VAR_CurrentDate AS _EFF_FROM,
    S.DWID,
    S.FieldValue,
    S.FieldName,
    S.FieldType,
    S.DataSource
FROM tmp{table}_LoadData AS S
    LEFT OUTER JOIN ""{history_catalog}"".""{history_schema}"".""{table}"" AS T ON
    (
      T._EFF_TO IS NULL
      AND S.DWID = T.DWID
      AND S.FieldName = T.FieldName
    )
WHERE T.DWID IS NULL;

            --Deleted record criteria
UPDATE ""{history_catalog}"".""{history_schema}"".""{table}"" AS T
SET
    T._EFF_TO = $VAR_YesterdayDate
WHERE
    T._EFF_TO IS NULL
AND T._KEY IN
(
    SELECT H._KEY
    FROM ""{history_catalog}"".""{history_schema}"".""{table}""
         AS H
        LEFT OUTER JOIN tmp{table}_LoadData AS UP ON
        (
            UP.DWID = H.DWID
            AND UP.FieldName = H.FieldName
        )
        WHERE
        UP.DWID IS NULL
);
DROP TABLE IF EXISTS tmp{table}_LoadData;";

            //Replace catalog, schema, and table in query
            sqlquery = sqlquery.Replace("{catalog}", catalog);
            sqlquery = sqlquery.Replace("{schema}", schema);
            sqlquery = sqlquery.Replace("{table}", table);
            sqlquery = sqlquery.Replace("{history_catalog}", historyCatalog);
            sqlquery = sqlquery.Replace("{history_schema}", historySchema);

            var fieldNames = new List<string>();
			using(var reader = new StreamReader(dir + "\\fields.csv"))
            {
                while(!reader.EndOfStream)
                {
                    var value = reader.ReadLine().Replace("\"", "");
                    fieldNames.Add(value);
                }
            }

            //Generate list that includes cast command of field names
            var fields = "";
            for (int i = 0; i < fieldNames.Count; i++)
            {
                if (i == fieldNames.Count - 1)
                {
                    fields += "CAST(" + (fieldNames[i]) + " AS VARCHAR()) AS " + (fieldNames[i]);
                }
                else
                {
                    fields += "CAST(" + (fieldNames[i]) + " AS VARCHAR()) AS " + (fieldNames[i]) + ",";
                }
            }
            sqlquery = sqlquery.Replace("{cast_columns}", fields);

            //Generate basic list with comma delimiters of field names
            fields = "";
            for(int i = 0; i < fieldNames.Count; i++)
            {
                if (i == fieldNames.Count - 1)
                {
                    fields += (fieldNames[i]);
                }
                else
                {
                    fields += (fieldNames[i] + ",");
                }
            }
            sqlquery = sqlquery.Replace("{list_columns}", fields);
            
            using (StreamWriter writer = new StreamWriter(dir + "\\generated.sql"))
            {
                writer.WriteLine(sqlquery);
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fb05d46188b0481895042273cb5ed851.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_fb05d46188b0481895042273cb5ed851</msb:CodeName>
		<msb:DisplayName>ST_fb05d46188b0481895042273cb5ed851</msb:DisplayName>
		<msb:ProjectId>{BB1A5D2F-BB49-4A8F-ABBB-D2FED5C52EE9}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_cbfe01bf3b7248acbac839db81e82a9e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Settings.get_Default():ST_fb05d46188b0481895042273cb5ed851.Properties.Sett" +
    "ings")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="ST_cbfe01bf3b7248acbac839db81e82a9e.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{EEB16687-8058-4612-9047-307B5BAC32EF}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_fb05d46188b0481895042273cb5ed851</RootNamespace><AssemblyName>ST_cbfe01bf3b7248acbac839db81e82a9e</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <BinaryItem
                    Name="ST_2040e32a83b745bf9ad9db532049310e.dll">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
bwQOAKcB4AMOAAgC4AMOAIcBWgQGALwBBgUKAM4DpQMSALwFAwESAMoAAwEGAH8DNwQGAK8ENQAG
ANMANwQGANsENQAGADYBNwQGAN8ANwQGACQGhAQAAAAALAAAAAAAAQABAAEAEABPBAEAOQABAAEA
AAAQAC0FiQVRAAEAAwAAARAAxgWJBWUAAwAHAAMBAADfBQAASQAEAAoAEQBDBLAAEQBbAbQAEQC6
ALgABgZeALwAVoDPBb8AVoA7Ab8AUCAAAAAAhgBVBAYAAQBgIwAAAACGGOYEBgABAGgjAAAAAIMY
5gQGAAEAcCMAAAAAkwi6BMMAAQCcIwAAAACTCEMByAABAKMjAAAAAJMITwHNAAEAqyMAAAAAlgj7
BdMAAgCyIwAAAACGGOYEBgACALojAAAAAJEY7ATYAAIAAAABAF8DCQDmBAEAEQDmBAYAGQDmBAoA
KQDmBBAAMQDmBBAAOQDmBBAAQQDmBBAASQDmBBAAUQDmBBAAWQDmBBAAYQDmBBAAaQDmBAYAmQDm
BAYAwQDmBBUA0QDmBAYAcQDXBTIA2QC4BTcA4QAuBDwA6QBVA0IA8QDtBUYA8QCyAEwADADmBAYA
gQDmBBAA+QAjAVgADACKAFwAgQAeBGIAAQGfAQYADAAWBmYADAAuBGoA8QDtBXAA8QDtBXYAiQDm
BBAACQEsARAA2QAHBgEAcQDmBAYAoQDmBAYAEQHxAH0AEQEgBoYAqQDmBIwAyQDmBAYACAAUAKYA
CAAYAKsAKQBzABMBLgALAOsALgATAPQALgAbABMBLgAjABwBLgArAEUBLgAzAEUBLgA7AEUBLgBD
ABwBLgBLAEsBLgBTAEUBLgBbAGIBQwBjAKsASQBzABMBYQB7AKsAYwBrAKsAGwADAAEABAADAAAA
vgTcAAAAYwHhAAAA/wXmAAIABAADAAIABQAFAAEABgAFAAIABwAHAFIABIAAAAEAAABEHllvAAAA
AAAAjgAAAAQAAAAAAAAAAAAAAJQAZgAAAAAADQAAAAAAAAAAAAAAnQCGAwAAAAAEAAAAAAAAAAAA
AACUADcEAAAAAA0AAAAAAAAAAAAAAJ0APwAAAAAAAAAAAAEAAAA3BQAABQACAAAAAAAAU1RfZmIw
NWQ0NjE4OGIwNDgxODk1MDQyMjczY2I1ZWQ4NTEATGlzdGAxADxNb2R1bGU+AFN5c3RlbS5JTwBN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29s
bGVjdGlvbnMuR2VuZXJpYwBBZGQAU1RfMjA0MGUzMmE4M2I3NDViZjlhZDlkYjUzMjA0OTMxMGUA
UmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBS
ZWFkTGluZQBXcml0ZUxpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNj
cmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8yMDQwZTMyYTgzYjc0NWJm
OWFkOWRiNTMyMDQ5MzEwZS5kbGwAZ2V0X0VuZE9mU3RyZWFtAGdldF9JdGVtAFN5c3RlbQBFbnVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AU3RyZWFtUmVhZGVyAFRleHRS
ZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgAuY3RvcgAu
Y2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTVF9mYjA1ZDQ2MTg4YjA0ODE4OTUwNDIyNzNjYjVlZDg1MS5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZmIwNWQ0NjE4OGIw
NDgxODk1MDQyMjczY2I1ZWQ4NTEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1
Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0
X1Rhc2tSZXN1bHQAZ2V0X0NvdW50AGdldF9Bc3NlbWJseQAAAAAAD0MAYQB0AGEAbABvAGcAAA1T
AGMAaABlAG0AYQAAC1QAYQBiAGwAZQAAHUgAaQBzAHQAbwByAHkAQwBhAHQAYQBsAG8AZwAAG0gA
aQBzAHQAbwByAHkAUwBjAGgAZQBtAGEAABVTAFEATABTAHQAbwByAGEAZwBlAACW30MAUgBFAEEA
VABFACAATwBSACAAUgBFAFAATABBAEMARQAgAFQARQBNAFAATwBSAEEAUgBZACAAVABBAEIATABF
ACAAdABtAHAARgBpAGUAbABkAFQAeQBwAGUAIAAoAEYAaQBlAGwAZABOAGEAbQBlACAAVgBBAFIA
QwBIAEEAUgAoACkALAAgAEYAaQBlAGwAZABUAHkAcABlACAAVgBBAFIAQwBIAEEAUgAoACkAKQA7
ACAADQAKAEkATgBTAEUAUgBUACAASQBOAFQATwAgAHQAbQBwAEYAaQBlAGwAZABUAHkAcABlACAA
KABGAGkAZQBsAGQATgBhAG0AZQAsACAARgBpAGUAbABkAFQAeQBwAGUAKQANAAoAUwBFAEwARQBD
AFQAIABDAE8ATABVAE0ATgBfAE4AQQBNAEUALAAgAEQAQQBUAEEAXwBUAFkAUABFACAARgBSAE8A
TQAgAGkAbgBmAG8AcgBtAGEAdABpAG8AbgBfAHMAYwBoAGUAbQBhAC4AYwBvAGwAdQBtAG4AcwAN
AAoAVwBIAEUAUgBFACAAdABhAGIAbABlAF8AYwBhAHQAYQBsAG8AZwA9ACcAewBjAGEAdABhAGwA
bwBnAH0AJwANAAoAQQBOAEQADQAKAHQAYQBiAGwAZQBfAHMAYwBoAGUAbQBhAD0AJwB7AHMAYwBo
AGUAbQBhAH0AJwANAAoAQQBOAEQADQAKAHQAYQBiAGwAZQBfAG4AYQBtAGUAPQAnAHsAdABhAGIA
bABlAH0AJwA7AA0ACgANAAoAQwBSAEUAQQBUAEUAIABUAEEAQgBMAEUAIABJAEYAIABOAE8AVAAg
AEUAWABJAFMAVABTACAAIgB7AGgAaQBzAHQAbwByAHkAXwBjAGEAdABhAGwAbwBnAH0AIgAuACIA
ewBoAGkAcwB0AG8AcgB5AF8AcwBjAGgAZQBtAGEAfQAiAC4AIgB7AHQAYQBiAGwAZQB9ACIADQAK
ACgADQAKACAAIAAgACAAXwBLAEUAWQAgAE4AVQBNAEIARQBSACgAMwA4ACwAIAAwACkAIABhAHUA
dABvAGkAbgBjAHIAZQBtAGUAbgB0ACAAcwB0AGEAcgB0ACAAMQAgAGkAbgBjAHIAZQBtAGUAbgB0
ACAAMQAsAA0ACgAgACAAIAAgAF8ARQBGAEYAXwBGAFIATwBNACAARABBAFQARQAsAA0ACgAgACAA
IAAgAF8ARQBGAEYAXwBUAE8AIABEAEEAVABFACwADQAKACAAIAAgACAARABXAEkARAAgAFYAQQBS
AEMASABBAFIAKAApACwADQAKACAAIAAgACAARgBpAGUAbABkAFYAYQBsAHUAZQAgAFYAQQBSAEMA
SABBAFIAKAApACwADQAKACAAIAAgACAARgBpAGUAbABkAE4AYQBtAGUAIABWAEEAUgBDAEgAQQBS
ACgAKQAsAA0ACgAgACAAIAAgAEYAaQBlAGwAZABUAHkAcABlACAAVgBBAFIAQwBIAEEAUgAoACkA
LAANAAoAIAAgACAAIABEAGEAdABhAFMAbwB1AHIAYwBlACAAVgBBAFIAQwBIAEEAUgAoACkADQAK
ACkAOwANAAoADQAKAFMARQBUACAAVgBBAFIAXwBDAHUAcgByAGUAbgB0AEQAYQB0AGUAIAA9ACAA
QwBVAFIAUgBFAE4AVABfAEQAQQBUAEUAKAApADsADQAKAFMARQBUACAAVgBBAFIAXwBZAGUAcwB0
AGUAcgBkAGEAeQBEAGEAdABlACAAPQAgAEQAQQBUAEUAQQBEAEQAKABEAGEAeQAsACAALQAxACwA
IAAkAFYAYQByAF8AQwB1AHIAcgBlAG4AdABEAGEAdABlACkAOwANAAoADQAKAEMAUgBFAEEAVABF
ACAATwBSACAAUgBFAFAATABBAEMARQAgAFQARQBNAFAATwBSAEEAUgBZACAAVABBAEIATABFACAA
dABtAHAAewB0AGEAYgBsAGUAfQBfAEwAbwBhAGQARABhAHQAYQANAAoAKAANAAoAIAAgAEQAVwBJ
AEQAIABWAEEAUgBDAEgAQQBSACgAKQAsAA0ACgAgACAARgBpAGUAbABkAFYAYQBsAHUAZQAgAFYA
QQBSAEMASABBAFIAKAApACwADQAKACAAIABGAGkAZQBsAGQATgBhAG0AZQAgAFYAQQBSAEMASABB
AFIAKAApACwADQAKACAAIABGAGkAZQBsAGQAVAB5AHAAZQAgAFYAQQBSAEMASABBAFIAKAApACwA
DQAKACAAIABEAGEAdABlAFUAcABkAGEAdABlAGQAIABEAEEAVABFACwADQAKACAAIABEAGEAdABh
AFMAbwB1AHIAYwBlACAAVgBBAFIAQwBIAEEAUgAoACkADQAKACkAOwANAAoADQAKAEkATgBTAEUA
UgBUACAASQBOAFQATwAgAHQAbQBwAHsAdABhAGIAbABlAH0AXwBMAG8AYQBkAEQAYQB0AGEADQAK
AFMARQBMAEUAQwBUAA0ACgAgACAAIAAgAFUAUAAuAEQAVwBJAEQALAANAAoAIAAgACAAIABVAFAA
LgBGAGkAZQBsAGQAVgBhAGwAdQBlACwADQAKACAAIAAgACAAVQBQAC4ARgBpAGUAbABkAE4AYQBt
AGUALAANAAoAIAAgACAAIABGAFQALgBGAGkAZQBsAGQAVAB5AHAAZQAsAA0ACgAgACAAIAAgACQA
VgBBAFIAXwBDAHUAcgByAGUAbgB0AEQAYQB0AGUAIABBAFMAIABEAGEAdABlAFUAcABkAGEAdABl
AGQALAANAAoAIAAgACAAIAAnAEEAcwBjAGUAbgBkACcAIABBAFMAIABEAGEAdABhAFMAbwB1AHIA
YwBlAA0ACgBGAFIATwBNAA0ACgAgACAAIAAgACgADQAKACAAIAAgACAAIAAgAFMARQBMAEUAQwBU
ACAADQAKACAAIAAgACAAIAAgAEkARAAgAEEAUwAgAEQAVwBJAEQALAANAAoAIAAgACAAIAAgACAA
ewBjAGEAcwB0AF8AYwBvAGwAdQBtAG4AcwB9AA0ACgAgACAAIAAgACAAIABGAFIATwBNAA0ACgAg
ACAAIAAgACAAIAAiAHsAYwBhAHQAYQBsAG8AZwB9ACIALgAiAHsAcwBjAGgAZQBtAGEAfQAiAC4A
IgB7AHQAYQBiAGwAZQB9ACIADQAKACAAIAAgACAAKQAgAEEAUwAgAEMADQAKACAAIAAgACAAVQBO
AFAASQBWAE8AVAAgAA0ACgAgACAAIAAgACgADQAKACAAIAAgACAAIAAgAEYAaQBlAGwAZABWAGEA
bAB1AGUAIABmAG8AcgAgAEYAaQBlAGwAZABOAGEAbQBlACAASQBOACAADQAKACAAIAAgACAAIAAg
ACgADQAKACAAIAAgACAAIAAgACAAIAB7AGwAaQBzAHQAXwBjAG8AbAB1AG0AbgBzAH0ADQAKACAA
IAAgACAAIAAgACkADQAKACAAIAAgACAAKQAgAEEAUwAgAFUAUAANAAoAIAAgACAAIABJAE4ATgBF
AFIAIABKAE8ASQBOACAAdABtAHAARgBpAGUAbABkAFQAeQBwAGUAIABBAFMAIABGAFQAIABPAE4A
IABVAFAAUABFAFIAKABVAFAALgBGAGkAZQBsAGQATgBhAG0AZQApACAAPQAgAFUAUABQAEUAUgAo
AEYAVAAuAEYAaQBlAGwAZABOAGEAbQBlACkAOwANAAoADQAKAC0ALQBFAHgAaQBzAHQAaQBuAGcA
IAByAGUAYwBvAHIAZABzACAAdABoAGEAdAAgAGgAYQB2AGUAIABjAGgAYQBuAGcAZQBkAC4ADQAK
AFUAUABEAEEAVABFACAAIgB7AGgAaQBzAHQAbwByAHkAXwBjAGEAdABhAGwAbwBnAH0AIgAuACIA
ewBoAGkAcwB0AG8AcgB5AF8AcwBjAGgAZQBtAGEAfQAiAC4AIgB7AHQAYQBiAGwAZQB9ACIAIABB
AFMAIABUAA0ACgBTAEUAVAANAAoAIAAgACAAIABUAC4AXwBFAEYARgBfAFQATwAgAD0AIAAkAFYA
QQBSAF8AWQBlAHMAdABlAHIAZABhAHkARABhAHQAZQANAAoARgBSAE8ATQAgAHQAbQBwAHsAdABh
AGIAbABlAH0AXwBMAG8AYQBkAEQAYQB0AGEAIABBAFMAIABTAA0ACgBXAEgARQBSAEUADQAKACgA
DQAKACAAIABUAC4AXwBFAEYARgBfAFQATwAgAEkAUwAgAE4AVQBMAEwADQAKACAAIABBAE4ARAAg
AFMALgBEAFcASQBEACAAPQAgAFQALgBEAFcASQBEAA0ACgAgACAAQQBOAEQAIABTAC4ARgBpAGUA
bABkAE4AYQBtAGUAIAA9ACAAVAAuAEYAaQBlAGwAZABOAGEAbQBlAA0ACgApAA0ACgBBAE4ARAAN
AAoAKAANAAoAIAAgAEMATwBBAEwARQBTAEMARQAoAFMALgBGAGkAZQBsAGQAVgBhAGwAdQBlACwA
IAAnACcAKQAgACEAPQAgAEMATwBBAEwARQBTAEMARQAoAFQALgBGAGkAZQBsAGQAVgBhAGwAdQBl
ACwAIAAnACcAKQANAAoAIAAgAE8AUgAgAEMATwBBAEwARQBTAEMARQAoAFMALgBGAGkAZQBsAGQA
VAB5AHAAZQAsACAAJwAnACkAIAAhAD0AIABDAE8AQQBMAEUAUwBDAEUAKABUAC4ARgBpAGUAbABk
AFQAeQBwAGUALAAgACcAJwApAA0ACgAgACAATwBSACAAQwBPAEEATABFAFMAQwBFACgAUwAuAEQA
YQB0AGEAUwBvAHUAcgBjAGUALAAgACcAJwApACAAIQA9ACAAQwBPAEEATABFAFMAQwBFACgAVAAu
AEQAYQB0AGEAUwBvAHUAcgBjAGUALAAgACcAJwApAA0ACgApADsADQAKAA0ACgAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAtAC0ASQBuAHMAZQByAHQAaQBuAGcAIABuAGUAdwAgAHIAZQBjAG8AcgBk
AHMADQAKAEkATgBTAEUAUgBUACAASQBOAFQATwAgACIAewBoAGkAcwB0AG8AcgB5AF8AYwBhAHQA
YQBsAG8AZwB9ACIALgAiAHsAaABpAHMAdABvAHIAeQBfAHMAYwBoAGUAbQBhAH0AIgAuACIAewB0
AGEAYgBsAGUAfQAiACgAXwBFAEYARgBfAEYAUgBPAE0ALAAgAEQAVwBJAEQALAAgAEYAaQBlAGwA
ZABWAGEAbAB1AGUALAAgAEYAaQBlAGwAZABOAGEAbQBlACwAIABGAGkAZQBsAGQAVAB5AHAAZQAs
ACAARABhAHQAYQBTAG8AdQByAGMAZQApAA0ACgBTAEUATABFAEMAVAANAAoAIAAgACAAIAAkAFYA
QQBSAF8AQwB1AHIAcgBlAG4AdABEAGEAdABlACAAQQBTACAAXwBFAEYARgBfAEYAUgBPAE0ALAAN
AAoAIAAgACAAIABTAC4ARABXAEkARAAsAA0ACgAgACAAIAAgAFMALgBGAGkAZQBsAGQAVgBhAGwA
dQBlACwADQAKACAAIAAgACAAUwAuAEYAaQBlAGwAZABOAGEAbQBlACwADQAKACAAIAAgACAAUwAu
AEYAaQBlAGwAZABUAHkAcABlACwADQAKACAAIAAgACAAUwAuAEQAYQB0AGEAUwBvAHUAcgBjAGUA
DQAKAEYAUgBPAE0AIAB0AG0AcAB7AHQAYQBiAGwAZQB9AF8ATABvAGEAZABEAGEAdABhACAAQQBT
ACAAUwANAAoAIAAgACAAIABMAEUARgBUACAATwBVAFQARQBSACAASgBPAEkATgAgACIAewBoAGkA
cwB0AG8AcgB5AF8AYwBhAHQAYQBsAG8AZwB9ACIALgAiAHsAaABpAHMAdABvAHIAeQBfAHMAYwBo
AGUAbQBhAH0AIgAuACIAewB0AGEAYgBsAGUAfQAiACAAQQBTACAAVAAgAE8ATgANAAoAIAAgACAA
IAAoAA0ACgAgACAAIAAgACAAIABUAC4AXwBFAEYARgBfAFQATwAgAEkAUwAgAE4AVQBMAEwADQAK
ACAAIAAgACAAIAAgAEEATgBEACAAUwAuAEQAVwBJAEQAIAA9ACAAVAAuAEQAVwBJAEQADQAKACAA
IAAgACAAIAAgAEEATgBEACAAUwAuAEYAaQBlAGwAZABOAGEAbQBlACAAPQAgAFQALgBGAGkAZQBs
AGQATgBhAG0AZQANAAoAIAAgACAAIAApAA0ACgBXAEgARQBSAEUAIABUAC4ARABXAEkARAAgAEkA
UwAgAE4AVQBMAEwAOwANAAoADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQBEAGUAbABl
AHQAZQBkACAAcgBlAGMAbwByAGQAIABjAHIAaQB0AGUAcgBpAGEADQAKAFUAUABEAEEAVABFACAA
IgB7AGgAaQBzAHQAbwByAHkAXwBjAGEAdABhAGwAbwBnAH0AIgAuACIAewBoAGkAcwB0AG8AcgB5
AF8AcwBjAGgAZQBtAGEAfQAiAC4AIgB7AHQAYQBiAGwAZQB9ACIAIABBAFMAIABUAA0ACgBTAEUA
VAANAAoAIAAgACAAIABUAC4AXwBFAEYARgBfAFQATwAgAD0AIAAkAFYAQQBSAF8AWQBlAHMAdABl
AHIAZABhAHkARABhAHQAZQANAAoAVwBIAEUAUgBFAA0ACgAgACAAIAAgAFQALgBfAEUARgBGAF8A
VABPACAASQBTACAATgBVAEwATAANAAoAQQBOAEQAIABUAC4AXwBLAEUAWQAgAEkATgANAAoAKAAN
AAoAIAAgACAAIABTAEUATABFAEMAVAAgAEgALgBfAEsARQBZAA0ACgAgACAAIAAgAEYAUgBPAE0A
IAAiAHsAaABpAHMAdABvAHIAeQBfAGMAYQB0AGEAbABvAGcAfQAiAC4AIgB7AGgAaQBzAHQAbwBy
AHkAXwBzAGMAaABlAG0AYQB9ACIALgAiAHsAdABhAGIAbABlAH0AIgANAAoAIAAgACAAIAAgACAA
IAAgACAAQQBTACAASAANAAoAIAAgACAAIAAgACAAIAAgAEwARQBGAFQAIABPAFUAVABFAFIAIABK
AE8ASQBOACAAdABtAHAAewB0AGEAYgBsAGUAfQBfAEwAbwBhAGQARABhAHQAYQAgAEEAUwAgAFUA
UAAgAE8ATgANAAoAIAAgACAAIAAgACAAIAAgACgADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
AFUAUAAuAEQAVwBJAEQAIAA9ACAASAAuAEQAVwBJAEQADQAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgAEEATgBEACAAVQBQAC4ARgBpAGUAbABkAE4AYQBtAGUAIAA9ACAASAAuAEYAaQBlAGwAZABO
AGEAbQBlAA0ACgAgACAAIAAgACAAIAAgACAAKQANAAoAIAAgACAAIAAgACAAIAAgAFcASABFAFIA
RQANAAoAIAAgACAAIAAgACAAIAAgAFUAUAAuAEQAVwBJAEQAIABJAFMAIABOAFUATABMAA0ACgAp
ADsADQAKAEQAUgBPAFAAIABUAEEAQgBMAEUAIABJAEYAIABFAFgASQBTAFQAUwAgAHQAbQBwAHsA
dABhAGIAbABlAH0AXwBMAG8AYQBkAEQAYQB0AGEAOwABE3sAYwBhAHQAYQBsAG8AZwB9AAARewBz
AGMAaABlAG0AYQB9AAAPewB0AGEAYgBsAGUAfQAAI3sAaABpAHMAdABvAHIAeQBfAGMAYQB0AGEA
bABvAGcAfQAAIXsAaABpAHMAdABvAHIAeQBfAHMAYwBoAGUAbQBhAH0AABdcAGYAaQBlAGwAZABz
AC4AYwBzAHYAAAMiAAABAAtDAEEAUwBUACgAACUgAEEAUwAgAFYAQQBSAEMASABBAFIAKAApACkA
IABBAFMAIAAAAywAAB17AGMAYQBzAHQAXwBjAG8AbAB1AG0AbgBzAH0AAB17AGwAaQBzAHQAXwBj
AG8AbAB1AG0AbgBzAH0AAB1cAGcAZQBuAGUAcgBhAHQAZQBkAC4AcwBxAGwAAHFTAFQAXwBmAGIA
MAA1AGQANAA2ADEAOAA4AGIAMAA0ADgAMQA4ADkANQAwADQAMgAyADcAMwBjAGIANQBlAGQAOAA1
ADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAjMQO1AtmhMgx54
XrjZK1EABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0WBw4ODg4ODg4OFRI9AQ4OEkEOCAgSRQQg
ABJtBCAAEnEFIAESdRwDIAAcBQACDg4OBSACDg4OBRUSPQEOAyAADgUgAQETAAMgAAIDIAAIBSAB
EwAIBQABDh0OBgADDg4ODggAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyR
BAAAAAAEAQAAAAMGElUDBhJZAwYSEAIGCAMGERQEAAASVQQAABJZBQABARJZBAAAEhADAAABBAgA
ElUECAASWQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTVF9mYjA1ZDQ2MTg4YjA0ODE4OTUwNDIyNzNjYjVlZDg1MQAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA0SgAAAAAAAAAA
AABOSgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEoAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAA
AAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAWW9EHgAAAQBZb0QePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBmAGIA
MAA1AGQANAA2ADEAOAA4AGIAMAA0ADgAMQA4ADkANQAwADQAMgAyADcAMwBjAGIANQBlAGQAOAA1
ADEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA3ADQAOAAuADIA
OAA1ADAANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAyADAANAAw
AGUAMwAyAGEAOAAzAGIANwA0ADUAYgBmADkAYQBkADkAZABiADUAMwAyADAANAA5ADMAMQAwAGUA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABf
ADIAMAA0ADAAZQAzADIAYQA4ADMAYgA3ADQANQBiAGYAOQBhAGQAOQBkAGIANQAzADIAMAA0ADkA
MwAxADAAZQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBm
AGIAMAA1AGQANAA2ADEAOAA4AGIAMAA0ADgAMQA4ADkANQAwADQAMgAyADcAMwBjAGIANQBlAGQA
OAA1ADEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANwA0
ADgALgAyADgANQAwADUAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcANwA0ADgALgAyADgANQAwADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAYDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\5 Execute Process Task - Run Generated Command"
              DTS:CreationName="Microsoft.ExecuteProcess"
              DTS:Description="Execute Process Task"
              DTS:DTSID="{C4B04F2B-380A-463C-91D7-BCB620D9B21D}"
              DTS:ExecutableType="Microsoft.ExecuteProcess"
              DTS:LocaleID="-1"
              DTS:ObjectName="5 Execute Process Task - Run Generated Command"
              DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="Arguments">"--config " + "\"" + @[User::SnowSQLConfigDir] + "config.txt" + "\" " + "-c SF -f " + "\"" + @[User::SQLStorage] + @[User::Table]  +"\\generated.sql" + "\""</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExecuteProcessData
                  Executable="C:\Program Files\Snowflake SnowSQL\snowsql.exe"
                  Arguments="--config &quot;C:\temp\DWAH\SnowSQL\config.txt&quot; -c SF -f &quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\\generated.sql&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{2BE5D51B-45B8-481B-BD6C-3B9B3E8A5066}"
              DTS:From="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\1 Script Task - Create Folder"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\2 Script Task - Generate Fields Command" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{B71D4147-AA9B-4B06-8162-9F4637B97D8D}"
              DTS:From="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\2 Script Task - Generate Fields Command"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\3 Process Task - Get Field Names" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{76841A91-183F-459B-A8F0-20C5F62E33A0}"
              DTS:From="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\3 Process Task - Get Field Names"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\4 Script Task - Generate SQL Command" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{4F6C6026-F27D-428D-BCD4-A6DB538529D5}"
              DTS:From="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\4 Script Task - Generate SQL Command"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\5 Execute Process Task - Run Generated Command" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{88107E77-1D55-40D3-892E-2ED888E3909E}"
              DTS:ObjectName="{88107E77-1D55-40D3-892E-2ED888E3909E}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::Table" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{932113DC-C143-410D-9EA6-285390A713B9}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="2-2 Foreach Loop Container - Create History Table Set 2">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
            DTS:DTSID="{E39B9039-5362-4F80-B5A7-E0A502A471A0}"
            DTS:ObjectName="{573404A2-5F9B-47F8-ACC1-A89F2DC2C96A}">
            <DTS:ObjectData>
              <FEEFVE
                VariableName="User::TableNames2" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{1A7C3FAE-8991-4A35-BC47-E9FCE5A75A3F}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="Table2">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\1 Script Task - Create Folder"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{948234EF-A0CD-43BD-8A89-88970313A80D}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="1 Script Task - Create Folder"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_a337195a383a4fb086a9f9713697d716"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="VisualBasic"
                  ReadOnlyVariables="User::SQLStorage,User::Table2">
                  <ProjectItem
                    Name="ScriptMain.vb"
                    Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math

'Imports added for this script
Imports System.IO

Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here

        Dim Dir As String = Dts.Variables("SQLStorage").Value.ToString + "\" + Dts.Variables("Table2").Value.ToString + "\"
        Dim fireAgain As Boolean
        Dts.Events.FireInformation(0, "Table2", Dir, Nothing, 0, fireAgain)
        ' Delete the folder
        If Directory.Exists(Dir) = True Then
            Directory.Delete(Dir, True)
        End If

        'Create the folder
        If Directory.Exists(Dir) = False Then
            Directory.CreateDirectory(Dir)
        End If


        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_a337195a383a4fb086a9f9713697d716.vbproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{8C2E0B00-8680-4B5D-A3F3-A0B052710EEC}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>My Project</AppDesignerFolder><RootNamespace>ST_ea5b5d781f59475d8e90a4605f58b2da</RootNamespace><AssemblyName>ST_a337195a383a4fb086a9f9713697d716</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>true</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>false</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><Import Include="Microsoft.VisualBasic" /><Import Include="System" /><Import Include="System.Collections" /><Import Include="System.Data" /><Import Include="System.Diagnostics" /><Import Include="System.Windows.Forms" /></ItemGroup><ItemGroup><AppDesigner Include="My Project\" /><Compile Include="My Project\AssemblyInfo.vb"><SubType>Code</SubType></Compile><EmbeddedResource Include="My Project\Resources.resx"><Generator>VbMyResourcesResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.vb</LastGenOutput><CustomToolNamespace>My.Resources</CustomToolNamespace></EmbeddedResource><Compile Include="My Project\Resources.Designer.vb"><AutoGen>True</AutoGen><DesignTime>True</DesignTime><DependentUpon>Resources.resx</DependentUpon><SubType>Code</SubType></Compile><None Include="My Project\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.vb</LastGenOutput></None><Compile Include="My Project\Settings.Designer.vb"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon><SubType>Code</SubType></Compile><Compile Include="ScriptMain.vb"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a VB project.--><Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ea5b5d781f59475d8e90a4605f58b2da</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ea5b5d781f59475d8e90a4605f58b2da</msb:DisplayName>
		<msb:ProjectId>{37D8279E-33E5-4893-8A4C-596F5AA1A36F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a337195a383a4fb086a9f9713697d716.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\AssemblyInfo.vb"
                    Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_ea5b5d781f59475d8e90a4605f58b2da")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_ea5b5d781f59475d8e90a4605f58b2da")> 
<Assembly: AssemblyCopyright("Copyright @  2021")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("be382f33-10d5-44a7-aa91-7b708387f824")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                  <BinaryItem
                    Name="ST_a337195a383a4fb086a9f9713697d716.dll">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
DwAFAQAAYwcAAGEACQARAAUBAAAQAAAAYQAJABgAAgEAANUIAACVAAoAGgAxAF0GJAExADQGLAEx
AEgGNAExAHYGPAERAPsGRAERAJ4BSAERAE0ETAERAPwIUAEhACcJ4gAGBqoAUwFWgMUIVgFWgH4B
VgFQIAAAAAAGGA0HBgABAFggAAAAAAYYDQcGAAEAYCAAAAAAERgTB1oBAQCKIAAAAAATCOMGXgEB
AJYgAAAAABMIsAVjAQEAoiAAAAAAEwjUBmgBAQCuIAAAAAATCFMHbQEBALogAAAAAAMYDQcGAAEA
wiAAAAAAFgiUBnIBAQDuIAAAAAAWCIYBdwEBAPUgAAAAABYIkgF8AQEA/SAAAAAAERgTB1oBAgAO
IQAAAAAGGA0HBgACABghAAAAABYIVQSCAQIAdCEAAAAABhgNBwYAAgB8IQAAAAAGAKsFBgACABwi
AAAAAMYCrwi6AAIAKiIAAAAAxgIdAb8AAwAyIgAAAACDAHYBhwEDAD4iAAAAAMYCowSLAAMASCIA
AAAAEQCXAIwBAwBoIgAAAAABAIMAlAEEALogAAAAAAYYDQcGAAUAdCIAAAAAAwgEAUoABQCoIgAA
AAAGGA0HBgAFAAAAAQByBAAAAQAyBgAAAQAUAQAAAQAUAQkADQcBABEADQcGABkADQcKACkADQcQ
ADEADQcQADkADQcQAEEADQcQAEkADQcQAFEADQcQAFkADQcVAGEADQcVAGkADQcQAHEADQcQAHkA
DQcQAIEADQcaAJEADQcgAKkADQcGALEADQcGALkADQcGANEADQcmAOkADQcQAAkBDQcGABEBDQcG
AJkADQcGAKEADQcGAAwADQcGABQADQcGABwADQcGACQADQcGAAwABAFKABQABAFKABwABAFKACQA
BAFKAMEADQcGANkARAFPANkAWAlXAPEADQddAEEBaQRlAAEBDQcGAEkB3QZqAEkBEwlqABkBDQcG
ABkBzQh0AFEBlgh6AFkBcwWAAGEBVQSHAMEAowSLAGkB9QiPAFEB4wiXAHEBzgWdAHkB7gioAHkB
AwKtAHkBZQmzAFEBGAkBAMEArwi6AMEAHQG/AIkB9QDLADQAJwniADwAVQRKADwAXwT5ADwADQcG
AAgALAAaAQgAMAAfASkAqwBGAy4ACwDEAS4AEwDNAS4AGwDsAS4AIwD1AS4AKwAeAi4AMwAeAi4A
OwD1AS4AQwAkAi4ASwAeAi4AUwA7Ai4AWwAeAi4AYwBBAi4AawBrAi4AcwB4AkAAiwAfAUAAgwDC
AkMAewDLAkMAgwDCAkkAqwBXA2MAewDLAmMAgwDCAmkAqwBrA4AAiwAfAYMAkwAfAYMAmwAfAYMA
ewDLAokAqwB4A6AAiwAfAakAgwDsAcAAiwAfAckAgwDsAeAAiwAfAeMAuwAfAeMAUwAeAukAswAf
AQMBgwDCAgMBowDkAiMBgwDCAiMBWwAeAiACgwDCAiACiwAfAUACgwDCAkACiwAfAWACgwDCAmAC
iwAfAYACgwDCAoACiwAfAaACiwAfAcACiwAfAeACiwAfAeACgwDCAgADiwAfASADiwAfASADgwDC
Am8AwwDWAAQAAQAFAAUABgAHAAkACAAAAPIGnAEAAMIFoQEAANgGpgEAAGUHqwEAAJgGsAEAAKIB
tQEAAHIEugEAAAgBvwECAAQAAwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQABAAsADQAC
AA4ADwACABgAEQAuADUAPABDAMgA2wDqAPEABIAAAAEAAAAAAAAAAAAAAAAAKwAAAAQAAAAAAAAA
AAAAAP8A1gAAAAAABAAAAAAAAAAAAAAA/wB8BQAAAAAKAAAAAAAAAAAAAAAIAd8AAAAAAA0AAAAA
AAAAAAAAABEBsQQAAAAADQAAAAAAAAAAAAAAEQFiAAAAAAAAAAAAAQAAAE8IAAAIAAQACQAEAAoA
BwAAABAAEgCBAAAAEAArAIEAAAAAAC0AgQBzANEAcwD0AAAAAAAAQ29udGV4dFZhbHVlYDEAVGhy
ZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEAU1RfYTMzNzE5NWEzODNhNGZiMDg2YTlmOTcxMzY5N2Q3
MTYAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBUAERp
c3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAHZhbHVlX18AU1RfZWE1YjVkNzgx
ZjU5NDc1ZDhlOTBhNDYwNWY1OGIyZGEAbXNjb3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAENy
ZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBWYXJpYWJs
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVz
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBHdWlkQXR0cmli
dXRlAEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRh
cmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmli
dXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBt
X1ZhbHVlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVtLlRocmVhZGlu
ZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1hdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAU2NyaXB0T2JqZWN0TW9k
ZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2EzMzcxOTVhMzgzYTRmYjA4NmE5Zjk3MTM2OTdk
NzE2LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWdu
AFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGljYXRpb24ARmlyZUluZm9ybWF0aW9u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAEN1bHR1cmVJbmZvAERpcmVjdG9yeUluZm8AbV9BcHBPYmplY3RQcm92aWRlcgBtX1VzZXJP
YmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2VzT2Jq
ZWN0UHJvdmlkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBF
dmVudHNPYmplY3RXcmFwcGVyAGdldF9Vc2VyAEVudGVyAGdldF9Db21wdXRlcgBNeUNvbXB1dGVy
AF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGlj
cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2
aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVu
dGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2Vh
NWI1ZDc4MWY1OTQ3NWQ4ZTkwYTQ2MDVmNThiMmRhLk15LlJlc291cmNlcwBNeVJlc291cmNlcwBT
VF9lYTViNWQ3ODFmNTk0NzVkOGU5MGE0NjA1ZjU4YjJkYS5SZXNvdXJjZXMucmVzb3VyY2VzAERl
YnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMATXlTZXR0aW5ncwBFcXVhbHMAUnVudGltZUhlbHBl
cnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBFeGlzdHMAQ29uY2F0
AG1fU3luY09iamVjdABNeVByb2plY3QARXhpdABzZXRfVGFza1Jlc3VsdABtX0NvbnRleHQAU1Rf
ZWE1YjVkNzgxZjU5NDc1ZDhlOTBhNDYwNWY1OGIyZGEuTXkAZ2V0X0Fzc2VtYmx5AENyZWF0ZURp
cmVjdG9yeQAAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMA
ZQBzAAAVUwBRAEwAUwB0AG8AcgBhAGcAZQAAA1wAAA1UAGEAYgBsAGUAMgAAANHGgAqkmvBDmyc2
DeZZe9IABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEODg4OBhUSJAES
DAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgJkFIAASgJ0HIAIBDhKAnQQAARwcBAAB
ARwEBwIOAgUgABKAqQUgABKArQYgARKAsRwDIAAcAyAADgcABA4ODg4OBSAAEoC5CiAGAQgODg4I
EAIEAAECDgUAAgEOAgYAARKAwQ4EIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRIk
ARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCA
zJEEAAAAAAQBAAAABwYVEiQBEgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiADBhJ5AwYSfQMGEhgC
BhwCBggDBhEoAwAAAQQAABIMBAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUAAQESfQQAABIYBCAA
Em0HEAEBHgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAAT
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1Rf
ZWE1YjVkNzgxZjU5NDc1ZDhlOTBhNDYwNWY1OGIyZGEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAyMQAABQEAAQAAKQEAJGJlMzgyZjMzLTEwZDUtNDRhNy1hYTkxLTdiNzA4Mzg3ZjgyNAAADAEA
BzEuMC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41CAEAAQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4w
LjAAAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3Rv
Y29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1
dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAABgOQAAAAAAAAAAAAB6OQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbDkA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBlAGEANQBiADUAZAA3ADgAMQBmADUAOQA0ADcANQBkADgAZQA5ADAAYQA0ADYAMAA1AGYA
NQA4AGIAMgBkAGEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGEAMwAzADcAMQA5ADUA
YQAzADgAMwBhADQAZgBiADAAOAA2AGEAOQBmADkANwAxADMANgA5ADcAZAA3ADEANgAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYQAzADMA
NwAxADkANQBhADMAOAAzAGEANABmAGIAMAA4ADYAYQA5AGYAOQA3ADEAMwA2ADkANwBkADcAMQA2
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAYQA1AGIA
NQBkADcAOAAxAGYANQA5ADQANwA1AGQAOABlADkAMABhADQANgAwADUAZgA1ADgAYgAyAGQAYQAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAjDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\2 Script Task - Generate Fields Command"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{0E0890EC-B3BA-45DA-93FC-7A59158DC291}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="2 Script Task - Generate Fields Command"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_15fe47a23f134b338e4574e71020042f"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Catalog,User::Schema,User::SQLStorage,User::Table2">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections.Generic;
#endregion

namespace ST_fb05d46188b0481895042273cb5ed851
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Modify these, specify which table in Snowflake to generate a history table for.
            var catalog = (string) Dts.Variables["Catalog"].Value;
            var schema = (string) Dts.Variables["Schema"].Value;
            var table = (string) Dts.Variables["Table2"].Value;
            var dir = (string) Dts.Variables["SQLStorage"].Value + table + "_Fields.sql";

            var sqlquery =
@"SELECT COLUMN_NAME FROM information_schema.columns
WHERE
    table_catalog='{catalog}'
AND
    table_schema='{schema}'
AND
    table_name='{table}'
AND
    COLUMN_NAME != 'ID';";

            //Replace catalog, schema, and table in query
            sqlquery = sqlquery.Replace("{catalog}", catalog);
            sqlquery = sqlquery.Replace("{schema}", schema);
            sqlquery = sqlquery.Replace("{table}", table);
            
            using (StreamWriter writer = new StreamWriter(dir))
            {
                writer.WriteLine(sqlquery);
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_15fe47a23f134b338e4574e71020042f.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{EEB16687-8058-4612-9047-307B5BAC32EF}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_fb05d46188b0481895042273cb5ed851</RootNamespace><AssemblyName>ST_15fe47a23f134b338e4574e71020042f</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_fb05d46188b0481895042273cb5ed851</msb:CodeName>
		<msb:DisplayName>ST_fb05d46188b0481895042273cb5ed851</msb:DisplayName>
		<msb:ProjectId>{BB1A5D2F-BB49-4A8F-ABBB-D2FED5C52EE9}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_15fe47a23f134b338e4574e71020042f.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Settings.get_Default():ST_fb05d46188b0481895042273cb5ed851.Properties.Sett" +
    "ings")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fb05d46188b0481895042273cb5ed851.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_15fe47a23f134b338e4574e71020042f.dll">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
4wAuACsADAEuADMADAEuADsADAEuAEMA4wAuAEsAEgEuAFMADAEuAFsAKQFDAGMAcgBJAHMA2gBh
AHsAcgBjAGsAcgAbAAMAAQAEAAMAAABnBKMAAAAQAagAAACoBa0AAgAEAAMAAgAFAAUAAQAGAAUA
AgAHAAcABIAAAAEAAABgHrhEAAAAAAAAEgMAAAQAAAAAAAAAAAAAAFsAXwAAAAAADQAAAAAAAAAA
AAAAZABXAwAAAAAEAAAAAAAAAAAAAABbAPgDAAAAAA0AAAAAAAAAAAAAAGQAOAAAAAAAAAAAAAEA
AADgBAAABQACAAAAAFNUX2ZiMDVkNDYxODhiMDQ4MTg5NTA0MjI3M2NiNWVkODUxADxNb2R1bGU+
AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2Nvcmxp
YgBSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AFdyaXRlTGluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUA
U1RfMTVmZTQ3YTIzZjEzNGIzMzhlNDU3NGU3MTAyMDA0MmYAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBTdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNUXzE1ZmU0N2EyM2YxMzRiMzM4ZTQ1NzRlNzEwMjAwNDJmLmRsbABnZXRfSXRl
bQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9S
ZXNvdXJjZU1hbmFnZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfZmIwNWQ0NjE4OGIwNDgxODk1MDQyMjczY2I1ZWQ4NTEuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2ZiMDVkNDYxODhiMDQ4MTg5NTA0MjI3
M2NiNWVkODUxLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0
AGdldF9Bc3NlbWJseQAAD0MAYQB0AGEAbABvAGcAAA1TAGMAaABlAG0AYQAADVQAYQBiAGwAZQAy
AAAVUwBRAEwAUwB0AG8AcgBhAGcAZQAAF18ARgBpAGUAbABkAHMALgBzAHEAbAAAgXFTAEUATABF
AEMAVAAgAEMATwBMAFUATQBOAF8ATgBBAE0ARQAgAEYAUgBPAE0AIABpAG4AZgBvAHIAbQBhAHQA
aQBvAG4AXwBzAGMAaABlAG0AYQAuAGMAbwBsAHUAbQBuAHMADQAKAFcASABFAFIARQANAAoAIAAg
ACAAIAB0AGEAYgBsAGUAXwBjAGEAdABhAGwAbwBnAD0AJwB7AGMAYQB0AGEAbABvAGcAfQAnAA0A
CgBBAE4ARAANAAoAIAAgACAAIAB0AGEAYgBsAGUAXwBzAGMAaABlAG0AYQA9ACcAewBzAGMAaABl
AG0AYQB9ACcADQAKAEEATgBEAA0ACgAgACAAIAAgAHQAYQBiAGwAZQBfAG4AYQBtAGUAPQAnAHsA
dABhAGIAbABlAH0AJwANAAoAQQBOAEQADQAKACAAIAAgACAAQwBPAEwAVQBNAE4AXwBOAEEATQBF
ACAAIQA9ACAAJwBJAEQAJwA7AAETewBjAGEAdABhAGwAbwBnAH0AABF7AHMAYwBoAGUAbQBhAH0A
AA97AHQAYQBiAGwAZQB9AABxUwBUAF8AZgBiADAANQBkADQANgAxADgAOABiADAANAA4ADEAOAA5
ADUAMAA0ADIAMgA3ADMAYwBiADUAZQBkADgANQAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAAAAM5EObIKY4ZPiT1Or7wM+U0ABCABAQgDIAABBSABARERBCABAQ4F
IAEBEVUIBwUODg4OEj0EIAASZQQgABJpBSABEm0cAyAAHAYAAw4ODg4FIAIODg4HAAESfRGAgQUg
ABKAhQcgAgEOEoCFCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEk0DBhJRAwYSEAIGCAMG
ERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9mYjA1ZDQ2MTg4YjA0ODE4
OTUwNDIyNzNjYjVlZDg1MQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3
b3JrIDQuNQC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAAuDAAAAAAAAAAAAAA0jAAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAMQwAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABALhEYB4AAAEAuERgHj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AZgBiADAANQBkADQANgAxADgAOABiADAANAA4ADEAOAA5ADUAMAA0ADIAMgA3ADMA
YwBiADUAZQBkADgANQAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcANwA3ADYALgAxADcANQA5ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMQA1AGYAZQA0ADcAYQAyADMAZgAxADMANABiADMAMwA4AGUANAA1ADcANABlADcAMQAw
ADIAMAAwADQAMgBmAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAxADUAZgBlADQANwBhADIAMwBmADEAMwA0AGIAMwAzADgAZQA0ADUANwA0
AGUANwAxADAAMgAwADAANAAyAGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AZgBiADAANQBkADQANgAxADgAOABiADAANAA4ADEAOAA5ADUAMAA0ADIAMgA3
ADMAYwBiADUAZQBkADgANQAxAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADcANwA2AC4AMQA3ADUAOQAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADcANwA2AC4AMQA3ADUAOQAyAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOQwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\3 Process Task - Get Field Names"
              DTS:CreationName="Microsoft.ExecuteProcess"
              DTS:Description="Execute Process Task"
              DTS:DTSID="{36EC228A-2C94-4D9D-9777-16BAEA126507}"
              DTS:ExecutableType="Microsoft.ExecuteProcess"
              DTS:LocaleID="-1"
              DTS:ObjectName="3 Process Task - Get Field Names"
              DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="Arguments">"--config " +  "\"" + @[User::SnowSQLConfigDir]  + "config.txt"+ "\" "   + "-c SF -f " + "\"" + @[User::SQLStorage]  + @[User::Table2] + "_Fields.sql" +  "\" " +  "-o output_format=csv -o friendly=false -o header=false -o timing=false -o output_file=" +  "\"" + @[User::SQLStorage] +  @[User::Table2] + "\\fields.csv" + "\""</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExecuteProcessData
                  Executable="C:\Program Files\Snowflake SnowSQL\snowsql.exe"
                  Arguments="--config &quot;C:\temp\DWAH\SnowSQL\config.txt&quot; -c SF -f &quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\_Fields.sql&quot; -o output_format=csv -o friendly=false -o header=false -o timing=false -o output_file=&quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\\fields.csv&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\4 Script Task - Generate SQL Command"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{060383E0-46DF-44BA-9AAB-8CCEE4B01157}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="4 Script Task - Generate SQL Command"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_2270c7a9772940b4b6c773206e49ead4"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Catalog,User::HistoryCatalog,User::HistorySchema,User::Schema,User::SQLStorage,User::Table2">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Settings.get_Default():ST_fb05d46188b0481895042273cb5ed851.Properties.Sett" +
    "ings")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections.Generic;
#endregion

namespace ST_fb05d46188b0481895042273cb5ed851
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Modify these, specify which table in Snowflake to generate a history table for.
            var catalog = (string) Dts.Variables["Catalog"].Value;
            var schema = (string) Dts.Variables["Schema"].Value;
            var table = (string) Dts.Variables["Table2"].Value;

            //Get history catalog and schema to replace into SQL query below, table name matches above table name
            var historyCatalog = (string) Dts.Variables["HistoryCatalog"].Value;
            var historySchema = (string) Dts.Variables["HistorySchema"].Value;
            var dir = (string)Dts.Variables["SQLStorage"].Value + (string)Dts.Variables["Table2"].Value;

            var sqlquery =
@"CREATE OR REPLACE TEMPORARY TABLE tmpFieldType (FieldName VARCHAR(), FieldType VARCHAR()); 
INSERT INTO tmpFieldType (FieldName, FieldType)
SELECT COLUMN_NAME, DATA_TYPE FROM information_schema.columns
WHERE table_catalog='{catalog}'
AND
table_schema='{schema}'
AND
table_name='{table}';

CREATE TABLE IF NOT EXISTS ""{history_catalog}"".""{history_schema}"".""{table}""
(
    _KEY NUMBER(38, 0) autoincrement start 1 increment 1,
    _EFF_FROM DATE,
    _EFF_TO DATE,
    DWID VARCHAR(),
    FieldValue VARCHAR(),
    FieldName VARCHAR(),
    FieldType VARCHAR(),
    DataSource VARCHAR()
);

SET VAR_CurrentDate = CURRENT_DATE();
SET VAR_YesterdayDate = DATEADD(Day, -1, $Var_CurrentDate);

CREATE OR REPLACE TEMPORARY TABLE tmp{table}_LoadData
(
  DWID VARCHAR(),
  FieldValue VARCHAR(),
  FieldName VARCHAR(),
  FieldType VARCHAR(),
  DateUpdated DATE,
  DataSource VARCHAR()
);

INSERT INTO tmp{table}_LoadData
SELECT
    UP.DWID,
    UP.FieldValue,
    UP.FieldName,
    FT.FieldType,
    $VAR_CurrentDate AS DateUpdated,
    'Ascend' AS DataSource
FROM
    (
      SELECT 
      ID AS DWID,
      {cast_columns}
      FROM
      ""{catalog}"".""{schema}"".""{table}""
    ) AS C
    UNPIVOT 
    (
      FieldValue for FieldName IN 
      (
        {list_columns}
      )
    ) AS UP
    INNER JOIN tmpFieldType AS FT ON UPPER(UP.FieldName) = UPPER(FT.FieldName);

--Existing records that have changed.
UPDATE ""{history_catalog}"".""{history_schema}"".""{table}"" AS T
SET
    T._EFF_TO = $VAR_YesterdayDate
FROM tmp{table}_LoadData AS S
WHERE
(
  T._EFF_TO IS NULL
  AND S.DWID = T.DWID
  AND S.FieldName = T.FieldName
)
AND
(
  COALESCE(S.FieldValue, '') != COALESCE(T.FieldValue, '')
  OR COALESCE(S.FieldType, '') != COALESCE(T.FieldType, '')
  OR COALESCE(S.DataSource, '') != COALESCE(T.DataSource, '')
);

            --Inserting new records
INSERT INTO ""{history_catalog}"".""{history_schema}"".""{table}""(_EFF_FROM, DWID, FieldValue, FieldName, FieldType, DataSource)
SELECT
    $VAR_CurrentDate AS _EFF_FROM,
    S.DWID,
    S.FieldValue,
    S.FieldName,
    S.FieldType,
    S.DataSource
FROM tmp{table}_LoadData AS S
    LEFT OUTER JOIN ""{history_catalog}"".""{history_schema}"".""{table}"" AS T ON
    (
      T._EFF_TO IS NULL
      AND S.DWID = T.DWID
      AND S.FieldName = T.FieldName
    )
WHERE T.DWID IS NULL;

            --Deleted record criteria
UPDATE ""{history_catalog}"".""{history_schema}"".""{table}"" AS T
SET
    T._EFF_TO = $VAR_YesterdayDate
WHERE
    T._EFF_TO IS NULL
AND T._KEY IN
(
    SELECT H._KEY
    FROM ""{history_catalog}"".""{history_schema}"".""{table}""
         AS H
        LEFT OUTER JOIN tmp{table}_LoadData AS UP ON
        (
            UP.DWID = H.DWID
            AND UP.FieldName = H.FieldName
        )
        WHERE
        UP.DWID IS NULL
);
DROP TABLE IF EXISTS tmp{table}_LoadData;";

            //Replace catalog, schema, and table in query
            sqlquery = sqlquery.Replace("{catalog}", catalog);
            sqlquery = sqlquery.Replace("{schema}", schema);
            sqlquery = sqlquery.Replace("{table}", table);
            sqlquery = sqlquery.Replace("{history_catalog}", historyCatalog);
            sqlquery = sqlquery.Replace("{history_schema}", historySchema);

            var fieldNames = new List<string>();
			using(var reader = new StreamReader(dir + "\\fields.csv"))
            {
                while(!reader.EndOfStream)
                {
                    var value = reader.ReadLine().Replace("\"", "");
                    fieldNames.Add(value);
                }
            }

            //Generate list that includes cast command of field names
            var fields = "";
            for (int i = 0; i < fieldNames.Count; i++)
            {
                if (i == fieldNames.Count - 1)
                {
                    fields += "CAST(" + (fieldNames[i]) + " AS VARCHAR()) AS " + (fieldNames[i]);
                }
                else
                {
                    fields += "CAST(" + (fieldNames[i]) + " AS VARCHAR()) AS " + (fieldNames[i]) + ",";
                }
            }
            sqlquery = sqlquery.Replace("{cast_columns}", fields);

            //Generate basic list with comma delimiters of field names
            fields = "";
            for(int i = 0; i < fieldNames.Count; i++)
            {
                if (i == fieldNames.Count - 1)
                {
                    fields += (fieldNames[i]);
                }
                else
                {
                    fields += (fieldNames[i] + ",");
                }
            }
            sqlquery = sqlquery.Replace("{list_columns}", fields);
            
            using (StreamWriter writer = new StreamWriter(dir + "\\generated.sql"))
            {
                writer.WriteLine(sqlquery);
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_2270c7a9772940b4b6c773206e49ead4.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{EEB16687-8058-4612-9047-307B5BAC32EF}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_fb05d46188b0481895042273cb5ed851</RootNamespace><AssemblyName>ST_2270c7a9772940b4b6c773206e49ead4</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_fb05d46188b0481895042273cb5ed851</msb:CodeName>
		<msb:DisplayName>ST_fb05d46188b0481895042273cb5ed851</msb:DisplayName>
		<msb:ProjectId>{BB1A5D2F-BB49-4A8F-ABBB-D2FED5C52EE9}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_2270c7a9772940b4b6c773206e49ead4.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fb05d46188b0481895042273cb5ed851.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_2270c7a9772940b4b6c773206e49ead4.dll">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
bwQOAKcB4AMOAAgC4AMOAIcBWgQGALwBBgUKAM4DpQMSALwFAwESAMoAAwEGAH8DNwQGAK8EWQAG
ANMANwQGANsEWQAGADYBNwQGAN8ANwQGACQGhAQAAAAAUAAAAAAAAQABAAEAEABPBAEAOQABAAEA
AAAQAC0FiQVRAAEAAwAAARAAxgWJBWUAAwAHAAMBAADfBQAASQAEAAoAEQBDBLAAEQBbAbQAEQC6
ALgABgaCALwAVoDPBb8AVoA7Ab8AUCAAAAAAhgBVBAYAAQBgIwAAAACGGOYEBgABAGgjAAAAAIMY
5gQGAAEAcCMAAAAAkwi6BMMAAQCcIwAAAACTCEMByAABAKMjAAAAAJMITwHNAAEAqyMAAAAAlgj7
BdMAAgCyIwAAAACGGOYEBgACALojAAAAAJEY7ATYAAIAAAABAF8DCQDmBAEAEQDmBAYAGQDmBAoA
KQDmBBAAMQDmBBAAOQDmBBAAQQDmBBAASQDmBBAAUQDmBBAAWQDmBBAAYQDmBBAAaQDmBAYAmQDm
BAYAwQDmBBUA0QDmBAYAcQDXBTIA2QC4BTcA4QAuBDwA6QBVA0IA8QDtBUYA8QCyAEwADADmBAYA
gQDmBBAA+QAjAVgADACuAFwAgQAeBGIAAQGfAQYADAAWBmYADAAuBGoA8QDtBXAA8QDtBXYAiQDm
BBAACQEsARAA2QAHBgEAcQDmBAYAoQDmBAYAEQHxAH0AEQEgBoYAqQDmBIwAyQDmBAYACAAUAKYA
CAAYAKsAKQBzABMBLgALAOsALgATAPQALgAbABMBLgAjABwBLgArAEUBLgAzAEUBLgA7AEUBLgBD
ABwBLgBLAEsBLgBTAEUBLgBbAGIBQwBjAKsASQBzABMBYQB7AKsAYwBrAKsAGwADAAEABAADAAAA
vgTcAAAAYwHhAAAA/wXmAAIABAADAAIABQAFAAEABgAFAAIABwAHAFIABIAAAAEAAABgHjhkAAAA
AAAALAAAAAQAAAAAAAAAAAAAAJQAigAAAAAADQAAAAAAAAAAAAAAnQCGAwAAAAAEAAAAAAAAAAAA
AACUADcEAAAAAA0AAAAAAAAAAAAAAJ0AYwAAAAAAAAAAAAEAAAA3BQAABQACAAAAAAAAU1RfZmIw
NWQ0NjE4OGIwNDgxODk1MDQyMjczY2I1ZWQ4NTEATGlzdGAxAFNUXzIyNzBjN2E5NzcyOTQwYjRi
NmM3NzMyMDZlNDllYWQ0ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1h
bmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBZGQA
UmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBS
ZWFkTGluZQBXcml0ZUxpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNj
cmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8yMjcwYzdhOTc3Mjk0MGI0
YjZjNzczMjA2ZTQ5ZWFkNC5kbGwAZ2V0X0VuZE9mU3RyZWFtAGdldF9JdGVtAFN5c3RlbQBFbnVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AU3RyZWFtUmVhZGVyAFRleHRS
ZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgAuY3RvcgAu
Y2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTVF9mYjA1ZDQ2MTg4YjA0ODE4OTUwNDIyNzNjYjVlZDg1MS5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZmIwNWQ0NjE4OGIw
NDgxODk1MDQyMjczY2I1ZWQ4NTEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1
Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0
X1Rhc2tSZXN1bHQAZ2V0X0NvdW50AGdldF9Bc3NlbWJseQAAAAAAD0MAYQB0AGEAbABvAGcAAA1T
AGMAaABlAG0AYQAADVQAYQBiAGwAZQAyAAAdSABpAHMAdABvAHIAeQBDAGEAdABhAGwAbwBnAAAb
SABpAHMAdABvAHIAeQBTAGMAaABlAG0AYQAAFVMAUQBMAFMAdABvAHIAYQBnAGUAAJbfQwBSAEUA
QQBUAEUAIABPAFIAIABSAEUAUABMAEEAQwBFACAAVABFAE0AUABPAFIAQQBSAFkAIABUAEEAQgBM
AEUAIAB0AG0AcABGAGkAZQBsAGQAVAB5AHAAZQAgACgARgBpAGUAbABkAE4AYQBtAGUAIABWAEEA
UgBDAEgAQQBSACgAKQAsACAARgBpAGUAbABkAFQAeQBwAGUAIABWAEEAUgBDAEgAQQBSACgAKQAp
ADsAIAANAAoASQBOAFMARQBSAFQAIABJAE4AVABPACAAdABtAHAARgBpAGUAbABkAFQAeQBwAGUA
IAAoAEYAaQBlAGwAZABOAGEAbQBlACwAIABGAGkAZQBsAGQAVAB5AHAAZQApAA0ACgBTAEUATABF
AEMAVAAgAEMATwBMAFUATQBOAF8ATgBBAE0ARQAsACAARABBAFQAQQBfAFQAWQBQAEUAIABGAFIA
TwBNACAAaQBuAGYAbwByAG0AYQB0AGkAbwBuAF8AcwBjAGgAZQBtAGEALgBjAG8AbAB1AG0AbgBz
AA0ACgBXAEgARQBSAEUAIAB0AGEAYgBsAGUAXwBjAGEAdABhAGwAbwBnAD0AJwB7AGMAYQB0AGEA
bABvAGcAfQAnAA0ACgBBAE4ARAANAAoAdABhAGIAbABlAF8AcwBjAGgAZQBtAGEAPQAnAHsAcwBj
AGgAZQBtAGEAfQAnAA0ACgBBAE4ARAANAAoAdABhAGIAbABlAF8AbgBhAG0AZQA9ACcAewB0AGEA
YgBsAGUAfQAnADsADQAKAA0ACgBDAFIARQBBAFQARQAgAFQAQQBCAEwARQAgAEkARgAgAE4ATwBU
ACAARQBYAEkAUwBUAFMAIAAiAHsAaABpAHMAdABvAHIAeQBfAGMAYQB0AGEAbABvAGcAfQAiAC4A
IgB7AGgAaQBzAHQAbwByAHkAXwBzAGMAaABlAG0AYQB9ACIALgAiAHsAdABhAGIAbABlAH0AIgAN
AAoAKAANAAoAIAAgACAAIABfAEsARQBZACAATgBVAE0AQgBFAFIAKAAzADgALAAgADAAKQAgAGEA
dQB0AG8AaQBuAGMAcgBlAG0AZQBuAHQAIABzAHQAYQByAHQAIAAxACAAaQBuAGMAcgBlAG0AZQBu
AHQAIAAxACwADQAKACAAIAAgACAAXwBFAEYARgBfAEYAUgBPAE0AIABEAEEAVABFACwADQAKACAA
IAAgACAAXwBFAEYARgBfAFQATwAgAEQAQQBUAEUALAANAAoAIAAgACAAIABEAFcASQBEACAAVgBB
AFIAQwBIAEEAUgAoACkALAANAAoAIAAgACAAIABGAGkAZQBsAGQAVgBhAGwAdQBlACAAVgBBAFIA
QwBIAEEAUgAoACkALAANAAoAIAAgACAAIABGAGkAZQBsAGQATgBhAG0AZQAgAFYAQQBSAEMASABB
AFIAKAApACwADQAKACAAIAAgACAARgBpAGUAbABkAFQAeQBwAGUAIABWAEEAUgBDAEgAQQBSACgA
KQAsAA0ACgAgACAAIAAgAEQAYQB0AGEAUwBvAHUAcgBjAGUAIABWAEEAUgBDAEgAQQBSACgAKQAN
AAoAKQA7AA0ACgANAAoAUwBFAFQAIABWAEEAUgBfAEMAdQByAHIAZQBuAHQARABhAHQAZQAgAD0A
IABDAFUAUgBSAEUATgBUAF8ARABBAFQARQAoACkAOwANAAoAUwBFAFQAIABWAEEAUgBfAFkAZQBz
AHQAZQByAGQAYQB5AEQAYQB0AGUAIAA9ACAARABBAFQARQBBAEQARAAoAEQAYQB5ACwAIAAtADEA
LAAgACQAVgBhAHIAXwBDAHUAcgByAGUAbgB0AEQAYQB0AGUAKQA7AA0ACgANAAoAQwBSAEUAQQBU
AEUAIABPAFIAIABSAEUAUABMAEEAQwBFACAAVABFAE0AUABPAFIAQQBSAFkAIABUAEEAQgBMAEUA
IAB0AG0AcAB7AHQAYQBiAGwAZQB9AF8ATABvAGEAZABEAGEAdABhAA0ACgAoAA0ACgAgACAARABX
AEkARAAgAFYAQQBSAEMASABBAFIAKAApACwADQAKACAAIABGAGkAZQBsAGQAVgBhAGwAdQBlACAA
VgBBAFIAQwBIAEEAUgAoACkALAANAAoAIAAgAEYAaQBlAGwAZABOAGEAbQBlACAAVgBBAFIAQwBI
AEEAUgAoACkALAANAAoAIAAgAEYAaQBlAGwAZABUAHkAcABlACAAVgBBAFIAQwBIAEEAUgAoACkA
LAANAAoAIAAgAEQAYQB0AGUAVQBwAGQAYQB0AGUAZAAgAEQAQQBUAEUALAANAAoAIAAgAEQAYQB0
AGEAUwBvAHUAcgBjAGUAIABWAEEAUgBDAEgAQQBSACgAKQANAAoAKQA7AA0ACgANAAoASQBOAFMA
RQBSAFQAIABJAE4AVABPACAAdABtAHAAewB0AGEAYgBsAGUAfQBfAEwAbwBhAGQARABhAHQAYQAN
AAoAUwBFAEwARQBDAFQADQAKACAAIAAgACAAVQBQAC4ARABXAEkARAAsAA0ACgAgACAAIAAgAFUA
UAAuAEYAaQBlAGwAZABWAGEAbAB1AGUALAANAAoAIAAgACAAIABVAFAALgBGAGkAZQBsAGQATgBh
AG0AZQAsAA0ACgAgACAAIAAgAEYAVAAuAEYAaQBlAGwAZABUAHkAcABlACwADQAKACAAIAAgACAA
JABWAEEAUgBfAEMAdQByAHIAZQBuAHQARABhAHQAZQAgAEEAUwAgAEQAYQB0AGUAVQBwAGQAYQB0
AGUAZAAsAA0ACgAgACAAIAAgACcAQQBzAGMAZQBuAGQAJwAgAEEAUwAgAEQAYQB0AGEAUwBvAHUA
cgBjAGUADQAKAEYAUgBPAE0ADQAKACAAIAAgACAAKAANAAoAIAAgACAAIAAgACAAUwBFAEwARQBD
AFQAIAANAAoAIAAgACAAIAAgACAASQBEACAAQQBTACAARABXAEkARAAsAA0ACgAgACAAIAAgACAA
IAB7AGMAYQBzAHQAXwBjAG8AbAB1AG0AbgBzAH0ADQAKACAAIAAgACAAIAAgAEYAUgBPAE0ADQAK
ACAAIAAgACAAIAAgACIAewBjAGEAdABhAGwAbwBnAH0AIgAuACIAewBzAGMAaABlAG0AYQB9ACIA
LgAiAHsAdABhAGIAbABlAH0AIgANAAoAIAAgACAAIAApACAAQQBTACAAQwANAAoAIAAgACAAIABV
AE4AUABJAFYATwBUACAADQAKACAAIAAgACAAKAANAAoAIAAgACAAIAAgACAARgBpAGUAbABkAFYA
YQBsAHUAZQAgAGYAbwByACAARgBpAGUAbABkAE4AYQBtAGUAIABJAE4AIAANAAoAIAAgACAAIAAg
ACAAKAANAAoAIAAgACAAIAAgACAAIAAgAHsAbABpAHMAdABfAGMAbwBsAHUAbQBuAHMAfQANAAoA
IAAgACAAIAAgACAAKQANAAoAIAAgACAAIAApACAAQQBTACAAVQBQAA0ACgAgACAAIAAgAEkATgBO
AEUAUgAgAEoATwBJAE4AIAB0AG0AcABGAGkAZQBsAGQAVAB5AHAAZQAgAEEAUwAgAEYAVAAgAE8A
TgAgAFUAUABQAEUAUgAoAFUAUAAuAEYAaQBlAGwAZABOAGEAbQBlACkAIAA9ACAAVQBQAFAARQBS
ACgARgBUAC4ARgBpAGUAbABkAE4AYQBtAGUAKQA7AA0ACgANAAoALQAtAEUAeABpAHMAdABpAG4A
ZwAgAHIAZQBjAG8AcgBkAHMAIAB0AGgAYQB0ACAAaABhAHYAZQAgAGMAaABhAG4AZwBlAGQALgAN
AAoAVQBQAEQAQQBUAEUAIAAiAHsAaABpAHMAdABvAHIAeQBfAGMAYQB0AGEAbABvAGcAfQAiAC4A
IgB7AGgAaQBzAHQAbwByAHkAXwBzAGMAaABlAG0AYQB9ACIALgAiAHsAdABhAGIAbABlAH0AIgAg
AEEAUwAgAFQADQAKAFMARQBUAA0ACgAgACAAIAAgAFQALgBfAEUARgBGAF8AVABPACAAPQAgACQA
VgBBAFIAXwBZAGUAcwB0AGUAcgBkAGEAeQBEAGEAdABlAA0ACgBGAFIATwBNACAAdABtAHAAewB0
AGEAYgBsAGUAfQBfAEwAbwBhAGQARABhAHQAYQAgAEEAUwAgAFMADQAKAFcASABFAFIARQANAAoA
KAANAAoAIAAgAFQALgBfAEUARgBGAF8AVABPACAASQBTACAATgBVAEwATAANAAoAIAAgAEEATgBE
ACAAUwAuAEQAVwBJAEQAIAA9ACAAVAAuAEQAVwBJAEQADQAKACAAIABBAE4ARAAgAFMALgBGAGkA
ZQBsAGQATgBhAG0AZQAgAD0AIABUAC4ARgBpAGUAbABkAE4AYQBtAGUADQAKACkADQAKAEEATgBE
AA0ACgAoAA0ACgAgACAAQwBPAEEATABFAFMAQwBFACgAUwAuAEYAaQBlAGwAZABWAGEAbAB1AGUA
LAAgACcAJwApACAAIQA9ACAAQwBPAEEATABFAFMAQwBFACgAVAAuAEYAaQBlAGwAZABWAGEAbAB1
AGUALAAgACcAJwApAA0ACgAgACAATwBSACAAQwBPAEEATABFAFMAQwBFACgAUwAuAEYAaQBlAGwA
ZABUAHkAcABlACwAIAAnACcAKQAgACEAPQAgAEMATwBBAEwARQBTAEMARQAoAFQALgBGAGkAZQBs
AGQAVAB5AHAAZQAsACAAJwAnACkADQAKACAAIABPAFIAIABDAE8AQQBMAEUAUwBDAEUAKABTAC4A
RABhAHQAYQBTAG8AdQByAGMAZQAsACAAJwAnACkAIAAhAD0AIABDAE8AQQBMAEUAUwBDAEUAKABU
AC4ARABhAHQAYQBTAG8AdQByAGMAZQAsACAAJwAnACkADQAKACkAOwANAAoADQAKACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAC0ALQBJAG4AcwBlAHIAdABpAG4AZwAgAG4AZQB3ACAAcgBlAGMAbwBy
AGQAcwANAAoASQBOAFMARQBSAFQAIABJAE4AVABPACAAIgB7AGgAaQBzAHQAbwByAHkAXwBjAGEA
dABhAGwAbwBnAH0AIgAuACIAewBoAGkAcwB0AG8AcgB5AF8AcwBjAGgAZQBtAGEAfQAiAC4AIgB7
AHQAYQBiAGwAZQB9ACIAKABfAEUARgBGAF8ARgBSAE8ATQAsACAARABXAEkARAAsACAARgBpAGUA
bABkAFYAYQBsAHUAZQAsACAARgBpAGUAbABkAE4AYQBtAGUALAAgAEYAaQBlAGwAZABUAHkAcABl
ACwAIABEAGEAdABhAFMAbwB1AHIAYwBlACkADQAKAFMARQBMAEUAQwBUAA0ACgAgACAAIAAgACQA
VgBBAFIAXwBDAHUAcgByAGUAbgB0AEQAYQB0AGUAIABBAFMAIABfAEUARgBGAF8ARgBSAE8ATQAs
AA0ACgAgACAAIAAgAFMALgBEAFcASQBEACwADQAKACAAIAAgACAAUwAuAEYAaQBlAGwAZABWAGEA
bAB1AGUALAANAAoAIAAgACAAIABTAC4ARgBpAGUAbABkAE4AYQBtAGUALAANAAoAIAAgACAAIABT
AC4ARgBpAGUAbABkAFQAeQBwAGUALAANAAoAIAAgACAAIABTAC4ARABhAHQAYQBTAG8AdQByAGMA
ZQANAAoARgBSAE8ATQAgAHQAbQBwAHsAdABhAGIAbABlAH0AXwBMAG8AYQBkAEQAYQB0AGEAIABB
AFMAIABTAA0ACgAgACAAIAAgAEwARQBGAFQAIABPAFUAVABFAFIAIABKAE8ASQBOACAAIgB7AGgA
aQBzAHQAbwByAHkAXwBjAGEAdABhAGwAbwBnAH0AIgAuACIAewBoAGkAcwB0AG8AcgB5AF8AcwBj
AGgAZQBtAGEAfQAiAC4AIgB7AHQAYQBiAGwAZQB9ACIAIABBAFMAIABUACAATwBOAA0ACgAgACAA
IAAgACgADQAKACAAIAAgACAAIAAgAFQALgBfAEUARgBGAF8AVABPACAASQBTACAATgBVAEwATAAN
AAoAIAAgACAAIAAgACAAQQBOAEQAIABTAC4ARABXAEkARAAgAD0AIABUAC4ARABXAEkARAANAAoA
IAAgACAAIAAgACAAQQBOAEQAIABTAC4ARgBpAGUAbABkAE4AYQBtAGUAIAA9ACAAVAAuAEYAaQBl
AGwAZABOAGEAbQBlAA0ACgAgACAAIAAgACkADQAKAFcASABFAFIARQAgAFQALgBEAFcASQBEACAA
SQBTACAATgBVAEwATAA7AA0ACgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtAEQAZQBs
AGUAdABlAGQAIAByAGUAYwBvAHIAZAAgAGMAcgBpAHQAZQByAGkAYQANAAoAVQBQAEQAQQBUAEUA
IAAiAHsAaABpAHMAdABvAHIAeQBfAGMAYQB0AGEAbABvAGcAfQAiAC4AIgB7AGgAaQBzAHQAbwBy
AHkAXwBzAGMAaABlAG0AYQB9ACIALgAiAHsAdABhAGIAbABlAH0AIgAgAEEAUwAgAFQADQAKAFMA
RQBUAA0ACgAgACAAIAAgAFQALgBfAEUARgBGAF8AVABPACAAPQAgACQAVgBBAFIAXwBZAGUAcwB0
AGUAcgBkAGEAeQBEAGEAdABlAA0ACgBXAEgARQBSAEUADQAKACAAIAAgACAAVAAuAF8ARQBGAEYA
XwBUAE8AIABJAFMAIABOAFUATABMAA0ACgBBAE4ARAAgAFQALgBfAEsARQBZACAASQBOAA0ACgAo
AA0ACgAgACAAIAAgAFMARQBMAEUAQwBUACAASAAuAF8ASwBFAFkADQAKACAAIAAgACAARgBSAE8A
TQAgACIAewBoAGkAcwB0AG8AcgB5AF8AYwBhAHQAYQBsAG8AZwB9ACIALgAiAHsAaABpAHMAdABv
AHIAeQBfAHMAYwBoAGUAbQBhAH0AIgAuACIAewB0AGEAYgBsAGUAfQAiAA0ACgAgACAAIAAgACAA
IAAgACAAIABBAFMAIABIAA0ACgAgACAAIAAgACAAIAAgACAATABFAEYAVAAgAE8AVQBUAEUAUgAg
AEoATwBJAE4AIAB0AG0AcAB7AHQAYQBiAGwAZQB9AF8ATABvAGEAZABEAGEAdABhACAAQQBTACAA
VQBQACAATwBOAA0ACgAgACAAIAAgACAAIAAgACAAKAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAVQBQAC4ARABXAEkARAAgAD0AIABIAC4ARABXAEkARAANAAoAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAQQBOAEQAIABVAFAALgBGAGkAZQBsAGQATgBhAG0AZQAgAD0AIABIAC4ARgBpAGUAbABk
AE4AYQBtAGUADQAKACAAIAAgACAAIAAgACAAIAApAA0ACgAgACAAIAAgACAAIAAgACAAVwBIAEUA
UgBFAA0ACgAgACAAIAAgACAAIAAgACAAVQBQAC4ARABXAEkARAAgAEkAUwAgAE4AVQBMAEwADQAK
ACkAOwANAAoARABSAE8AUAAgAFQAQQBCAEwARQAgAEkARgAgAEUAWABJAFMAVABTACAAdABtAHAA
ewB0AGEAYgBsAGUAfQBfAEwAbwBhAGQARABhAHQAYQA7AAETewBjAGEAdABhAGwAbwBnAH0AABF7
AHMAYwBoAGUAbQBhAH0AAA97AHQAYQBiAGwAZQB9AAAjewBoAGkAcwB0AG8AcgB5AF8AYwBhAHQA
YQBsAG8AZwB9AAAhewBoAGkAcwB0AG8AcgB5AF8AcwBjAGgAZQBtAGEAfQAAF1wAZgBpAGUAbABk
AHMALgBjAHMAdgAAAyIAAAEAC0MAQQBTAFQAKAAAJSAAQQBTACAAVgBBAFIAQwBIAEEAUgAoACkA
KQAgAEEAUwAgAAADLAAAHXsAYwBhAHMAdABfAGMAbwBsAHUAbQBuAHMAfQAAHXsAbABpAHMAdABf
AGMAbwBsAHUAbQBuAHMAfQAAHVwAZwBlAG4AZQByAGEAdABlAGQALgBzAHEAbAAAcVMAVABfAGYA
YgAwADUAZAA0ADYAMQA4ADgAYgAwADQAOAAxADgAOQA1ADAANAAyADIANwAzAGMAYgA1AGUAZAA4
ADUAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAADkOTL2CCna
SLFalSgXII7LAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdFgcODg4ODg4ODhUSPQEODhJBDggI
EkUEIAASbQQgABJxBSABEnUcAyAAHAUAAg4ODgUgAg4ODgUVEj0BDgMgAA4FIAEBEwADIAACAyAA
CAUgARMACAUAAQ4dDgYAAw4ODg4IAAESgIkRgI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3N
gIDMkQQAAAAABAEAAAADBhJVAwYSWQMGEhACBggDBhEUBAAAElUEAAASWQUAAQESWQQAABIQAwAA
AQQIABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU1RfZmIwNWQ0NjE4OGIwNDgxODk1MDQyMjczY2I1ZWQ4NTEAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAOEoAAAAA
AAAAAAAAUkoAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERKAAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAA
AAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAOGRgHgAAAQA4ZGAePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBmAGIA
MAA1AGQANAA2ADEAOAA4AGIAMAA0ADgAMQA4ADkANQAwADQAMgAyADcAMwBjAGIANQBlAGQAOAA1
ADEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA3ADcANgAuADIA
NQA2ADUANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAyADIANwAw
AGMANwBhADkANwA3ADIAOQA0ADAAYgA0AGIANgBjADcANwAzADIAMAA2AGUANAA5AGUAYQBkADQA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABf
ADIAMgA3ADAAYwA3AGEAOQA3ADcAMgA5ADQAMABiADQAYgA2AGMANwA3ADMAMgAwADYAZQA0ADkA
ZQBhAGQANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBm
AGIAMAA1AGQANAA2ADEAOAA4AGIAMAA0ADgAMQA4ADkANQAwADQAMgAyADcAMwBjAGIANQBlAGQA
OAA1ADEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANwA3
ADYALgAyADUANgA1ADYAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcANwA3ADYALgAyADUANgA1ADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAZDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\5 Execute Process Task - Run Generated Command"
              DTS:CreationName="Microsoft.ExecuteProcess"
              DTS:Description="Execute Process Task"
              DTS:DTSID="{2D385278-C29B-4764-9D9A-C7A181BCB712}"
              DTS:ExecutableType="Microsoft.ExecuteProcess"
              DTS:LocaleID="-1"
              DTS:ObjectName="5 Execute Process Task - Run Generated Command"
              DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="Arguments">"--config " + "\"" + @[User::SnowSQLConfigDir] + "config.txt" + "\" " + "-c SF -f " + "\"" + @[User::SQLStorage] + @[User::Table2]  +"\\generated.sql" + "\""</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExecuteProcessData
                  Executable="C:\Program Files\Snowflake SnowSQL\snowsql.exe"
                  Arguments="--config &quot;C:\temp\DWAH\SnowSQL\config.txt&quot; -c SF -f &quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\\generated.sql&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{AE9337FA-C002-4F5D-984A-EDF813492460}"
              DTS:From="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\1 Script Task - Create Folder"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\2 Script Task - Generate Fields Command" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{5CE4F4C4-2A48-4CBB-8B4E-390C6C4A5A75}"
              DTS:From="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\2 Script Task - Generate Fields Command"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\3 Process Task - Get Field Names" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{465DE5BB-2929-4E47-967D-AD7D17345B88}"
              DTS:From="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\3 Process Task - Get Field Names"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\4 Script Task - Generate SQL Command" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{22729D3C-0887-4827-BAB2-D1C67396947D}"
              DTS:From="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\4 Script Task - Generate SQL Command"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\5 Execute Process Task - Run Generated Command" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{0FE044E3-BD0F-4DD9-9BC1-50A48F92BE3C}"
              DTS:ObjectName="{0FE044E3-BD0F-4DD9-9BC1-50A48F92BE3C}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::Table2" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{047B076F-E8E4-4638-B811-29A8B15B723F}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="2-3 Foreach Loop Container - Create History Table Set 3">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
            DTS:DTSID="{9BBA0947-47C7-4EA4-A682-1428872B8643}"
            DTS:ObjectName="{573404A2-5F9B-47F8-ACC1-A89F2DC2C96A}">
            <DTS:ObjectData>
              <FEEFVE
                VariableName="User::TableNames3" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{2446BF27-AF4D-4EDF-861B-C7FFF7576B5D}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="Table3">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\1 Script Task - Create Folder"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{99F10FD1-C7BD-4A25-BC35-C06F49D4CC12}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="1 Script Task - Create Folder"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_ab85da48f7234ef1a73bd01f17f332f3"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="VisualBasic"
                  ReadOnlyVariables="User::SQLStorage,User::Table3">
                  <ProjectItem
                    Name="My Project\AssemblyInfo.vb"
                    Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_ea5b5d781f59475d8e90a4605f58b2da")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_ea5b5d781f59475d8e90a4605f58b2da")> 
<Assembly: AssemblyCopyright("Copyright @  2021")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("be382f33-10d5-44a7-aa91-7b708387f824")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.vb"
                    Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math

'Imports added for this script
Imports System.IO

Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here

        Dim Dir As String = Dts.Variables("SQLStorage").Value.ToString + "\" + Dts.Variables("Table3").Value.ToString + "\"
        Dim fireAgain As Boolean
        Dts.Events.FireInformation(0, "Table1", Dir, Nothing, 0, fireAgain)
        ' Delete the folder
        If Directory.Exists(Dir) = True Then
            Directory.Delete(Dir, True)
        End If

        'Create the folder
        If Directory.Exists(Dir) = False Then
            Directory.CreateDirectory(Dir)
        End If


        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Settings.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
                  <ProjectItem
                    Name="ST_ab85da48f7234ef1a73bd01f17f332f3.vbproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{8C2E0B00-8680-4B5D-A3F3-A0B052710EEC}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>My Project</AppDesignerFolder><RootNamespace>ST_ea5b5d781f59475d8e90a4605f58b2da</RootNamespace><AssemblyName>ST_ab85da48f7234ef1a73bd01f17f332f3</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>true</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>false</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><Import Include="Microsoft.VisualBasic" /><Import Include="System" /><Import Include="System.Collections" /><Import Include="System.Data" /><Import Include="System.Diagnostics" /><Import Include="System.Windows.Forms" /></ItemGroup><ItemGroup><AppDesigner Include="My Project\" /><Compile Include="My Project\AssemblyInfo.vb"><SubType>Code</SubType></Compile><EmbeddedResource Include="My Project\Resources.resx"><Generator>VbMyResourcesResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.vb</LastGenOutput><CustomToolNamespace>My.Resources</CustomToolNamespace></EmbeddedResource><Compile Include="My Project\Resources.Designer.vb"><AutoGen>True</AutoGen><DesignTime>True</DesignTime><DependentUpon>Resources.resx</DependentUpon><SubType>Code</SubType></Compile><None Include="My Project\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.vb</LastGenOutput></None><Compile Include="My Project\Settings.Designer.vb"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon><SubType>Code</SubType></Compile><Compile Include="ScriptMain.vb"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a VB project.--><Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ea5b5d781f59475d8e90a4605f58b2da</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ea5b5d781f59475d8e90a4605f58b2da</msb:DisplayName>
		<msb:ProjectId>{37D8279E-33E5-4893-8A4C-596F5AA1A36F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ab85da48f7234ef1a73bd01f17f332f3.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="My Project\Resources.Designer.vb"
                    Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
                  <BinaryItem
                    Name="ST_ab85da48f7234ef1a73bd01f17f332f3.dll">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
DwAFAQAAYwcAAGEACQARAAUBAAAQAAAAYQAJABgAAgEAANUIAACVAAoAGgAxAF0GJAExADQGLAEx
AEgGNAExAHYGPAERAPsGRAERAJ4BSAERAE0ETAERAPwIUAEhACcJ4gAGBqoAUwFWgMUIVgFWgH4B
VgFQIAAAAAAGGA0HBgABAFggAAAAAAYYDQcGAAEAYCAAAAAAERgTB1oBAQCKIAAAAAATCOMGXgEB
AJYgAAAAABMIsAVjAQEAoiAAAAAAEwjUBmgBAQCuIAAAAAATCFMHbQEBALogAAAAAAMYDQcGAAEA
wiAAAAAAFgiUBnIBAQDuIAAAAAAWCIYBdwEBAPUgAAAAABYIkgF8AQEA/SAAAAAAERgTB1oBAgAO
IQAAAAAGGA0HBgACABghAAAAABYIVQSCAQIAdCEAAAAABhgNBwYAAgB8IQAAAAAGAKsFBgACABwi
AAAAAMYCrwi6AAIAKiIAAAAAxgIdAb8AAwAyIgAAAACDAHYBhwEDAD4iAAAAAMYCowSLAAMASCIA
AAAAEQCXAIwBAwBoIgAAAAABAIMAlAEEALogAAAAAAYYDQcGAAUAdCIAAAAAAwgEAUoABQCoIgAA
AAAGGA0HBgAFAAAAAQByBAAAAQAyBgAAAQAUAQAAAQAUAQkADQcBABEADQcGABkADQcKACkADQcQ
ADEADQcQADkADQcQAEEADQcQAEkADQcQAFEADQcQAFkADQcVAGEADQcVAGkADQcQAHEADQcQAHkA
DQcQAIEADQcaAJEADQcgAKkADQcGALEADQcGALkADQcGANEADQcmAOkADQcQAAkBDQcGABEBDQcG
AJkADQcGAKEADQcGAAwADQcGABQADQcGABwADQcGACQADQcGAAwABAFKABQABAFKABwABAFKACQA
BAFKAMEADQcGANkARAFPANkAWAlXAPEADQddAEEBaQRlAAEBDQcGAEkB3QZqAEkBEwlqABkBDQcG
ABkBzQh0AFEBlgh6AFkBcwWAAGEBVQSHAMEAowSLAGkB9QiPAFEB4wiXAHEBzgWdAHkB7gioAHkB
AwKtAHkBZQmzAFEBGAkBAMEArwi6AMEAHQG/AIkB9QDLADQAJwniADwAVQRKADwAXwT5ADwADQcG
AAgALAAaAQgAMAAfASkAqwBGAy4ACwDEAS4AEwDNAS4AGwDsAS4AIwD1AS4AKwAeAi4AMwAeAi4A
OwD1AS4AQwAkAi4ASwAeAi4AUwA7Ai4AWwAeAi4AYwBBAi4AawBrAi4AcwB4AkAAiwAfAUAAgwDC
AkMAewDLAkMAgwDCAkkAqwBXA2MAewDLAmMAgwDCAmkAqwBrA4AAiwAfAYMAkwAfAYMAmwAfAYMA
ewDLAokAqwB4A6AAiwAfAakAgwDsAcAAiwAfAckAgwDsAeAAiwAfAeMAuwAfAeMAUwAeAukAswAf
AQMBgwDCAgMBowDkAiMBgwDCAiMBWwAeAiACgwDCAiACiwAfAUACgwDCAkACiwAfAWACgwDCAmAC
iwAfAYACgwDCAoACiwAfAaACiwAfAcACiwAfAeACiwAfAeACgwDCAgADiwAfASADiwAfASADgwDC
Am8AwwDWAAQAAQAFAAUABgAHAAkACAAAAPIGnAEAAMIFoQEAANgGpgEAAGUHqwEAAJgGsAEAAKIB
tQEAAHIEugEAAAgBvwECAAQAAwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQABAAsADQAC
AA4ADwACABgAEQAuADUAPABDAMgA2wDqAPEABIAAAAEAAAAAAAAAAAAAAAAAKwAAAAQAAAAAAAAA
AAAAAP8A1gAAAAAABAAAAAAAAAAAAAAA/wB8BQAAAAAKAAAAAAAAAAAAAAAIAd8AAAAAAA0AAAAA
AAAAAAAAABEBsQQAAAAADQAAAAAAAAAAAAAAEQFiAAAAAAAAAAAAAQAAAE8IAAAIAAQACQAEAAoA
BwAAABAAEgCBAAAAEAArAIEAAAAAAC0AgQBzANEAcwD0AAAAAAAAQ29udGV4dFZhbHVlYDEAVGhy
ZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEAU1RfYWI4NWRhNDhmNzIzNGVmMWE3M2JkMDFmMTdmMzMy
ZjMAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBUAERp
c3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAHZhbHVlX18AU1RfZWE1YjVkNzgx
ZjU5NDc1ZDhlOTBhNDYwNWY1OGIyZGEAbXNjb3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAENy
ZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBWYXJpYWJs
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVz
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBHdWlkQXR0cmli
dXRlAEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRh
cmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmli
dXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBt
X1ZhbHVlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVtLlRocmVhZGlu
ZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1hdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAU2NyaXB0T2JqZWN0TW9k
ZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2FiODVkYTQ4ZjcyMzRlZjFhNzNiZDAxZjE3ZjMz
MmYzLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWdu
AFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGljYXRpb24ARmlyZUluZm9ybWF0aW9u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAEN1bHR1cmVJbmZvAERpcmVjdG9yeUluZm8AbV9BcHBPYmplY3RQcm92aWRlcgBtX1VzZXJP
YmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2VzT2Jq
ZWN0UHJvdmlkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBF
dmVudHNPYmplY3RXcmFwcGVyAGdldF9Vc2VyAEVudGVyAGdldF9Db21wdXRlcgBNeUNvbXB1dGVy
AF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGlj
cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2
aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVu
dGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2Vh
NWI1ZDc4MWY1OTQ3NWQ4ZTkwYTQ2MDVmNThiMmRhLk15LlJlc291cmNlcwBNeVJlc291cmNlcwBT
VF9lYTViNWQ3ODFmNTk0NzVkOGU5MGE0NjA1ZjU4YjJkYS5SZXNvdXJjZXMucmVzb3VyY2VzAERl
YnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMATXlTZXR0aW5ncwBFcXVhbHMAUnVudGltZUhlbHBl
cnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBFeGlzdHMAQ29uY2F0
AG1fU3luY09iamVjdABNeVByb2plY3QARXhpdABzZXRfVGFza1Jlc3VsdABtX0NvbnRleHQAU1Rf
ZWE1YjVkNzgxZjU5NDc1ZDhlOTBhNDYwNWY1OGIyZGEuTXkAZ2V0X0Fzc2VtYmx5AENyZWF0ZURp
cmVjdG9yeQAAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMA
ZQBzAAAVUwBRAEwAUwB0AG8AcgBhAGcAZQAAA1wAAA1UAGEAYgBsAGUAMwAADVQAYQBiAGwAZQAx
AAAAAABcolXGtNDLQ7R6rqEP7vskAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEB
EUUHIAQBDg4ODgYVEiQBEgwGFRIkARIIBhUSJAESZQYVEiQBEiAEIAATAAcAARJtEYCZBSAAEoCd
ByACAQ4SgJ0EAAEcHAQAAQEcBAcCDgIFIAASgKkFIAASgK0GIAESgLEcAyAAHAMgAA4HAAQODg4O
DgUgABKAuQogBgEIDg4OCBACBAABAg4FAAIBDgIGAAESgMEOBCABAhwDIAAIBAcBHgACHgAFEAEA
HgAECgEeAAQHARMABhUSJAETAAcGFRJxARMABhUScQETAAITAAQKARMABSABARMACLd6XFYZNOCJ
CLA/X38R1Qo6CImEXc2AgMyRBAAAAAAEAQAAAAcGFRIkARIMBwYVEiQBEggHBhUSJAESZQcGFRIk
ARIgAwYSeQMGEn0DBhIYAgYcAgYIAwYRKAMAAAEEAAASDAQAABIIBAAAEmUEAAASIAQAABJ5BAAA
En0FAAEBEn0EAAASGAQgABJtBxABAR4AHgAHMAEBARAeAAQIABIMBAgAEggECAASZQQIABIgBAgA
EnkECAASfQQIABIYBCgAEwAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUX2VhNWI1ZDc4MWY1OTQ3NWQ4ZTkwYTQ2MDVmNThiMmRhAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMjEAAAUBAAEAACkBACRiZTM4MmYzMy0xMGQ1LTQ0YTctYWE5MS03
YjcwODM4N2Y4MjQAAAwBAAcxLjAuMC4wAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQgBAAEAAAAAABgBAApN
eVRlbXBsYXRlCDExLjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29h
cEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2Vf
XwAAABABAAtNeS5Db21wdXRlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAMAQAHTXkuVXNlcgAAEwEA
Dk15LldlYlNlcnZpY2VzAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3Vy
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAcDkAAAAAAAAAAAAAijkAAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAHw5AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBlAGEANQBiADUAZAA3ADgAMQBmADUAOQA0ADcANQBkADgAZQA5ADAAYQA0ADYAMAA1AGYA
NQA4AGIAMgBkAGEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGEAYgA4ADUAZABhADQA
OABmADcAMgAzADQAZQBmADEAYQA3ADMAYgBkADAAMQBmADEANwBmADMAMwAyAGYAMwAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYQBiADgA
NQBkAGEANAA4AGYANwAyADMANABlAGYAMQBhADcAMwBiAGQAMAAxAGYAMQA3AGYAMwAzADIAZgAz
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAYQA1AGIA
NQBkADcAOAAxAGYANQA5ADQANwA1AGQAOABlADkAMABhADQANgAwADUAZgA1ADgAYgAyAGQAYQAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAnDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\2 Script Task - Generate Fields Command"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{2C74C4A9-AF03-4763-9298-580C9426B428}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="2 Script Task - Generate Fields Command"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_03eb70159cb64bc7a65c7ee37910093e"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Catalog,User::Schema,User::SQLStorage,User::Table3">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections.Generic;
#endregion

namespace ST_fb05d46188b0481895042273cb5ed851
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Modify these, specify which table in Snowflake to generate a history table for.
            var catalog = (string) Dts.Variables["Catalog"].Value;
            var schema = (string) Dts.Variables["Schema"].Value;
            var table = (string) Dts.Variables["Table3"].Value;
            var dir = (string) Dts.Variables["SQLStorage"].Value + table + "_Fields.sql";

            var sqlquery =
@"SELECT COLUMN_NAME FROM information_schema.columns
WHERE
    table_catalog='{catalog}'
AND
    table_schema='{schema}'
AND
    table_name='{table}'
AND
    COLUMN_NAME != 'ID';";

            //Replace catalog, schema, and table in query
            sqlquery = sqlquery.Replace("{catalog}", catalog);
            sqlquery = sqlquery.Replace("{schema}", schema);
            sqlquery = sqlquery.Replace("{table}", table);
            
            using (StreamWriter writer = new StreamWriter(dir))
            {
                writer.WriteLine(sqlquery);
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_03eb70159cb64bc7a65c7ee37910093e.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{EEB16687-8058-4612-9047-307B5BAC32EF}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_fb05d46188b0481895042273cb5ed851</RootNamespace><AssemblyName>ST_03eb70159cb64bc7a65c7ee37910093e</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_fb05d46188b0481895042273cb5ed851</msb:CodeName>
		<msb:DisplayName>ST_fb05d46188b0481895042273cb5ed851</msb:DisplayName>
		<msb:ProjectId>{BB1A5D2F-BB49-4A8F-ABBB-D2FED5C52EE9}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_03eb70159cb64bc7a65c7ee37910093e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Settings.get_Default():ST_fb05d46188b0481895042273cb5ed851.Properties.Sett" +
    "ings")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fb05d46188b0481895042273cb5ed851.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_03eb70159cb64bc7a65c7ee37910093e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOWjeWAAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAA4jAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJAwAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6BAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
MAAAAAAAAEgAAAACAAUAuCEAACAOAAABAAAAAAAAANgvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBADhAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdBwAAAEKAigQAAAKbxEAAApyEQAAcG8SAAAKbxMAAAp0HAAAAQsCKBAAAApvEQAACnIfAABw
bxIAAApvEwAACnQcAAABDAIoEAAACm8RAAAKci0AAHBvEgAACm8TAAAKdBwAAAEIckMAAHAoFAAA
CnJbAABwDQlyzgEAcAZvFQAACg0JcuIBAHAHbxUAAAoNCXL0AQBwCG8VAAAKDXMWAAAKEwQRBAlv
FwAACt4MEQQsBxEEbxgAAArcAigQAAAKFm8ZAAAKKgAAAAEQAAACAL4ACsgADAAAAAAeAigaAAAK
Kh4CKBsAAAoqrn4BAAAELR5yBAIAcNADAAACKBwAAApvHQAACnMeAAAKgAEAAAR+AQAABCoafgIA
AAQqHgKAAgAABCoafgMAAAQqHgIoHwAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAAOwDAAAjfgAAWAQAAMwFAAAjU3RyaW5ncwAAAAAkCgAAeAIAACNV
UwCcDAAAEAAAACNHVUlEAAAArAwAAHQBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYA
AAEAAAAhAAAABQAAAAYAAAAJAAAAAQAAAB8AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAA
BAAAAAEAAAABAAAAAADHAwEAAAAAAAYAeQKvBAYACAOvBAYAxQGcBA8AIwUAAAYA8gFFBAYAXAJF
BAYAPQJFBAYA7wJFBAYAmQJFBAYAsgJFBAYACQJFBAYAJAI2AwoAzQJ2AwoAPAF2AwYAdwQuAAYA
/wP4AwYAqAGcBAYAnQX4AwYAZwTPBAYAVwQwBA4AeAGxAw4A2QGxAw4AWAEbBAYAjQGvBAoAnwN2
AxIAZQXdABIApADdAAYAUAP4AwYAhAQuAAYArQD4AwYABwH4AwYAuQD4AwYAwwVFBAAAAAAlAAAA
AAABAAEAAQAQABAEAQA5AAEAAQAAABAA1gQyBUkAAQADAAABEABvBTIFXQADAAcAAwEAAIgFAABB
AAQACgARAAQEdwARACwBewARAJQAfwAGBlcAgwBWgHgFhgBWgAwBhgBQIAAAAACGABYEBgABAFAh
AAAAAIYYjwQGAAEAWCEAAAAAgxiPBAYAAQBgIQAAAACTCGMEigABAIwhAAAAAJMIFAGPAAEAkyEA
AAAAkwggAZQAAQCbIQAAAACWCKQFmgACAKIhAAAAAIYYjwQGAAIAqiEAAAAAkRiVBJ8AAgAAAAEA
MAMJAI8EAQARAI8EBgAZAI8ECgApAI8EEAAxAI8EEAA5AI8EEABBAI8EEABJAI8EEABRAI8EEABZ
AI8EEABhAI8EEABpAI8EBgCJAI8EBgCxAI8EFQDBAI8EBgBxAIAFJADJAGEFKQDRAO8DLgDZACYD
NADhAJYFOADhAIwAPwB5AI8EEADpAP0AEADxAHABBgDJALAFAQBxAI8EBgCRAI8EBgD5AMsARQD5
AL8FTQCZAI8EUwC5AI8EBgAIABQAbQAIABgAcgApAHMA2gAuAAsAsgAuABMAuwAuABsA2gAuACMA
4wAuACsADAEuADMADAEuADsADAEuAEMA4wAuAEsAEgEuAFMADAEuAFsAKQFDAGMAcgBJAHMA2gBh
AHsAcgBjAGsAcgAbAAMAAQAEAAMAAABnBKMAAAA0AagAAACoBa0AAgAEAAMAAgAFAAUAAQAGAAUA
AgAHAAcABIAAAAEAAABgHgpFAAAAAAAAaAAAAAQAAAAAAAAAAAAAAFsAXwAAAAAADQAAAAAAAAAA
AAAAZABXAwAAAAAEAAAAAAAAAAAAAABbAPgDAAAAAA0AAAAAAAAAAAAAAGQAOAAAAAAAAAAAAAEA
AADgBAAABQACAAAAAFNUX2ZiMDVkNDYxODhiMDQ4MTg5NTA0MjI3M2NiNWVkODUxADxNb2R1bGU+
AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2Nvcmxp
YgBTVF8wM2ViNzAxNTljYjY0YmM3YTY1YzdlZTM3OTEwMDkzZQBSZXBsYWNlAGRlZmF1bHRJbnN0
YW5jZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdyaXRlTGluZQBUeXBlAEZhaWx1
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9i
amVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRh
c2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBTdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNUXzAzZWI3MDE1OWNiNjRiYzdhNjVjN2VlMzc5MTAwOTNlLmRsbABnZXRfSXRl
bQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9S
ZXNvdXJjZU1hbmFnZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfZmIwNWQ0NjE4OGIwNDgxODk1MDQyMjczY2I1ZWQ4NTEuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2ZiMDVkNDYxODhiMDQ4MTg5NTA0MjI3
M2NiNWVkODUxLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0
AGdldF9Bc3NlbWJseQAAD0MAYQB0AGEAbABvAGcAAA1TAGMAaABlAG0AYQAADVQAYQBiAGwAZQAz
AAAVUwBRAEwAUwB0AG8AcgBhAGcAZQAAF18ARgBpAGUAbABkAHMALgBzAHEAbAAAgXFTAEUATABF
AEMAVAAgAEMATwBMAFUATQBOAF8ATgBBAE0ARQAgAEYAUgBPAE0AIABpAG4AZgBvAHIAbQBhAHQA
aQBvAG4AXwBzAGMAaABlAG0AYQAuAGMAbwBsAHUAbQBuAHMADQAKAFcASABFAFIARQANAAoAIAAg
ACAAIAB0AGEAYgBsAGUAXwBjAGEAdABhAGwAbwBnAD0AJwB7AGMAYQB0AGEAbABvAGcAfQAnAA0A
CgBBAE4ARAANAAoAIAAgACAAIAB0AGEAYgBsAGUAXwBzAGMAaABlAG0AYQA9ACcAewBzAGMAaABl
AG0AYQB9ACcADQAKAEEATgBEAA0ACgAgACAAIAAgAHQAYQBiAGwAZQBfAG4AYQBtAGUAPQAnAHsA
dABhAGIAbABlAH0AJwANAAoAQQBOAEQADQAKACAAIAAgACAAQwBPAEwAVQBNAE4AXwBOAEEATQBF
ACAAIQA9ACAAJwBJAEQAJwA7AAETewBjAGEAdABhAGwAbwBnAH0AABF7AHMAYwBoAGUAbQBhAH0A
AA97AHQAYQBiAGwAZQB9AABxUwBUAF8AZgBiADAANQBkADQANgAxADgAOABiADAANAA4ADEAOAA5
ADUAMAA0ADIAMgA3ADMAYwBiADUAZQBkADgANQAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAAAAGXTAEqbb7ZFttqO0+e1DHgABCABAQgDIAABBSABARERBCABAQ4F
IAEBEVUIBwUODg4OEj0EIAASZQQgABJpBSABEm0cAyAAHAYAAw4ODg4FIAIODg4HAAESfRGAgQUg
ABKAhQcgAgEOEoCFCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEk0DBhJRAwYSEAIGCAMG
ERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9mYjA1ZDQ2MTg4YjA0ODE4
OTUwNDIyNzNjYjVlZDg1MQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3
b3JrIDQuNQC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAAuDAAAAAAAAAAAAAA0jAAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAMQwAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAApFYB4AAAEACkVgHj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AZgBiADAANQBkADQANgAxADgAOABiADAANAA4ADEAOAA5ADUAMAA0ADIAMgA3ADMA
YwBiADUAZQBkADgANQAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcANwA3ADYALgAxADcANgA3ADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMAAzAGUAYgA3ADAAMQA1ADkAYwBiADYANABiAGMANwBhADYANQBjADcAZQBlADMANwA5
ADEAMAAwADkAMwBlAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAwADMAZQBiADcAMAAxADUAOQBjAGIANgA0AGIAYwA3AGEANgA1AGMANwBl
AGUAMwA3ADkAMQAwADAAOQAzAGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AZgBiADAANQBkADQANgAxADgAOABiADAANAA4ADEAOAA5ADUAMAA0ADIAMgA3
ADMAYwBiADUAZQBkADgANQAxAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADcANwA2AC4AMQA3ADYANwA0AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADcANwA2AC4AMQA3ADYANwA0AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOQwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\3 Process Task - Get Field Names"
              DTS:CreationName="Microsoft.ExecuteProcess"
              DTS:Description="Execute Process Task"
              DTS:DTSID="{9F8645A7-70C1-47A3-8642-4F84C563B4B4}"
              DTS:ExecutableType="Microsoft.ExecuteProcess"
              DTS:LocaleID="-1"
              DTS:ObjectName="3 Process Task - Get Field Names"
              DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="Arguments">"--config " +  "\"" + @[User::SnowSQLConfigDir]  + "config.txt"+ "\" "   + "-c SF -f " + "\"" + @[User::SQLStorage]  + @[User::Table3] + "_Fields.sql" +  "\" " +  "-o output_format=csv -o friendly=false -o header=false -o timing=false -o output_file=" +  "\"" + @[User::SQLStorage] +  @[User::Table3] + "\\fields.csv" + "\""</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExecuteProcessData
                  Executable="C:\Program Files\Snowflake SnowSQL\snowsql.exe"
                  Arguments="--config &quot;C:\temp\DWAH\SnowSQL\config.txt&quot; -c SF -f &quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\_Fields.sql&quot; -o output_format=csv -o friendly=false -o header=false -o timing=false -o output_file=&quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\\fields.csv&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\4 Script Task - Generate SQL Command"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{5B8DB198-6C9D-4EC5-9FCA-73A5978C45FE}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="4 Script Task - Generate SQL Command"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_9754ca7ee0704985bb32b6d82ed15227"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Catalog,User::HistoryCatalog,User::HistorySchema,User::Schema,User::SQLStorage,User::Table3">
                  <ProjectItem
                    Name="ST_9754ca7ee0704985bb32b6d82ed15227.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{EEB16687-8058-4612-9047-307B5BAC32EF}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_fb05d46188b0481895042273cb5ed851</RootNamespace><AssemblyName>ST_9754ca7ee0704985bb32b6d82ed15227</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Settings.get_Default():ST_fb05d46188b0481895042273cb5ed851.Properties.Sett" +
    "ings")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections.Generic;
#endregion

namespace ST_fb05d46188b0481895042273cb5ed851
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Modify these, specify which table in Snowflake to generate a history table for.
            var catalog = (string) Dts.Variables["Catalog"].Value;
            var schema = (string) Dts.Variables["Schema"].Value;
            var table = (string) Dts.Variables["Table3"].Value;

            //Get history catalog and schema to replace into SQL query below, table name matches above table name
            var historyCatalog = (string) Dts.Variables["HistoryCatalog"].Value;
            var historySchema = (string) Dts.Variables["HistorySchema"].Value;
            var dir = (string)Dts.Variables["SQLStorage"].Value + (string)Dts.Variables["Table3"].Value;

            var sqlquery =
@"CREATE OR REPLACE TEMPORARY TABLE tmpFieldType (FieldName VARCHAR(), FieldType VARCHAR()); 
INSERT INTO tmpFieldType (FieldName, FieldType)
SELECT COLUMN_NAME, DATA_TYPE FROM information_schema.columns
WHERE table_catalog='{catalog}'
AND
table_schema='{schema}'
AND
table_name='{table}';

CREATE TABLE IF NOT EXISTS ""{history_catalog}"".""{history_schema}"".""{table}""
(
    _KEY NUMBER(38, 0) autoincrement start 1 increment 1,
    _EFF_FROM DATE,
    _EFF_TO DATE,
    DWID VARCHAR(),
    FieldValue VARCHAR(),
    FieldName VARCHAR(),
    FieldType VARCHAR(),
    DataSource VARCHAR()
);

SET VAR_CurrentDate = CURRENT_DATE();
SET VAR_YesterdayDate = DATEADD(Day, -1, $Var_CurrentDate);

CREATE OR REPLACE TEMPORARY TABLE tmp{table}_LoadData
(
  DWID VARCHAR(),
  FieldValue VARCHAR(),
  FieldName VARCHAR(),
  FieldType VARCHAR(),
  DateUpdated DATE,
  DataSource VARCHAR()
);

INSERT INTO tmp{table}_LoadData
SELECT
    UP.DWID,
    UP.FieldValue,
    UP.FieldName,
    FT.FieldType,
    $VAR_CurrentDate AS DateUpdated,
    'Ascend' AS DataSource
FROM
    (
      SELECT 
      ID AS DWID,
      {cast_columns}
      FROM
      ""{catalog}"".""{schema}"".""{table}""
    ) AS C
    UNPIVOT 
    (
      FieldValue for FieldName IN 
      (
        {list_columns}
      )
    ) AS UP
    INNER JOIN tmpFieldType AS FT ON UPPER(UP.FieldName) = UPPER(FT.FieldName);

--Existing records that have changed.
UPDATE ""{history_catalog}"".""{history_schema}"".""{table}"" AS T
SET
    T._EFF_TO = $VAR_YesterdayDate
FROM tmp{table}_LoadData AS S
WHERE
(
  T._EFF_TO IS NULL
  AND S.DWID = T.DWID
  AND S.FieldName = T.FieldName
)
AND
(
  COALESCE(S.FieldValue, '') != COALESCE(T.FieldValue, '')
  OR COALESCE(S.FieldType, '') != COALESCE(T.FieldType, '')
  OR COALESCE(S.DataSource, '') != COALESCE(T.DataSource, '')
);

            --Inserting new records
INSERT INTO ""{history_catalog}"".""{history_schema}"".""{table}""(_EFF_FROM, DWID, FieldValue, FieldName, FieldType, DataSource)
SELECT
    $VAR_CurrentDate AS _EFF_FROM,
    S.DWID,
    S.FieldValue,
    S.FieldName,
    S.FieldType,
    S.DataSource
FROM tmp{table}_LoadData AS S
    LEFT OUTER JOIN ""{history_catalog}"".""{history_schema}"".""{table}"" AS T ON
    (
      T._EFF_TO IS NULL
      AND S.DWID = T.DWID
      AND S.FieldName = T.FieldName
    )
WHERE T.DWID IS NULL;

            --Deleted record criteria
UPDATE ""{history_catalog}"".""{history_schema}"".""{table}"" AS T
SET
    T._EFF_TO = $VAR_YesterdayDate
WHERE
    T._EFF_TO IS NULL
AND T._KEY IN
(
    SELECT H._KEY
    FROM ""{history_catalog}"".""{history_schema}"".""{table}""
         AS H
        LEFT OUTER JOIN tmp{table}_LoadData AS UP ON
        (
            UP.DWID = H.DWID
            AND UP.FieldName = H.FieldName
        )
        WHERE
        UP.DWID IS NULL
);
DROP TABLE IF EXISTS tmp{table}_LoadData;";

            //Replace catalog, schema, and table in query
            sqlquery = sqlquery.Replace("{catalog}", catalog);
            sqlquery = sqlquery.Replace("{schema}", schema);
            sqlquery = sqlquery.Replace("{table}", table);
            sqlquery = sqlquery.Replace("{history_catalog}", historyCatalog);
            sqlquery = sqlquery.Replace("{history_schema}", historySchema);

            var fieldNames = new List<string>();
			using(var reader = new StreamReader(dir + "\\fields.csv"))
            {
                while(!reader.EndOfStream)
                {
                    var value = reader.ReadLine().Replace("\"", "");
                    fieldNames.Add(value);
                }
            }

            //Generate list that includes cast command of field names
            var fields = "";
            for (int i = 0; i < fieldNames.Count; i++)
            {
                if (i == fieldNames.Count - 1)
                {
                    fields += "CAST(" + (fieldNames[i]) + " AS VARCHAR()) AS " + (fieldNames[i]);
                }
                else
                {
                    fields += "CAST(" + (fieldNames[i]) + " AS VARCHAR()) AS " + (fieldNames[i]) + ",";
                }
            }
            sqlquery = sqlquery.Replace("{cast_columns}", fields);

            //Generate basic list with comma delimiters of field names
            fields = "";
            for(int i = 0; i < fieldNames.Count; i++)
            {
                if (i == fieldNames.Count - 1)
                {
                    fields += (fieldNames[i]);
                }
                else
                {
                    fields += (fieldNames[i] + ",");
                }
            }
            sqlquery = sqlquery.Replace("{list_columns}", fields);
            
            using (StreamWriter writer = new StreamWriter(dir + "\\generated.sql"))
            {
                writer.WriteLine(sqlquery);
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_fb05d46188b0481895042273cb5ed851</msb:CodeName>
		<msb:DisplayName>ST_fb05d46188b0481895042273cb5ed851</msb:DisplayName>
		<msb:ProjectId>{BB1A5D2F-BB49-4A8F-ABBB-D2FED5C52EE9}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9754ca7ee0704985bb32b6d82ed15227.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fb05d46188b0481895042273cb5ed851")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb05d46188b0481895042273cb5ed851.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fb05d46188b0481895042273cb5ed851.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fb05d46188b0481895042273cb5ed851.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_9754ca7ee0704985bb32b6d82ed15227.dll">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
bwQOAKcB4AMOAAgC4AMOAIcBWgQGALwBBgUKAM4DpQMSALwFAwESAMoAAwEGAH8DNwQGAK8EWQAG
ANMANwQGANsEWQAGADYBNwQGAN8ANwQGACQGhAQAAAAAUAAAAAAAAQABAAEAEABPBAEAOQABAAEA
AAAQAC0FiQVRAAEAAwAAARAAxgWJBWUAAwAHAAMBAADfBQAASQAEAAoAEQBDBLAAEQBbAbQAEQC6
ALgABgaCALwAVoDPBb8AVoA7Ab8AUCAAAAAAhgBVBAYAAQBgIwAAAACGGOYEBgABAGgjAAAAAIMY
5gQGAAEAcCMAAAAAkwi6BMMAAQCcIwAAAACTCEMByAABAKMjAAAAAJMITwHNAAEAqyMAAAAAlgj7
BdMAAgCyIwAAAACGGOYEBgACALojAAAAAJEY7ATYAAIAAAABAF8DCQDmBAEAEQDmBAYAGQDmBAoA
KQDmBBAAMQDmBBAAOQDmBBAAQQDmBBAASQDmBBAAUQDmBBAAWQDmBBAAYQDmBBAAaQDmBAYAmQDm
BAYAwQDmBBUA0QDmBAYAcQDXBTIA2QC4BTcA4QAuBDwA6QBVA0IA8QDtBUYA8QCyAEwADADmBAYA
gQDmBBAA+QAjAVgADACuAFwAgQAeBGIAAQGfAQYADAAWBmYADAAuBGoA8QDtBXAA8QDtBXYAiQDm
BBAACQEsARAA2QAHBgEAcQDmBAYAoQDmBAYAEQHxAH0AEQEgBoYAqQDmBIwAyQDmBAYACAAUAKYA
CAAYAKsAKQBzABMBLgALAOsALgATAPQALgAbABMBLgAjABwBLgArAEUBLgAzAEUBLgA7AEUBLgBD
ABwBLgBLAEsBLgBTAEUBLgBbAGIBQwBjAKsASQBzABMBYQB7AKsAYwBrAKsAGwADAAEABAADAAAA
vgTcAAAAYwHhAAAA/wXmAAIABAADAAIABQAFAAEABgAFAAIABwAHAFIABIAAAAEAAABgHkJkAAAA
AAAALAAAAAQAAAAAAAAAAAAAAJQAigAAAAAADQAAAAAAAAAAAAAAnQCGAwAAAAAEAAAAAAAAAAAA
AACUADcEAAAAAA0AAAAAAAAAAAAAAJ0AYwAAAAAAAAAAAAEAAAA3BQAABQACAAAAAAAAU1RfZmIw
NWQ0NjE4OGIwNDgxODk1MDQyMjczY2I1ZWQ4NTEATGlzdGAxAFNUXzk3NTRjYTdlZTA3MDQ5ODVi
YjMyYjZkODJlZDE1MjI3ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1h
bmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBZGQA
UmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBS
ZWFkTGluZQBXcml0ZUxpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNj
cmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF85NzU0Y2E3ZWUwNzA0OTg1
YmIzMmI2ZDgyZWQxNTIyNy5kbGwAZ2V0X0VuZE9mU3RyZWFtAGdldF9JdGVtAFN5c3RlbQBFbnVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AU3RyZWFtUmVhZGVyAFRleHRS
ZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgAuY3RvcgAu
Y2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTVF9mYjA1ZDQ2MTg4YjA0ODE4OTUwNDIyNzNjYjVlZDg1MS5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZmIwNWQ0NjE4OGIw
NDgxODk1MDQyMjczY2I1ZWQ4NTEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1
Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0
X1Rhc2tSZXN1bHQAZ2V0X0NvdW50AGdldF9Bc3NlbWJseQAAAAAAD0MAYQB0AGEAbABvAGcAAA1T
AGMAaABlAG0AYQAADVQAYQBiAGwAZQAzAAAdSABpAHMAdABvAHIAeQBDAGEAdABhAGwAbwBnAAAb
SABpAHMAdABvAHIAeQBTAGMAaABlAG0AYQAAFVMAUQBMAFMAdABvAHIAYQBnAGUAAJbfQwBSAEUA
QQBUAEUAIABPAFIAIABSAEUAUABMAEEAQwBFACAAVABFAE0AUABPAFIAQQBSAFkAIABUAEEAQgBM
AEUAIAB0AG0AcABGAGkAZQBsAGQAVAB5AHAAZQAgACgARgBpAGUAbABkAE4AYQBtAGUAIABWAEEA
UgBDAEgAQQBSACgAKQAsACAARgBpAGUAbABkAFQAeQBwAGUAIABWAEEAUgBDAEgAQQBSACgAKQAp
ADsAIAANAAoASQBOAFMARQBSAFQAIABJAE4AVABPACAAdABtAHAARgBpAGUAbABkAFQAeQBwAGUA
IAAoAEYAaQBlAGwAZABOAGEAbQBlACwAIABGAGkAZQBsAGQAVAB5AHAAZQApAA0ACgBTAEUATABF
AEMAVAAgAEMATwBMAFUATQBOAF8ATgBBAE0ARQAsACAARABBAFQAQQBfAFQAWQBQAEUAIABGAFIA
TwBNACAAaQBuAGYAbwByAG0AYQB0AGkAbwBuAF8AcwBjAGgAZQBtAGEALgBjAG8AbAB1AG0AbgBz
AA0ACgBXAEgARQBSAEUAIAB0AGEAYgBsAGUAXwBjAGEAdABhAGwAbwBnAD0AJwB7AGMAYQB0AGEA
bABvAGcAfQAnAA0ACgBBAE4ARAANAAoAdABhAGIAbABlAF8AcwBjAGgAZQBtAGEAPQAnAHsAcwBj
AGgAZQBtAGEAfQAnAA0ACgBBAE4ARAANAAoAdABhAGIAbABlAF8AbgBhAG0AZQA9ACcAewB0AGEA
YgBsAGUAfQAnADsADQAKAA0ACgBDAFIARQBBAFQARQAgAFQAQQBCAEwARQAgAEkARgAgAE4ATwBU
ACAARQBYAEkAUwBUAFMAIAAiAHsAaABpAHMAdABvAHIAeQBfAGMAYQB0AGEAbABvAGcAfQAiAC4A
IgB7AGgAaQBzAHQAbwByAHkAXwBzAGMAaABlAG0AYQB9ACIALgAiAHsAdABhAGIAbABlAH0AIgAN
AAoAKAANAAoAIAAgACAAIABfAEsARQBZACAATgBVAE0AQgBFAFIAKAAzADgALAAgADAAKQAgAGEA
dQB0AG8AaQBuAGMAcgBlAG0AZQBuAHQAIABzAHQAYQByAHQAIAAxACAAaQBuAGMAcgBlAG0AZQBu
AHQAIAAxACwADQAKACAAIAAgACAAXwBFAEYARgBfAEYAUgBPAE0AIABEAEEAVABFACwADQAKACAA
IAAgACAAXwBFAEYARgBfAFQATwAgAEQAQQBUAEUALAANAAoAIAAgACAAIABEAFcASQBEACAAVgBB
AFIAQwBIAEEAUgAoACkALAANAAoAIAAgACAAIABGAGkAZQBsAGQAVgBhAGwAdQBlACAAVgBBAFIA
QwBIAEEAUgAoACkALAANAAoAIAAgACAAIABGAGkAZQBsAGQATgBhAG0AZQAgAFYAQQBSAEMASABB
AFIAKAApACwADQAKACAAIAAgACAARgBpAGUAbABkAFQAeQBwAGUAIABWAEEAUgBDAEgAQQBSACgA
KQAsAA0ACgAgACAAIAAgAEQAYQB0AGEAUwBvAHUAcgBjAGUAIABWAEEAUgBDAEgAQQBSACgAKQAN
AAoAKQA7AA0ACgANAAoAUwBFAFQAIABWAEEAUgBfAEMAdQByAHIAZQBuAHQARABhAHQAZQAgAD0A
IABDAFUAUgBSAEUATgBUAF8ARABBAFQARQAoACkAOwANAAoAUwBFAFQAIABWAEEAUgBfAFkAZQBz
AHQAZQByAGQAYQB5AEQAYQB0AGUAIAA9ACAARABBAFQARQBBAEQARAAoAEQAYQB5ACwAIAAtADEA
LAAgACQAVgBhAHIAXwBDAHUAcgByAGUAbgB0AEQAYQB0AGUAKQA7AA0ACgANAAoAQwBSAEUAQQBU
AEUAIABPAFIAIABSAEUAUABMAEEAQwBFACAAVABFAE0AUABPAFIAQQBSAFkAIABUAEEAQgBMAEUA
IAB0AG0AcAB7AHQAYQBiAGwAZQB9AF8ATABvAGEAZABEAGEAdABhAA0ACgAoAA0ACgAgACAARABX
AEkARAAgAFYAQQBSAEMASABBAFIAKAApACwADQAKACAAIABGAGkAZQBsAGQAVgBhAGwAdQBlACAA
VgBBAFIAQwBIAEEAUgAoACkALAANAAoAIAAgAEYAaQBlAGwAZABOAGEAbQBlACAAVgBBAFIAQwBI
AEEAUgAoACkALAANAAoAIAAgAEYAaQBlAGwAZABUAHkAcABlACAAVgBBAFIAQwBIAEEAUgAoACkA
LAANAAoAIAAgAEQAYQB0AGUAVQBwAGQAYQB0AGUAZAAgAEQAQQBUAEUALAANAAoAIAAgAEQAYQB0
AGEAUwBvAHUAcgBjAGUAIABWAEEAUgBDAEgAQQBSACgAKQANAAoAKQA7AA0ACgANAAoASQBOAFMA
RQBSAFQAIABJAE4AVABPACAAdABtAHAAewB0AGEAYgBsAGUAfQBfAEwAbwBhAGQARABhAHQAYQAN
AAoAUwBFAEwARQBDAFQADQAKACAAIAAgACAAVQBQAC4ARABXAEkARAAsAA0ACgAgACAAIAAgAFUA
UAAuAEYAaQBlAGwAZABWAGEAbAB1AGUALAANAAoAIAAgACAAIABVAFAALgBGAGkAZQBsAGQATgBh
AG0AZQAsAA0ACgAgACAAIAAgAEYAVAAuAEYAaQBlAGwAZABUAHkAcABlACwADQAKACAAIAAgACAA
JABWAEEAUgBfAEMAdQByAHIAZQBuAHQARABhAHQAZQAgAEEAUwAgAEQAYQB0AGUAVQBwAGQAYQB0
AGUAZAAsAA0ACgAgACAAIAAgACcAQQBzAGMAZQBuAGQAJwAgAEEAUwAgAEQAYQB0AGEAUwBvAHUA
cgBjAGUADQAKAEYAUgBPAE0ADQAKACAAIAAgACAAKAANAAoAIAAgACAAIAAgACAAUwBFAEwARQBD
AFQAIAANAAoAIAAgACAAIAAgACAASQBEACAAQQBTACAARABXAEkARAAsAA0ACgAgACAAIAAgACAA
IAB7AGMAYQBzAHQAXwBjAG8AbAB1AG0AbgBzAH0ADQAKACAAIAAgACAAIAAgAEYAUgBPAE0ADQAK
ACAAIAAgACAAIAAgACIAewBjAGEAdABhAGwAbwBnAH0AIgAuACIAewBzAGMAaABlAG0AYQB9ACIA
LgAiAHsAdABhAGIAbABlAH0AIgANAAoAIAAgACAAIAApACAAQQBTACAAQwANAAoAIAAgACAAIABV
AE4AUABJAFYATwBUACAADQAKACAAIAAgACAAKAANAAoAIAAgACAAIAAgACAARgBpAGUAbABkAFYA
YQBsAHUAZQAgAGYAbwByACAARgBpAGUAbABkAE4AYQBtAGUAIABJAE4AIAANAAoAIAAgACAAIAAg
ACAAKAANAAoAIAAgACAAIAAgACAAIAAgAHsAbABpAHMAdABfAGMAbwBsAHUAbQBuAHMAfQANAAoA
IAAgACAAIAAgACAAKQANAAoAIAAgACAAIAApACAAQQBTACAAVQBQAA0ACgAgACAAIAAgAEkATgBO
AEUAUgAgAEoATwBJAE4AIAB0AG0AcABGAGkAZQBsAGQAVAB5AHAAZQAgAEEAUwAgAEYAVAAgAE8A
TgAgAFUAUABQAEUAUgAoAFUAUAAuAEYAaQBlAGwAZABOAGEAbQBlACkAIAA9ACAAVQBQAFAARQBS
ACgARgBUAC4ARgBpAGUAbABkAE4AYQBtAGUAKQA7AA0ACgANAAoALQAtAEUAeABpAHMAdABpAG4A
ZwAgAHIAZQBjAG8AcgBkAHMAIAB0AGgAYQB0ACAAaABhAHYAZQAgAGMAaABhAG4AZwBlAGQALgAN
AAoAVQBQAEQAQQBUAEUAIAAiAHsAaABpAHMAdABvAHIAeQBfAGMAYQB0AGEAbABvAGcAfQAiAC4A
IgB7AGgAaQBzAHQAbwByAHkAXwBzAGMAaABlAG0AYQB9ACIALgAiAHsAdABhAGIAbABlAH0AIgAg
AEEAUwAgAFQADQAKAFMARQBUAA0ACgAgACAAIAAgAFQALgBfAEUARgBGAF8AVABPACAAPQAgACQA
VgBBAFIAXwBZAGUAcwB0AGUAcgBkAGEAeQBEAGEAdABlAA0ACgBGAFIATwBNACAAdABtAHAAewB0
AGEAYgBsAGUAfQBfAEwAbwBhAGQARABhAHQAYQAgAEEAUwAgAFMADQAKAFcASABFAFIARQANAAoA
KAANAAoAIAAgAFQALgBfAEUARgBGAF8AVABPACAASQBTACAATgBVAEwATAANAAoAIAAgAEEATgBE
ACAAUwAuAEQAVwBJAEQAIAA9ACAAVAAuAEQAVwBJAEQADQAKACAAIABBAE4ARAAgAFMALgBGAGkA
ZQBsAGQATgBhAG0AZQAgAD0AIABUAC4ARgBpAGUAbABkAE4AYQBtAGUADQAKACkADQAKAEEATgBE
AA0ACgAoAA0ACgAgACAAQwBPAEEATABFAFMAQwBFACgAUwAuAEYAaQBlAGwAZABWAGEAbAB1AGUA
LAAgACcAJwApACAAIQA9ACAAQwBPAEEATABFAFMAQwBFACgAVAAuAEYAaQBlAGwAZABWAGEAbAB1
AGUALAAgACcAJwApAA0ACgAgACAATwBSACAAQwBPAEEATABFAFMAQwBFACgAUwAuAEYAaQBlAGwA
ZABUAHkAcABlACwAIAAnACcAKQAgACEAPQAgAEMATwBBAEwARQBTAEMARQAoAFQALgBGAGkAZQBs
AGQAVAB5AHAAZQAsACAAJwAnACkADQAKACAAIABPAFIAIABDAE8AQQBMAEUAUwBDAEUAKABTAC4A
RABhAHQAYQBTAG8AdQByAGMAZQAsACAAJwAnACkAIAAhAD0AIABDAE8AQQBMAEUAUwBDAEUAKABU
AC4ARABhAHQAYQBTAG8AdQByAGMAZQAsACAAJwAnACkADQAKACkAOwANAAoADQAKACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAC0ALQBJAG4AcwBlAHIAdABpAG4AZwAgAG4AZQB3ACAAcgBlAGMAbwBy
AGQAcwANAAoASQBOAFMARQBSAFQAIABJAE4AVABPACAAIgB7AGgAaQBzAHQAbwByAHkAXwBjAGEA
dABhAGwAbwBnAH0AIgAuACIAewBoAGkAcwB0AG8AcgB5AF8AcwBjAGgAZQBtAGEAfQAiAC4AIgB7
AHQAYQBiAGwAZQB9ACIAKABfAEUARgBGAF8ARgBSAE8ATQAsACAARABXAEkARAAsACAARgBpAGUA
bABkAFYAYQBsAHUAZQAsACAARgBpAGUAbABkAE4AYQBtAGUALAAgAEYAaQBlAGwAZABUAHkAcABl
ACwAIABEAGEAdABhAFMAbwB1AHIAYwBlACkADQAKAFMARQBMAEUAQwBUAA0ACgAgACAAIAAgACQA
VgBBAFIAXwBDAHUAcgByAGUAbgB0AEQAYQB0AGUAIABBAFMAIABfAEUARgBGAF8ARgBSAE8ATQAs
AA0ACgAgACAAIAAgAFMALgBEAFcASQBEACwADQAKACAAIAAgACAAUwAuAEYAaQBlAGwAZABWAGEA
bAB1AGUALAANAAoAIAAgACAAIABTAC4ARgBpAGUAbABkAE4AYQBtAGUALAANAAoAIAAgACAAIABT
AC4ARgBpAGUAbABkAFQAeQBwAGUALAANAAoAIAAgACAAIABTAC4ARABhAHQAYQBTAG8AdQByAGMA
ZQANAAoARgBSAE8ATQAgAHQAbQBwAHsAdABhAGIAbABlAH0AXwBMAG8AYQBkAEQAYQB0AGEAIABB
AFMAIABTAA0ACgAgACAAIAAgAEwARQBGAFQAIABPAFUAVABFAFIAIABKAE8ASQBOACAAIgB7AGgA
aQBzAHQAbwByAHkAXwBjAGEAdABhAGwAbwBnAH0AIgAuACIAewBoAGkAcwB0AG8AcgB5AF8AcwBj
AGgAZQBtAGEAfQAiAC4AIgB7AHQAYQBiAGwAZQB9ACIAIABBAFMAIABUACAATwBOAA0ACgAgACAA
IAAgACgADQAKACAAIAAgACAAIAAgAFQALgBfAEUARgBGAF8AVABPACAASQBTACAATgBVAEwATAAN
AAoAIAAgACAAIAAgACAAQQBOAEQAIABTAC4ARABXAEkARAAgAD0AIABUAC4ARABXAEkARAANAAoA
IAAgACAAIAAgACAAQQBOAEQAIABTAC4ARgBpAGUAbABkAE4AYQBtAGUAIAA9ACAAVAAuAEYAaQBl
AGwAZABOAGEAbQBlAA0ACgAgACAAIAAgACkADQAKAFcASABFAFIARQAgAFQALgBEAFcASQBEACAA
SQBTACAATgBVAEwATAA7AA0ACgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtAEQAZQBs
AGUAdABlAGQAIAByAGUAYwBvAHIAZAAgAGMAcgBpAHQAZQByAGkAYQANAAoAVQBQAEQAQQBUAEUA
IAAiAHsAaABpAHMAdABvAHIAeQBfAGMAYQB0AGEAbABvAGcAfQAiAC4AIgB7AGgAaQBzAHQAbwBy
AHkAXwBzAGMAaABlAG0AYQB9ACIALgAiAHsAdABhAGIAbABlAH0AIgAgAEEAUwAgAFQADQAKAFMA
RQBUAA0ACgAgACAAIAAgAFQALgBfAEUARgBGAF8AVABPACAAPQAgACQAVgBBAFIAXwBZAGUAcwB0
AGUAcgBkAGEAeQBEAGEAdABlAA0ACgBXAEgARQBSAEUADQAKACAAIAAgACAAVAAuAF8ARQBGAEYA
XwBUAE8AIABJAFMAIABOAFUATABMAA0ACgBBAE4ARAAgAFQALgBfAEsARQBZACAASQBOAA0ACgAo
AA0ACgAgACAAIAAgAFMARQBMAEUAQwBUACAASAAuAF8ASwBFAFkADQAKACAAIAAgACAARgBSAE8A
TQAgACIAewBoAGkAcwB0AG8AcgB5AF8AYwBhAHQAYQBsAG8AZwB9ACIALgAiAHsAaABpAHMAdABv
AHIAeQBfAHMAYwBoAGUAbQBhAH0AIgAuACIAewB0AGEAYgBsAGUAfQAiAA0ACgAgACAAIAAgACAA
IAAgACAAIABBAFMAIABIAA0ACgAgACAAIAAgACAAIAAgACAATABFAEYAVAAgAE8AVQBUAEUAUgAg
AEoATwBJAE4AIAB0AG0AcAB7AHQAYQBiAGwAZQB9AF8ATABvAGEAZABEAGEAdABhACAAQQBTACAA
VQBQACAATwBOAA0ACgAgACAAIAAgACAAIAAgACAAKAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAVQBQAC4ARABXAEkARAAgAD0AIABIAC4ARABXAEkARAANAAoAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAQQBOAEQAIABVAFAALgBGAGkAZQBsAGQATgBhAG0AZQAgAD0AIABIAC4ARgBpAGUAbABk
AE4AYQBtAGUADQAKACAAIAAgACAAIAAgACAAIAApAA0ACgAgACAAIAAgACAAIAAgACAAVwBIAEUA
UgBFAA0ACgAgACAAIAAgACAAIAAgACAAVQBQAC4ARABXAEkARAAgAEkAUwAgAE4AVQBMAEwADQAK
ACkAOwANAAoARABSAE8AUAAgAFQAQQBCAEwARQAgAEkARgAgAEUAWABJAFMAVABTACAAdABtAHAA
ewB0AGEAYgBsAGUAfQBfAEwAbwBhAGQARABhAHQAYQA7AAETewBjAGEAdABhAGwAbwBnAH0AABF7
AHMAYwBoAGUAbQBhAH0AAA97AHQAYQBiAGwAZQB9AAAjewBoAGkAcwB0AG8AcgB5AF8AYwBhAHQA
YQBsAG8AZwB9AAAhewBoAGkAcwB0AG8AcgB5AF8AcwBjAGgAZQBtAGEAfQAAF1wAZgBpAGUAbABk
AHMALgBjAHMAdgAAAyIAAAEAC0MAQQBTAFQAKAAAJSAAQQBTACAAVgBBAFIAQwBIAEEAUgAoACkA
KQAgAEEAUwAgAAADLAAAHXsAYwBhAHMAdABfAGMAbwBsAHUAbQBuAHMAfQAAHXsAbABpAHMAdABf
AGMAbwBsAHUAbQBuAHMAfQAAHVwAZwBlAG4AZQByAGEAdABlAGQALgBzAHEAbAAAcVMAVABfAGYA
YgAwADUAZAA0ADYAMQA4ADgAYgAwADQAOAAxADgAOQA1ADAANAAyADIANwAzAGMAYgA1AGUAZAA4
ADUAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAYtgvpBKq
SJBC21Dh97HbAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdFgcODg4ODg4ODhUSPQEODhJBDggI
EkUEIAASbQQgABJxBSABEnUcAyAAHAUAAg4ODgUgAg4ODgUVEj0BDgMgAA4FIAEBEwADIAACAyAA
CAUgARMACAUAAQ4dDgYAAw4ODg4IAAESgIkRgI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3N
gIDMkQQAAAAABAEAAAADBhJVAwYSWQMGEhACBggDBhEUBAAAElUEAAASWQUAAQESWQQAABIQAwAA
AQQIABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU1RfZmIwNWQ0NjE4OGIwNDgxODk1MDQyMjczY2I1ZWQ4NTEAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAOEoAAAAA
AAAAAAAAUkoAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERKAAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAA
AAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAQmRgHgAAAQBCZGAePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBmAGIA
MAA1AGQANAA2ADEAOAA4AGIAMAA0ADgAMQA4ADkANQAwADQAMgAyADcAMwBjAGIANQBlAGQAOAA1
ADEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA3ADcANgAuADIA
NQA2ADYANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA5ADcANQA0
AGMAYQA3AGUAZQAwADcAMAA0ADkAOAA1AGIAYgAzADIAYgA2AGQAOAAyAGUAZAAxADUAMgAyADcA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABf
ADkANwA1ADQAYwBhADcAZQBlADAANwAwADQAOQA4ADUAYgBiADMAMgBiADYAZAA4ADIAZQBkADEA
NQAyADIANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBm
AGIAMAA1AGQANAA2ADEAOAA4AGIAMAA0ADgAMQA4ADkANQAwADQAMgAyADcAMwBjAGIANQBlAGQA
OAA1ADEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANwA3
ADYALgAyADUANgA2ADYAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcANwA3ADYALgAyADUANgA2ADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAZDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\5 Execute Process Task - Run Generated Command"
              DTS:CreationName="Microsoft.ExecuteProcess"
              DTS:Description="Execute Process Task"
              DTS:DTSID="{5647647C-2B98-41A7-B6FA-DAE69857AB59}"
              DTS:ExecutableType="Microsoft.ExecuteProcess"
              DTS:LocaleID="-1"
              DTS:ObjectName="5 Execute Process Task - Run Generated Command"
              DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="Arguments">"--config " + "\"" + @[User::SnowSQLConfigDir] + "config.txt" + "\" " + "-c SF -f " + "\"" + @[User::SQLStorage] + @[User::Table3]  +"\\generated.sql" + "\""</DTS:PropertyExpression>
              <DTS:ObjectData>
                <ExecuteProcessData
                  Executable="C:\Program Files\Snowflake SnowSQL\snowsql.exe"
                  Arguments="--config &quot;C:\temp\DWAH\SnowSQL\config.txt&quot; -c SF -f &quot;E:\BI\Scheduled_ETL_SF\Ascend_History\SQL\temp\\generated.sql&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{62BFEDEF-D019-4E08-A367-E2C2AC644130}"
              DTS:From="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\1 Script Task - Create Folder"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\2 Script Task - Generate Fields Command" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{81F62B52-618F-4D79-AB68-C9FB35257E0B}"
              DTS:From="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\2 Script Task - Generate Fields Command"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\3 Process Task - Get Field Names" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{7E5A2914-480E-44A8-AC5B-1EECDBFE8BF9}"
              DTS:From="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\3 Process Task - Get Field Names"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\4 Script Task - Generate SQL Command" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{6FA27047-81A3-47A5-B966-ADB7A5D79ACD}"
              DTS:From="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\4 Script Task - Generate SQL Command"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\5 Execute Process Task - Run Generated Command" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{C4AE5189-2805-4C72-A74B-D0650FE4B7C1}"
              DTS:ObjectName="{C4AE5189-2805-4C72-A74B-D0650FE4B7C1}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::Table3" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\4 - Check Error Log"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{67FA8792-BEFD-47C8-A253-698E9C4CAA10}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="4 - Check Error Log">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\4 - Check Error Log\Execute SQL Task - Get Email PW"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E83A2C99-E604-4293-ABBB-B7FCCDBB2336}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - Get Email PW"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F89FBADB-7C69-4283-A2F9-E5B1C142AFA3}"
              SQLTask:SqlStatementSource="EXEC [dbo].[EncryptedText] @Action = 'Retrieve', @Name = 'SVC_SSIS Service Account'"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Result"
                SQLTask:DtsVariableName="User::SVC_SQL_PW" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\4 - Check Error Log\Script Task - Read Log"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{699EA8AA-9FD8-4A78-AF93-C668EF1F82ED}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task - Read Log"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_3fd1b7350c9d43fd99d5415687678d75"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::SnowSQLLogDir,User::SVC_SQL_PW">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_3fd1b7350c9d43fd99d5415687678d75.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6D620C27-550D-404D-8373-9F24E6614047}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_3fd1b7350c9d43fd99d5415687678d75</RootNamespace>
    <AssemblyName>ST_3fd1b7350c9d43fd99d5415687678d75</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Net.Mail;
using System.Net;
#endregion

namespace ST_3fd1b7350c9d43fd99d5415687678d75
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string logFile = (string) Dts.Variables["SnowSQLLogDir"].Value + "log";
            string emailPW = (string) Dts.Variables["SVC_SQL_PW"].Value;

            // Determine if error log file is empty
            var info = new FileInfo(logFile);

            if (info.Length != 0)
            {
                //Prepare email client and message
                var smtpClient = new SmtpClient("smtp.office365.com")
                {
                    Port = 587,
                    Credentials = new NetworkCredential("SSIS@osuf.org", emailPW),
                    EnableSsl = true,
                };

                var mailMessage = new MailMessage
                {
                    From = new MailAddress("SSIS@osugiving.com"),
                    Subject = "Ascend History Job - Snowflake Errors",
                    Body = "Ascend History Failed :(",
                    IsBodyHtml = true,
                };
                mailMessage.To.Add("krobertson@osugiving.com");
                mailMessage.Attachments.Add(new Attachment(logFile));

                //Send and destroy objects
                smtpClient.Send(mailMessage);
                smtpClient.Dispose();
                mailMessage.Dispose();

                Dts.TaskResult = (int)ScriptResults.Success;
                return;
            }
            Dts.TaskResult = (int)ScriptResults.Success;




        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_3fd1b7350c9d43fd99d5415687678d75</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_3fd1b7350c9d43fd99d5415687678d75</msb:DisplayName>
		<msb:ProjectId>{9D005C7C-F55A-4734-96A7-278B73740F23}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_3fd1b7350c9d43fd99d5415687678d75.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3fd1b7350c9d43fd99d5415687678d75.Properties.Settings.get_Default():ST_3fd1b7350c9d43fd99d5415687678d75.Properties.Sett" +
    "ings")]

namespace ST_3fd1b7350c9d43fd99d5415687678d75.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_3fd1b7350c9d43fd99d5415687678d75")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_3fd1b7350c9d43fd99d5415687678d75")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3fd1b7350c9d43fd99d5415687678d75.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3fd1b7350c9d43fd99d5415687678d75.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3fd1b7350c9d43fd99d5415687678d75.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_3fd1b7350c9d43fd99d5415687678d75.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_3fd1b7350c9d43fd99d5415687678d75.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_3fd1b7350c9d43fd99d5415687678d75.dll">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
TQB5AAQFBgAJAQQFEAB5AEgEUgB5AEUGEAB5AKkGEAB5ABsETQB5ANQEWQARAXUAEAB5ACcGXwAh
AQQFEAAMAHUAbgDxAHkAdADxAFABBgB5AFABBgDJAGgGAQBxAAQFBgCRAAQFBgAxAbUAegAxAbIG
gwCZAAQFiQC5AAQFBgAIABQAowAIABgAqAApAHMAEAEuAAsA6AAuABMA8QAuABsAEAEuACMAGQEu
ACsAQgEuADMAQgEuADsAQgEuAEMAGQEuAEsASAEuAFMAQgEuAFsAXwFDAGMAqABJAHMAEAFhAHsA
qABjAGsAqAAbAAMAAQAEAAMAAAD0BNkAAAAUAd4AAABgBuMAAgAEAAMAAgAFAAUAAQAGAAUAAgAH
AAcAZQAEgAAAAQAAAJEe50QAAAAAAAAOAAAABAAAAAAAAAAAAAAAkQBsAAAAAAANAAAAAAAAAAAA
AACaAEIDAAAAAAQAAAAAAAAAAAAAAJEAQQQAAAAADQAAAAAAAAAAAAAAmgBFAAAAAAAAAAAAAQAA
AFUFAAAFAAIAAAAAAABDb2xsZWN0aW9uYDEAU1RfM2ZkMWI3MzUwYzlkNDNmZDk5ZDU0MTU2ODc2
NzhkNzUAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2
YWx1ZV9fAG1zY29ybGliAEFkZABTZW5kAGRlZmF1bHRJbnN0YW5jZQBNYWlsTWVzc2FnZQBWYXJp
YWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2
YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBnZXRfTGVuZ3RoAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2RlbABT
Y3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNU
XzNmZDFiNzM1MGM5ZDQzZmQ5OWQ1NDE1Njg3Njc4ZDc1LmRsbABzZXRfSXNCb2R5SHRtbABzZXRf
RW5hYmxlU3NsAGdldF9JdGVtAFN5c3RlbQBzZXRfRnJvbQBFbnVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24ATWFpbEFkZHJlc3NDb2xsZWN0aW9uAEF0dGFjaG1lbnRDb2xsZWN0aW9uAGdldF9U
bwBGaWxlSW5mbwBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNUXzNmZDFiNzM1MGM5ZDQzZmQ5OWQ1NDE1Njg3Njc4ZDc1LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8zZmQxYjczNTBjOWQ0M2ZkOTlk
NTQxNTY4NzY3OGQ3NS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAc2V0X0NyZWRl
bnRpYWxzAFN1Y2Nlc3MATWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9BdHRh
Y2htZW50cwBDb25jYXQAT2JqZWN0AHNldF9TdWJqZWN0AFN5c3RlbS5OZXQAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABBdHRhY2htZW50AHNldF9Qb3J0AElDcmVkZW50aWFs
c0J5SG9zdABzZXRfQm9keQBnZXRfQXNzZW1ibHkAAAAbUwBuAG8AdwBTAFEATABMAG8AZwBEAGkA
cgAAB2wAbwBnAAAVUwBWAEMAXwBTAFEATABfAFAAVwAAJXMAbQB0AHAALgBvAGYAZgBpAGMAZQAz
ADYANQAuAGMAbwBtAAAbUwBTAEkAUwBAAG8AcwB1AGYALgBvAHIAZwAAJVMAUwBJAFMAQABvAHMA
dQBnAGkAdgBpAG4AZwAuAGMAbwBtAABLQQBzAGMAZQBuAGQAIABIAGkAcwB0AG8AcgB5ACAASgBv
AGIAIAAtACAAUwBuAG8AdwBmAGwAYQBrAGUAIABFAHIAcgBvAHIAcwABMUEAcwBjAGUAbgBkACAA
SABpAHMAdABvAHIAeQAgAEYAYQBpAGwAZQBkACAAOgAoAAAxawByAG8AYgBlAHIAdABzAG8AbgBA
AG8AcwB1AGcAaQB2AGkAbgBnAC4AYwBvAG0AAHFTAFQAXwAzAGYAZAAxAGIANwAzADUAMABjADkA
ZAA0ADMAZgBkADkAOQBkADUANAAxADUANgA4ADcANgA3ADgAZAA3ADUALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAIHL/hrRDzJFrchls/0VAAkABCABAQgDIAAB
BSABARERBCABAQ4FIAEBEVUGBwMODhI9BCAAEmUEIAASaQUgARJtHAMgABwFAAIODg4DIAAKBSAC
AQ4OBiABARKAgQQgAQECBiABARKAhQUgABKAiQUgABKAjQgVEoCVARKAkQUgAQETAAUgAQESPQgA
ARKAmRGAnQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEk0DBhJR
AwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8zZmQxYjcz
NTBjOWQ0M2ZkOTlkNTQxNTY4NzY3OGQ3NQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADgMQAAAAAAAAAAAAD6MQAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA7DEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA50SRHgAAAQDnRJEePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwAzAGYAZAAxAGIANwAzADUAMABjADkAZAA0ADMAZgBkADkAOQBkADUANAAxADUANgA4
ADcANgA3ADgAZAA3ADUAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwA4ADIANQAuADEANwA2ADMAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwAzAGYAZAAxAGIANwAzADUAMABjADkAZAA0ADMAZgBkADkAOQBkADUANAAxADUANgA4ADcA
NgA3ADgAZAA3ADUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADMAZgBkADEAYgA3ADMANQAwAGMAOQBkADQAMwBmAGQAOQA5AGQANQA0ADEA
NQA2ADgANwA2ADcAOABkADcANQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwAzAGYAZAAxAGIANwAzADUAMABjADkAZAA0ADMAZgBkADkAOQBkADUANAAxADUA
NgA4ADcANgA3ADgAZAA3ADUAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcAOAAyADUALgAxADcANgAzADkAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAOAAyADUALgAxADcANgAzADkAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAADDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\4 - Check Error Log.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{9B868636-1DE0-420F-BB66-9BDCACF34590}"
          DTS:From="Package\4 - Check Error Log\Execute SQL Task - Get Email PW"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\4 - Check Error Log\Script Task - Read Log" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\5 - Cleanup"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{008F11E1-6734-44DC-B4BD-E59037A7C69A}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="5 - Cleanup">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\5 - Cleanup\2 Script Task - Delete SnowSQL folder"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{fd544356-ec52-4369-8148-d4d8a182b60c}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="2 Script Task - Delete SnowSQL folder"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_7220ea61f59f4079a9b48e07c534ff54"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::SnowSQLConfigDir,User::SnowSQLDir">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_ea5b5d781f59475d8e90a4605f58b2da")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_ea5b5d781f59475d8e90a4605f58b2da")> 
<Assembly: AssemblyCopyright("Copyright @  2021")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("be382f33-10d5-44a7-aa91-7b708387f824")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math

'Imports added for this script
Imports System.IO

Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        '
        Dim SnowSQLConfigDir As String = Dts.Variables("SnowSQLDir").Value.ToString + "SnowSQL\"
        Dim SnowSqlLogDir As String = Dts.Variables("SnowSQLDir").Value.ToString + "logs\"

        ' Delete the folder
        If Directory.Exists(SnowSQLConfigDir) = True Then
            Directory.Delete(SnowSQLConfigDir, True)
        End If

        If Directory.Exists(SnowSqlLogDir) = True Then
            Directory.Delete(SnowSqlLogDir, True)
        End If

        'Create the folder
        If Directory.Exists(SnowSQLConfigDir) = False Then
            Directory.CreateDirectory(SnowSQLConfigDir)
        End If

        If Directory.Exists(SnowSqlLogDir) = False Then
            Directory.CreateDirectory(SnowSqlLogDir)
        End If


        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_7220ea61f59f4079a9b48e07c534ff54.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{8C2E0B00-8680-4B5D-A3F3-A0B052710EEC}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>My Project</AppDesignerFolder><RootNamespace>ST_ea5b5d781f59475d8e90a4605f58b2da</RootNamespace><AssemblyName>ST_7220ea61f59f4079a9b48e07c534ff54</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>true</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineDebug>false</DefineDebug><DefineTrace>true</DefineTrace><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><Import Include="Microsoft.VisualBasic" /><Import Include="System" /><Import Include="System.Collections" /><Import Include="System.Data" /><Import Include="System.Diagnostics" /><Import Include="System.Windows.Forms" /></ItemGroup><ItemGroup><AppDesigner Include="My Project\" /><Compile Include="My Project\AssemblyInfo.vb"><SubType>Code</SubType></Compile><EmbeddedResource Include="My Project\Resources.resx"><Generator>VbMyResourcesResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.vb</LastGenOutput><CustomToolNamespace>My.Resources</CustomToolNamespace></EmbeddedResource><Compile Include="My Project\Resources.Designer.vb"><AutoGen>True</AutoGen><DesignTime>True</DesignTime><DependentUpon>Resources.resx</DependentUpon><SubType>Code</SubType></Compile><None Include="My Project\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.vb</LastGenOutput></None><Compile Include="My Project\Settings.Designer.vb"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon><SubType>Code</SubType></Compile><Compile Include="ScriptMain.vb"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a VB project.--><Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ea5b5d781f59475d8e90a4605f58b2da</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ea5b5d781f59475d8e90a4605f58b2da</msb:DisplayName>
		<msb:ProjectId>{37D8279E-33E5-4893-8A4C-596F5AA1A36F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7220ea61f59f4079a9b48e07c534ff54.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_ea5b5d781f59475d8e90a4605f58b2da.dll">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
CQAPAAUBAAAbBwAAYQAJABEABQEAABAAAABhAAkAGAACAQAAjQgAAJUACgAaADEAKQYRATEAAAYZ
ATEAFAYhATEAQgYpAREAswYxAREAegE1AREAKQQ5AREAqQg9ASEA1AjPAAYGhgBAAVaAfQhDAVaA
WgFDAVAgAAAAAAYYxQYGAAEAWCAAAAAABhjFBgYAAQBgIAAAAAARGMsGRwEBAIogAAAAABMImwZL
AQEAliAAAAAAEwiMBVABAQCiIAAAAAATCIwGVQEBAK4gAAAAABMICwdaAQEAuiAAAAAAAxjFBgYA
AQDCIAAAAAAWCGAGXwEBAO4gAAAAABYIYgFkAQEA9SAAAAAAFghuAWkBAQD9IAAAAAARGMsGRwEC
AA4hAAAAAAYYxQYGAAIAGCEAAAAAFggxBG8BAgB0IQAAAAAGGMUGBgACAHwhAAAAAAYAhwUGAAIA
JSIAAAAAxgJnCKcAAgAzIgAAAADGAvkArAADADsiAAAAAIMAUgF0AQMARyIAAAAAxgJ/BIsAAwBQ
IgAAAAARAHMAeQEDAHAiAAAAAAEAXwCBAQQAuiAAAAAABhjFBgYABQB8IgAAAAADCOAASgAFALAi
AAAAAAYYxQYGAAUAAAABAE4EAAABAP4FAAABAPAAAAABAPAACQDFBgEAEQDFBgYAGQDFBgoAKQDF
BhAAMQDFBhAAOQDFBhAAQQDFBhAASQDFBhAAUQDFBhAAWQDFBhUAYQDFBhUAaQDFBhAAcQDFBhAA
eQDFBhAAgQDFBhoAkQDFBiAAqQDFBgYAsQDFBgYAuQDFBgYA0QDFBiYA6QDFBhAACQHFBgYAEQHF
BgYAmQDFBgYAoQDFBgYADADFBgYAFADFBgYAHADFBgYAJADFBgYADADgAEoAFADgAEoAHADgAEoA
JADgAEoAwQDFBgYA2QAgAU8A2QAFCVcA8QDFBl0AQQFFBGUAAQHFBgYASQGVBmoASQHACGoAGQHF
BgYAGQGFCHQAUQFOCHoAWQFPBYAAYQExBIcAwQB/BIsAaQGiCI8AcQGbCJUAcQHfAZoAcQESCaAA
UQHFCAEAwQBnCKcAwQD5AKwAgQHRALgANADUCM8APAAxBEoAPAA7BOYAPADFBgYACAAsAAcBCAAw
AAwBKQCrADMDLgALALEBLgATALoBLgAbANkBLgAjAOIBLgArAAsCLgAzAAsCLgA7AOIBLgBDABEC
LgBLAAsCLgBTACgCLgBbAAsCLgBjAC4CLgBrAFgCLgBzAGUCQACLAAwBQACDAK8CQwB7ALgCQwCD
AK8CSQCrAEQDYwB7ALgCYwCDAK8CaQCrAFgDgACLAAwBgwCTAAwBgwCbAAwBgwB7ALgCiQCrAGUD
oACLAAwBqQCDANkBwACLAAwByQCDANkB4ACLAAwB4wC7AAwB4wBTAAsC6QCzAAwBAwGDAK8CAwGj
ANECIwGDAK8CIwFbAAsCIAKDAK8CIAKLAAwBQAKDAK8CQAKLAAwBYAKDAK8CYAKLAAwBgAKDAK8C
gAKLAAwBoAKLAAwBwAKLAAwB4AKLAAwB4AKDAK8CAAOLAAwBIAOLAAwBIAODAK8CbwCwAMMABAAB
AAUABQAGAAcACQAIAAAAqgaJAQAAngWOAQAAkAaTAQAAHQeYAQAAZAadAQAAfgGiAQAATgSnAQAA
5ACsAQIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQALAAIACgANAAEACwANAAIADgAPAAIAGAAR
AC4ANQA8AEMAtQDIANcA3gAEgAAAAQAAAAAAAAAAAAAAAACOAAAABAAAAAAAAAAAAAAA7ACyAAAA
AAAEAAAAAAAAAAAAAADsAFgFAAAAAAoAAAAAAAAAAAAAAPUAuwAAAAAADQAAAAAAAAAAAAAA/gCN
BAAAAAANAAAAAAAAAAAAAAD+AD4AAAAAAAAAAAABAAAABwgAAAgABAAJAAQACgAHAAAAEAASAF0A
AAAQACsAXQAAAAAALQBdAG8AvgBvAOEAAAAAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVj
dFByb3ZpZGVyYDEAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBUAERpc3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAHZhbHVlX18AU1Rf
ZWE1YjVkNzgxZjU5NDc1ZDhlOTBhNDYwNWY1OGIyZGEAbXNjb3JsaWIATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29k
ZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQBfcmVzQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25C
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBH
dWlkQXR0cmlidXRlAEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAU3RhbmRhcmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlk
ZGVuQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBtX1ZhbHVlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVt
LlRocmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1hdGgATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAU2NyaXB0
T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2VhNWI1ZDc4MWY1OTQ3NWQ4ZTkw
YTQ2MDVmNThiMmRhLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQBTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwuRGVzaWduAFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGljYXRpb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3Vs
dHVyZUluZm8ARGlyZWN0b3J5SW5mbwBtX0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFBy
b3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92
aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAGdldF9Vc2Vy
AEVudGVyAGdldF9Db21wdXRlcgBNeUNvbXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5j
Y3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2
aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMu
QXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9z
b2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2VhNWI1ZDc4MWY1OTQ3NWQ4ZTkwYTQ2MDVmNThi
MmRhLk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF9lYTViNWQ3ODFmNTk0NzVkOGU5MGE0NjA1
ZjU4YjJkYS5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMA
TXlTZXR0aW5ncwBFcXVhbHMAUnVudGltZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMARXhpc3RzAENvbmNhdABtX1N5bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rhc2tS
ZXN1bHQAbV9Db250ZXh0AFNUX2VhNWI1ZDc4MWY1OTQ3NWQ4ZTkwYTQ2MDVmNThiMmRhLk15AGdl
dF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4A
TQB5AFIAZQBzAG8AdQByAGMAZQBzAAAVUwBuAG8AdwBTAFEATABEAGkAcgAAEVMAbgBvAHcAUwBR
AEwAXAAAC2wAbwBnAHMAXAAAAP2Ykr5rpF9GhSFTMqX5vAcABCABAQgDIAABBSABARERBCABAQ4E
IAEBAgUgAgEODgUgAQERRQcgBAEODg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMA
BwABEm0RgJkFIAASgJ0HIAIBDhKAnQQAARwcBAABARwEBwIODgUgABKAqQUgABKArQYgARKAsRwD
IAAcAyAADgUAAg4ODgQAAQIOBQACAQ4CBgABEoC9DgQgAQIcAyAACAQHAR4AAh4ABRABAB4ABAoB
HgAEBwETAAYVEiQBEwAHBhUScQETAAYVEnEBEwACEwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/
EdUKOgiJhF3NgIDMkQQAAAAABAEAAAAHBhUSJAESDAcGFRIkARIIBwYVEiQBEmUHBhUSJAESIAMG
EnkDBhJ9AwYSGAIGHAIGCAMGESgDAAABBAAAEgwEAAASCAQAABJlBAAAEiAEAAASeQQAABJ9BQAB
ARJ9BAAAEhgEIAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAASIAQIABJ5BAgA
En0ECAASGAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTVF9lYTViNWQ3ODFmNTk0NzVkOGU5MGE0NjA1ZjU4YjJkYQAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDIxAAAFAQABAAApAQAkYmUzODJmMzMtMTBkNS00NGE3LWFhOTEtN2I3MDgz
ODdmODI0AAAMAQAHMS4wLjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUIAQABAAAAAAAYAQAKTXlUZW1w
bGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRw
Q2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQ
AQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5X
ZWJTZXJ2aWNlcwAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAPw4AAAAAAAAAAAAABY5AAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAIOQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBlAGEANQBiADUAZAA3ADgAMQBmADUAOQA0ADcANQBkADgAZQA5ADAAYQA0ADYAMAA1AGYA
NQA4AGIAMgBkAGEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGUAYQA1AGIANQBkADcA
OAAxAGYANQA5ADQANwA1AGQAOABlADkAMABhADQANgAwADUAZgA1ADgAYgAyAGQAYQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZQBhADUA
YgA1AGQANwA4ADEAZgA1ADkANAA3ADUAZAA4AGUAOQAwAGEANAA2ADAANQBmADUAOABiADIAZABh
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAYQA1AGIA
NQBkADcAOAAxAGYANQA5ADQANwA1AGQAOABlADkAMABhADQANgAwADUAZgA1ADgAYgAyAGQAYQAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAKDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\5 - Cleanup\File System Task - Clear Temp Folder"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{BC8DFFCE-8AB9-4FD6-BE3E-4FDCD6FF9D66}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="File System Task - Clear Temp Folder"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteDirectoryContent"
              TaskSourcePath="User::SQLStorage"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\5 - Cleanup.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{A1D80F6B-84DD-4B6A-8823-3BC8FE104506}"
          DTS:From="Package\5 - Cleanup\File System Task - Clear Temp Folder"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\5 - Cleanup\2 Script Task - Delete SnowSQL folder" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A3184BDF-C3AB-467D-91B5-0D0D508034CC}"
      DTS:From="Package\4 - Check Error Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\5 - Cleanup" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{3E468FF0-D307-49C9-B7E3-A376338A51B2}"
      DTS:From="Package\1 Create SnowSQL dir and config"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\2 Create History Tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{D6C39935-D3C0-46C7-9603-413A8BE373BD}"
      DTS:From="Package\2 Create History Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\4 - Check Error Log" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="312,42"
          Id="Package\1 Create SnowSQL dir and config\1 Execute SQL Task - Get Snowflake Password"
          TopLeft="20,7" />
        <NodeLayout
          Size="268,42"
          Id="Package\1 Create SnowSQL dir and config\2 Script Task - Create SnowSQL folder"
          TopLeft="46,75" />
        <NodeLayout
          Size="270,42"
          Id="Package\1 Create SnowSQL dir and config\3 Script Task - Create SnowSQL config"
          TopLeft="53,142" />
        <NodeLayout
          Size="281,42"
          Id="Package\1 Create SnowSQL dir and config\4 Script Task - Create Table Name Query"
          TopLeft="47,210" />
        <NodeLayout
          Size="250,42"
          Id="Package\1 Create SnowSQL dir and config\5 Process Task - Get Table Names"
          TopLeft="61,273" />
        <NodeLayout
          Size="237,42"
          Id="Package\1 Create SnowSQL dir and config\6 Script Task - Set Table Names"
          TopLeft="65,329" />
        <EdgeLayout
          Id="Package\1 Create SnowSQL dir and config.PrecedenceConstraints[Constraint]"
          TopLeft="180,117">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8,25"
              Start="0,0"
              End="8,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.5"
                    Point2="0,12.5"
                    Point3="4,12.5" />
                  <mssgle:LineSegment
                    End="4,12.5" />
                  <mssgle:CubicBezierSegment
                    Point1="4,12.5"
                    Point2="8,12.5"
                    Point3="8,16.5" />
                  <mssgle:LineSegment
                    End="8,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\1 Create SnowSQL dir and config.PrecedenceConstraints[Constraint 1]"
          TopLeft="187.75,184">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\1 Create SnowSQL dir and config.PrecedenceConstraints[Constraint 2]"
          TopLeft="328,231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-17,57.3333333333333"
              Start="0,0"
              End="-9.5,57.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,0"
                    Point2="22.5,0"
                    Point3="22.5,4" />
                  <mssgle:LineSegment
                    End="22.5,53.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,53.3333333333333"
                    Point2="22.5,57.3333333333333"
                    Point3="18.5,57.3333333333333" />
                  <mssgle:LineSegment
                    End="-9.5,57.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\1 Create SnowSQL dir and config.PrecedenceConstraints[Constraint 3]"
          TopLeft="178,49">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\1 Create SnowSQL dir and config.PrecedenceConstraints[Constraint 4]"
          TopLeft="311,299.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9,50.3333333333333"
              Start="0,0"
              End="-1.5,50.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,0"
                    Point2="22.5,0"
                    Point3="22.5,4" />
                  <mssgle:LineSegment
                    End="22.5,46.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,46.3333333333333"
                    Point2="22.5,50.3333333333333"
                    Point3="18.5,50.3333333333333" />
                  <mssgle:LineSegment
                    End="-1.5,50.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="391,426"
          Size="391,469"
          Id="Package\1 Create SnowSQL dir and config"
          TopLeft="665.714285714286,62.1428571428572" />
        <NodeLayout
          Size="220,42"
          Id="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\1 Script Task - Create Folder"
          TopLeft="102,12" />
        <NodeLayout
          Size="284,42"
          Id="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\2 Script Task - Generate Fields Command"
          TopLeft="79,83" />
        <NodeLayout
          Size="246,42"
          Id="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\3 Process Task - Get Field Names"
          TopLeft="94,149" />
        <NodeLayout
          Size="277,42"
          Id="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\4 Script Task - Generate SQL Command"
          TopLeft="66,220" />
        <NodeLayout
          Size="335,42"
          Id="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1\5 Execute Process Task - Run Generated Command"
          TopLeft="52,293" />
        <EdgeLayout
          Id="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1.PrecedenceConstraints[Constraint]"
          TopLeft="212,54">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,29"
              Start="0,0"
              End="9,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5"
                    Point2="0,14.5"
                    Point3="4,14.5" />
                  <mssgle:LineSegment
                    End="5,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="5,14.5"
                    Point2="9,14.5"
                    Point3="9,18.5" />
                  <mssgle:LineSegment
                    End="9,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1.PrecedenceConstraints[Constraint 1]"
          TopLeft="219,125">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1.PrecedenceConstraints[Constraint 2]"
          TopLeft="217,191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.5,29"
              Start="0,0"
              End="-12.5,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5"
                    Point2="0,14.5"
                    Point3="-4,14.5" />
                  <mssgle:LineSegment
                    End="-8.5,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.5,14.5"
                    Point2="-12.5,14.5"
                    Point3="-12.5,18.5" />
                  <mssgle:LineSegment
                    End="-12.5,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1.PrecedenceConstraints[Constraint 3]"
          TopLeft="204.5,262">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15,31"
              Start="0,0"
              End="15,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.5"
                    Point2="0,15.5"
                    Point3="4,15.5" />
                  <mssgle:LineSegment
                    End="11,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="11,15.5"
                    Point2="15,15.5"
                    Point3="15,19.5" />
                  <mssgle:LineSegment
                    End="15,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="441,390"
          Size="441,433"
          Id="Package\2 Create History Tables\2-1 Foreach Loop Container - Create History Table Set 1"
          TopLeft="19.5555555555558,67.6666666666664" />
        <NodeLayout
          Size="220,42"
          Id="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\1 Script Task - Create Folder"
          TopLeft="102,12" />
        <NodeLayout
          Size="284,42"
          Id="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\2 Script Task - Generate Fields Command"
          TopLeft="79,83" />
        <NodeLayout
          Size="246,42"
          Id="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\3 Process Task - Get Field Names"
          TopLeft="94,149" />
        <NodeLayout
          Size="277,42"
          Id="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\4 Script Task - Generate SQL Command"
          TopLeft="66,220" />
        <NodeLayout
          Size="335,42"
          Id="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2\5 Execute Process Task - Run Generated Command"
          TopLeft="52,293" />
        <EdgeLayout
          Id="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2.PrecedenceConstraints[Constraint]"
          TopLeft="212,54">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,29"
              Start="0,0"
              End="9,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5"
                    Point2="0,14.5"
                    Point3="4,14.5" />
                  <mssgle:LineSegment
                    End="5,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="5,14.5"
                    Point2="9,14.5"
                    Point3="9,18.5" />
                  <mssgle:LineSegment
                    End="9,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2.PrecedenceConstraints[Constraint 1]"
          TopLeft="219,125">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2.PrecedenceConstraints[Constraint 2]"
          TopLeft="217,191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.5,29"
              Start="0,0"
              End="-12.5,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5"
                    Point2="0,14.5"
                    Point3="-4,14.5" />
                  <mssgle:LineSegment
                    End="-8.5,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.5,14.5"
                    Point2="-12.5,14.5"
                    Point3="-12.5,18.5" />
                  <mssgle:LineSegment
                    End="-12.5,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2.PrecedenceConstraints[Constraint 3]"
          TopLeft="204.5,262">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15,31"
              Start="0,0"
              End="15,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.5"
                    Point2="0,15.5"
                    Point3="4,15.5" />
                  <mssgle:LineSegment
                    End="11,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="11,15.5"
                    Point2="15,15.5"
                    Point3="15,19.5" />
                  <mssgle:LineSegment
                    End="15,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="441,390"
          Size="441,433"
          Id="Package\2 Create History Tables\2-2 Foreach Loop Container - Create History Table Set 2"
          TopLeft="527.666666666667,64.2539682539681" />
        <NodeLayout
          Size="220,42"
          Id="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\1 Script Task - Create Folder"
          TopLeft="102,12" />
        <NodeLayout
          Size="284,42"
          Id="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\2 Script Task - Generate Fields Command"
          TopLeft="79,83" />
        <NodeLayout
          Size="246,42"
          Id="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\3 Process Task - Get Field Names"
          TopLeft="94,149" />
        <NodeLayout
          Size="277,42"
          Id="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\4 Script Task - Generate SQL Command"
          TopLeft="66,220" />
        <NodeLayout
          Size="335,42"
          Id="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3\5 Execute Process Task - Run Generated Command"
          TopLeft="52,293" />
        <EdgeLayout
          Id="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3.PrecedenceConstraints[Constraint]"
          TopLeft="212,54">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,29"
              Start="0,0"
              End="9,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5"
                    Point2="0,14.5"
                    Point3="4,14.5" />
                  <mssgle:LineSegment
                    End="5,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="5,14.5"
                    Point2="9,14.5"
                    Point3="9,18.5" />
                  <mssgle:LineSegment
                    End="9,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3.PrecedenceConstraints[Constraint 1]"
          TopLeft="219,125">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3.PrecedenceConstraints[Constraint 2]"
          TopLeft="217,191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.5,29"
              Start="0,0"
              End="-12.5,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5"
                    Point2="0,14.5"
                    Point3="-4,14.5" />
                  <mssgle:LineSegment
                    End="-8.5,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.5,14.5"
                    Point2="-12.5,14.5"
                    Point3="-12.5,18.5" />
                  <mssgle:LineSegment
                    End="-12.5,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3.PrecedenceConstraints[Constraint 3]"
          TopLeft="204.5,262">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15,31"
              Start="0,0"
              End="15,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.5"
                    Point2="0,15.5"
                    Point3="4,15.5" />
                  <mssgle:LineSegment
                    End="11,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="11,15.5"
                    Point2="15,15.5"
                    Point3="15,19.5" />
                  <mssgle:LineSegment
                    End="15,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="441,390"
          Size="441,433"
          Id="Package\2 Create History Tables\2-3 Foreach Loop Container - Create History Table Set 3"
          TopLeft="1016.33333333333,60.111111111111" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1512,563"
          Size="1512,606"
          Id="Package\2 Create History Tables"
          TopLeft="127.777777777778,576.666666666667" />
        <NodeLayout
          Size="249,42"
          Id="Package\4 - Check Error Log\Execute SQL Task - Get Email PW"
          TopLeft="27.571428571428,33.1428571428571" />
        <NodeLayout
          Size="191,42"
          Id="Package\4 - Check Error Log\Script Task - Read Log"
          TopLeft="61.8571428571427,124" />
        <EdgeLayout
          Id="Package\4 - Check Error Log.PrecedenceConstraints[Constraint 1]"
          TopLeft="154.714285714285,75.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.8571428571429"
              Start="0,0"
              End="0,41.3571428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.3571428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="319,226"
          Size="319,269"
          Id="Package\4 - Check Error Log"
          TopLeft="1711.42857142857,634.285714285714" />
        <NodeLayout
          Size="264,42"
          Id="Package\5 - Cleanup\File System Task - Clear Temp Folder"
          TopLeft="46,26" />
        <NodeLayout
          Size="267,42"
          Id="Package\5 - Cleanup\2 Script Task - Delete SnowSQL folder"
          TopLeft="46,128" />
        <EdgeLayout
          Id="Package\5 - Cleanup.PrecedenceConstraints[Constraint]"
          TopLeft="178.75,68">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="354,225"
          Size="354,268"
          Id="Package\5 - Cleanup"
          TopLeft="2037.33333333333,350.555555555555" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="1870.92857142857,634.285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="166.40476190476,-149.730158730159"
              Start="0,0"
              End="158.90476190476,-149.730158730159">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-145.730158730159" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-145.730158730159"
                    Point2="0,-149.730158730159"
                    Point3="4,-149.730158730159" />
                  <mssgle:LineSegment
                    End="158.90476190476,-149.730158730159" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="861.214285714286,531.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.5634920634924,45.5238095238097"
              Start="0,0"
              End="22.5634920634924,38.0238095238097">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.7619047619049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.7619047619049"
                    Point2="0,22.7619047619049"
                    Point3="4,22.7619047619049" />
                  <mssgle:LineSegment
                    End="18.5634920634924,22.7619047619049" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5634920634924,22.7619047619049"
                    Point2="22.5634920634924,22.7619047619049"
                    Point3="22.5634920634924,26.7619047619049" />
                  <mssgle:LineSegment
                    End="22.5634920634924,38.0238095238097" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1639.77777777778,879.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="71.6507936507903,-110.880952380953"
              Start="0,0"
              End="64.1507936507903,-110.880952380953">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.8253968253952,0" />
                  <mssgle:CubicBezierSegment
                    Point1="31.8253968253952,0"
                    Point2="35.8253968253952,0"
                    Point3="35.8253968253952,-4" />
                  <mssgle:LineSegment
                    End="35.8253968253952,-106.880952380953" />
                  <mssgle:CubicBezierSegment
                    Point1="35.8253968253952,-106.880952380953"
                    Point2="35.8253968253952,-110.880952380953"
                    Point3="39.8253968253952,-110.880952380953" />
                  <mssgle:LineSegment
                    End="64.1507936507903,-110.880952380953" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>