<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/17/2015 4:26:30 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="OSUF-ETL"
  DTS:CreatorName="FOUNDATION\bhof"
  DTS:DTSID="{43C33677-FF77-4B44-B417-14EE4570F195}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3026.27"
  DTS:LocaleID="1033"
  DTS:ObjectName="01_RemoveDateStamp"
  DTS:PackageType="5"
  DTS:VersionBuild="70"
  DTS:VersionGUID="{BAA182F6-BF9E-46BA-9065-C419C91C5A8F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[bb-dw.OSUF_RE_DW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{702B745B-8EDB-45EA-8201-657547F5A20D}"
      DTS:ObjectName="bb-dw.OSUF_RE_DW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=bb-dw;Initial Catalog=OSUF_RE_DW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[bb-dw.OSUF_Secure]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{77D652EB-7D4D-4CCD-BE16-CCF67A27C6EB}"
      DTS:ObjectName="bb-dw.OSUF_Secure">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=bb-dw;Initial Catalog=OSUF_Secure;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DataSource OSUFacStaff]"
      DTS:CreationName="FILE"
      DTS:DTSID="{8D7E80CF-16EC-4910-BF14-C13703CE7138}"
      DTS:ObjectName="DataSource OSUFacStaff">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="E:\BI\NoSchedule_ETL\BioImports\BioImports\DataSource OSUFacStaff.dtsx" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OSUF-ETL.EmptyDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B935DFB9-5468-49D5-AC2E-CF64A44699B4}"
      DTS:ObjectName="OSUF-ETL.EmptyDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=OSUF-ETL;Initial Catalog=EmptyDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9F5EB2DD-EDCF-4224-B721-329857683084}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BCCList">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{07B2DDE1-224B-46D7-A329-0DA64F17A8F8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CCList">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2A4B7234-4807-4BBA-83A7-4206D06F3DDB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FacultyStaffData">
      <DTS:VariableValue
        DTS:DataType="8">\\ftp1.osuf.org\ftp\FacultyStaff\Upload\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E31E3ED0-5BE6-4512-894E-97BCFDD52B1A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FacultyStaffDataArchive">
      <DTS:VariableValue
        DTS:DataType="8">\\buss\Import\import data\OSU Faculty and Staff\01 - New Data File\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{346A1B15-98D9-4395-A37D-39C999398F29}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FacultyStaffDataFileExists">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{544B1DD1-A4E0-4C96-A6A6-AA26F9D8E042}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FacultyStaffDataFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{28F1D511-27B1-4D3A-9AA3-A01FE18F0CF5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FacultyStaffForSnowflake">
      <DTS:VariableValue
        DTS:DataType="8">\\buss\Import\import data\OSU Faculty and Staff\98 - Snowflake\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{032A7EB4-1753-49F0-85B8-B0A827D582C0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NewDataFile">
      <DTS:VariableValue
        DTS:DataType="8">\\buss\Import\import data\OSU Faculty and Staff\01 - New Data File\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{32E2058E-6BC7-4462-BE44-F86AB0588D75}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NewDataFileFileExists">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C501851D-11C9-419F-B091-D63B28EA6F6B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RERefreshStatus">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ECC5FEB2-71A4-4342-B878-C3A21FB2084C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SF_FacultyStaff_Dir">
      <DTS:VariableValue
        DTS:DataType="8">\\buss\Import\import data\OSU Faculty and Staff\98 - Snowflake\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{01604435-4BC5-4161-B732-02C577AB6DD0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SF_FacultyStaff_genericFilename">
      <DTS:VariableValue
        DTS:DataType="8">FoundationFacultyStaffFile.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7508B889-5FE1-4813-A36E-FF144F05E04E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SVC_SQL_PW">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B5B3D53A-5036-4069-BF81-173044B1F9CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ToList">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B76BB60E-B268-4CA9-9F00-6BEA9F441FEA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipCommand">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Get Email Account Password"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{9DC111AE-E95F-4C76-AEF5-EF7A69D4A796}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Get Email Account Password"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; Â© 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{77D652EB-7D4D-4CCD-BE16-CCF67A27C6EB}"
          SQLTask:SqlStatementSource="EXEC [dbo].[EncryptedText] @Action = 'Retrieve', @Name = 'SVC_SSIS Service Account'"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="Result"
            SQLTask:DtsVariableName="User::SVC_SQL_PW" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - Send Alert for exisitng file in 01 New Data File"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{E02296EB-F5BD-4778-9A7C-848F28C30639}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Send Alert for exisitng file in 01 New Data File"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_8372eb6a67b043a186920fe8814100cb"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadOnlyVariables="User::FacultyStaffData,User::NewDataFile,User::SVC_SQL_PW"
          ReadWriteVariables="User::FacultyStaffDataFileExists,User::NewDataFileFileExists">
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_8372eb6a67b043a186920fe8814100cb")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_8372eb6a67b043a186920fe8814100cb")> 
<Assembly: AssemblyCopyright("Copyright @  2015")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("761c5ded-e141-4ca5-bc8b-f7fdfcba402d")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Net
Imports System.Net.Mail
Imports System.IO
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Function FilesExist(Directory As String) As Boolean

        Dim ReturnValue As Boolean
        Dim SourceDir As New DirectoryInfo(Directory) 'Ex: C:\SomeFolder

        'MsgBox("FE One")

        ReturnValue = False

        'Iterate through the Files collection and pass each file to a FileInfo object
        For Each ff As FileInfo In SourceDir.GetFiles("*.csv")
            ReturnValue = True
        Next

        'MsgBox("FE Two")


        Return ReturnValue

    End Function


    Public Sub SendEMail(MessageBody As String, MessageSubject As String, ToList As String, CCList As String)

        Dim mailMessage As MailMessage
        Dim smtpClient As SmtpClient

        'MsgBox("Send One")

        mailMessage = New MailMessage("SSIS@osugiving.com", ToList)

        'MsgBox("Send OneA")

        'MsgBox("Send Two: " + CCList.ToString)

        'MsgBox("Send TwoA")

        '--------------Email Account Password------------------------------------------
        Dim EmailPW As String = Dts.Variables("SVC_SQL_PW").Value.ToString

        'The CC List needs to be broken out into indiv email addresses
        If CCList.ToString.IndexOf("@") > 0 Then

            'MsgBox("Send Three")

            Dim CCListArry As String() = CCList.Split(New Char() {","c})
            Dim CC As String
            For Each CC In CCListArry
                mailMessage.CC.Add(CC.ToString)
            Next

            'MsgBox("Send Four")

        End If

        'MsgBox("Send Five")

        mailMessage.IsBodyHtml = True
        mailMessage.Body = MessageBody.ToString
        mailMessage.Subject = MessageSubject.ToString
        mailMessage.IsBodyHtml = True
        smtpClient = New SmtpClient("smtp.office365.com")
        smtpClient.Credentials = New NetworkCredential("SSIS@osuf.org", EmailPW)
        smtpClient.Port = 587
        smtpClient.EnableSsl = True
        smtpClient.Send(mailMessage)

        'MsgBox("Send Six")

    End Sub


    Public Sub Main()
        '
        ' Add your code here
        '
        '-----------------------------Check for if there is a file in NewDataFile folder------------------
        Dim NewDataFile As String = Dts.Variables("NewDataFile").Value.ToString
        Dim NewDataFileFileExists As String = "No"

        If FilesExist(NewDataFile) = True Then
            NewDataFileFileExists = "Yes"
        End If
       
        Dts.Variables("NewDataFileFileExists").Value = NewDataFileFileExists



        '-----------------------------Check for if there is a file in NewDataFile folder------------------
        Dim FacultyStaffData As String = Dts.Variables("FacultyStaffData").Value.ToString
        Dim FacultyStaffDataFileExists As String = "No"

        'MsgBox("One")

        If FilesExist(FacultyStaffData) = True Then
            FacultyStaffDataFileExists = "Yes"
        End If

        'MsgBox("Two")


        Dts.Variables("FacultyStaffDataFileExists").Value = FacultyStaffDataFileExists

        'MsgBox("Three")

        'Send Email when there is a New Faculty staff file and there is a file in NewDataFile
        If NewDataFileFileExists = "Yes" And FacultyStaffDataFileExists = "Yes" Then

            'MsgBox("Four")

            Dim messageBody As String
            Dim messageSubject As String = "Faculty Staff Processing Error"
            Dim messageToList As String
            Dim messageCCList As String

            'MsgBox("Five")

            messageBody = "A new faculty staff data file has been recieved, but cannot be processed because there is an existing csv file."
            messageBody = messageBody & "<br><br><br><br>Existing CSV File Location: <a href=""file://" & Dts.Variables("NewDataFile").Value.ToString & """>" & Dts.Variables("NewDataFile").Value.ToString & "</a>"


            'MsgBox("Six")


            'messageToList = "jgoeringer@osugiving.com, dsstickets@@osugiving.com, ccameron@osugiving.com"
            messageToList = "ccameron@osugiving.com"
            messageCCList = "bhoffman@osugiving.com"
            messageCCList = "dfair@osugiving.com"

            SendEMail(messageBody, messageSubject, messageToList, messageCCList)


            'MsgBox("Seven")
        End If

        'MsgBox("Eight")


        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="ST_8372eb6a67b043a186920fe8814100cb.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D07E5E7E-CF2A-40C6-8DF2-9A5C88DBDCEE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_8372eb6a67b043a186920fe8814100cb</RootNamespace>
    <AssemblyName>ST_8372eb6a67b043a186920fe8814100cb</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_8372eb6a67b043a186920fe8814100cb</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_8372eb6a67b043a186920fe8814100cb</msb:DisplayName>
		<msb:ProjectId>{C9B0523C-6F95-47C1-9864-541F7FE16167}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_8372eb6a67b043a186920fe8814100cb.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_8372eb6a67b043a186920fe8814100cb.dll">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
AADGAhgJ4wAHACIkAAAAAMYCCQHoAAgAKiQAAAAAgwBuAbUBCAA2JAAAAADGAqoEogAIAEAkAAAA
ABEAegC6AQgAYCQAAAAAAQBmAMIBCQC6IAAAAAAGGF0HBgAKAGwkAAAAAAMI8ABKAAoAoCQAAAAA
BhhdBwYACgAAAAEAYwQAAAEARwoAAAEALgoAAAIAdgkAAAMAzwkAAAQAyAkAAAEAkQYAAAEAAAEA
AAEAAAEJAF0HAQARAF0HBgAZAF0HCgApAF0HEAAxAF0HEAA5AF0HEABBAF0HEABJAF0HEABRAF0H
EABZAF0HFQBhAF0HFQBpAF0HEABxAF0HEAB5AF0HEACBAF0HGgCRAF0HIACpAF0HBgCxAF0HBgC5
AF0HBgDRAF0HJgDpAF0HEAAJAV0HBgARAV0HBgCZAF0HBgChAF0HBgAMAF0HBgAUAF0HBgAcAF0H
BgAkAF0HBgAMAPAASgAUAPAASgAcAPAASgAkAPAASgDBAF0HBgDZADwBTwDZADoKVwDxAF0HXQBR
AVoEZQABAV0HBgBZAS0HagBZAaAJagAZAV0HBgBhAV0HEABhAfQIeAAxAV0HGgAZAUAJiwBpAeYI
kQBxAcMFlwB5AUYEngDBAKoEogCBAaoEogCBAWkEpgCBAZoJqwAxATQAsgCRAdgAEAAxAaYFFQAx
ASUKEAAxAWoJEACZAV0HEAChAV0HGgCZAQgJuACZAb8JAQCZAbUFFQCZAdwAvwB5AVAE0QCxAZwE
1gCBAVYJ3QBpAaUJAQDBABgJ4wDBAAkB6AC5AeEA9AA0APQJCwE8AEYESgA8AFAEIgE8AF0HBgAI
ACwAQwEIADAASAEpAKsAcgMuAAsA8gEuABMA+wEuABsAGgIuACMAIwIuACsATAIuADMATAIuADsA
IwIuAEMAUgIuAEsATAIuAFMAaQIuAFsATAIuAGMAbwIuAGsAmQIuAHMApgJAAIsASAFAAIMA7gJD
AHsA9wJDAIMA7gJJAKsAgwNjAHsA9wJjAIMA7gJpAKsAlwOAAIsASAGDAJMASAGDAJsASAGDAHsA
9wKJAKsApAOgAIsASAGpAIMAGgLAAIsASAHJAIMAGgLgAIsASAHjALsASAHjAFMATALpALMASAED
AYMA7gIDAaMAEAMjAYMA7gIjAVsATAJgAoMA7gJgAosASAGAAoMA7gKAAosASAGgAoMA7gKgAosA
SAHAAoMA7gLAAosASAHgAosASAEAA4sASAEgA4sASAEgA4MA7gJAA4sASAFgA4sASAFgA4MA7gJv
AIAAxgDsAP8ABAABAAUABQAGAAcACQAIAAAAQgfKAQAAEgbPAQAAKAfUAQAAtQfZAQAA/AbeAQAA
mgHjAQAAYwToAQAA9ADtAQIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQALAAIACgANAAEACwAN
AAIADgAPAAIAGgARAC4ANQA8AEMA8QAEARMBGgEEgAAAAQAAAAAAAAAAAAAAAACVAAAABAAAAAAA
AAAAAAAAKAG5AAAAAAAEAAAAAAAAAAAAAAAoAcwFAAAAAAoAAAAAAAAAAAAAADEBwgAAAAAADQAA
AAAAAAAAAAAAOgG4BAAAAAANAAAAAAAAAAAAAAA6AUUAAAAAAAAAAAABAAAAnwgAAAgABAAJAAQA
CgAHAAAAEAASAGQAAAAQAC8AZAAAAAAAMQBkAI8A+gCPAB0BAAAAQ29udGV4dFZhbHVlYDEAVGhy
ZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEAPE1vZHVsZT4AZ2V0X0NDAFN5c3RlbS5JTwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVABEaXNwb3NlX19JbnN0YW5jZV9fAENyZWF0ZV9fSW5z
dGFuY2VfXwB2YWx1ZV9fAFNUXzgzNzJlYjZhNjdiMDQzYTE4NjkyMGZlODgxNDEwMGNiAG1zY29y
bGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBBZGQAU2VuZABDcmVhdGVJbnN0YW5jZQBnZXRfR2V0
SW5zdGFuY2UAaW5zdGFuY2UAR2V0SGFzaENvZGUATWFpbE1lc3NhZ2UAVmFyaWFibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBHZXRUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAX3Jlc0N1bHR1cmUA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uQmFzZQBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmlidXRlAEhlbHBLZXl3b3Jk
QXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBDb21WaXNp
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVBdHRyaWJ1
dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5Rmls
ZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBDTFNDb21wbGlhbnRB
dHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBtX1ZhbHVlAGdldF9WYWx1
ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUASW5kZXhPZgBTeXN0ZW0uVGhyZWFkaW5nAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAQ29tcGFyZVN0cmluZwBUb1N0cmluZwBNYXRoAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2Vz
LkludGVybmFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0u
TmV0Lk1haWwAU2VuZEVNYWlsAFNUXzgzNzJlYjZhNjdiMDQzYTE4NjkyMGZlODgxNDEwMGNiLmRs
bABzZXRfSXNCb2R5SHRtbABzZXRfRW5hYmxlU3NsAGdldF9JdGVtAFN5c3RlbQBFbnVtAFN5c3Rl
bS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBs
aWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24ARmlsZUluZm8AQ3VsdHVyZUluZm8ARGly
ZWN0b3J5SW5mbwBDaGFyAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIA
bV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIARW50ZXIA
Z2V0X0NvbXB1dGVyAE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1v
bml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAGdl
dF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNh
dGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQuVmlz
dWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU1RfODM3MmViNmE2N2IwNDNhMTg2OTIwZmU4ODE0MTAwY2IuTXku
UmVzb3VyY2VzAE15UmVzb3VyY2VzAFNUXzgzNzJlYjZhNjdiMDQzYTE4NjkyMGZlODgxNDEwMGNi
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxl
cwBNeVNldHRpbmdzAHNldF9DcmVkZW50aWFscwBFcXVhbHMAUnVudGltZUhlbHBlcnMAT3BlcmF0
b3JzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABtX1N5bmNPYmplY3QAc2V0
X1N1YmplY3QATWVzc2FnZVN1YmplY3QATXlQcm9qZWN0AFN5c3RlbS5OZXQAU3BsaXQARXhpdABz
ZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AHNldF9Qb3J0AENDTGlzdABUb0xpc3QARmlsZXNFeGlz
dABJQ3JlZGVudGlhbHNCeUhvc3QAbV9Db250ZXh0AFNUXzgzNzJlYjZhNjdiMDQzYTE4NjkyMGZl
ODgxNDEwMGNiLk15AHNldF9Cb2R5AE1lc3NhZ2VCb2R5AGdldF9Bc3NlbWJseQBEaXJlY3RvcnkA
AAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAACyoA
LgBjAHMAdgAAJVMAUwBJAFMAQABvAHMAdQBnAGkAdgBpAG4AZwAuAGMAbwBtAAAVUwBWAEMAXwBT
AFEATABfAFAAVwAAA0AAACVzAG0AdABwAC4AbwBmAGYAaQBjAGUAMwA2ADUALgBjAG8AbQAAG1MA
UwBJAFMAQABvAHMAdQBmAC4AbwByAGcAABdOAGUAdwBEAGEAdABhAEYAaQBsAGUAAAVOAG8AAAdZ
AGUAcwAAK04AZQB3AEQAYQB0AGEARgBpAGwAZQBGAGkAbABlAEUAeABpAHMAdABzAAAhRgBhAGMA
dQBsAHQAeQBTAHQAYQBmAGYARABhAHQAYQAANUYAYQBjAHUAbAB0AHkAUwB0AGEAZgBmAEQAYQB0
AGEARgBpAGwAZQBFAHgAaQBzAHQAcwAAPUYAYQBjAHUAbAB0AHkAIABTAHQAYQBmAGYAIABQAHIA
bwBjAGUAcwBzAGkAbgBnACAARQByAHIAbwByAACA30EAIABuAGUAdwAgAGYAYQBjAHUAbAB0AHkA
IABzAHQAYQBmAGYAIABkAGEAdABhACAAZgBpAGwAZQAgAGgAYQBzACAAYgBlAGUAbgAgAHIAZQBj
AGkAZQB2AGUAZAAsACAAYgB1AHQAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHAAcgBvAGMAZQBzAHMA
ZQBkACAAYgBlAGMAYQB1AHMAZQAgAHQAaABlAHIAZQAgAGkAcwAgAGEAbgAgAGUAeABpAHMAdABp
AG4AZwAgAGMAcwB2ACAAZgBpAGwAZQAuAAB5PABiAHIAPgA8AGIAcgA+ADwAYgByAD4APABiAHIA
PgBFAHgAaQBzAHQAaQBuAGcAIABDAFMAVgAgAEYAaQBsAGUAIABMAG8AYwBhAHQAaQBvAG4AOgAg
ADwAYQAgAGgAcgBlAGYAPQAiAGYAaQBsAGUAOgAvAC8AAAUiAD4AAAk8AC8AYQA+AAAtYwBjAGEA
bQBlAHIAbwBuAEAAbwBzAHUAZwBpAHYAaQBuAGcALgBjAG8AbQAALWIAaABvAGYAZgBtAGEAbgBA
AG8AcwB1AGcAaQB2AGkAbgBnAC4AYwBvAG0AACdkAGYAYQBpAHIAQABvAHMAdQBnAGkAdgBpAG4A
ZwAuAGMAbwBtAAAXmvKMslloTZLK5dTZlMETAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIB
Dg4FIAEBEUUHIAQBDg4ODgYVEiQBEgwGFRIkARIIBhUSJAESZQYVEiQBEiAEIAATAAcAARJtEYCh
BSAAEoClByACAQ4SgKUEAAEcHAQAAQEcCAcDAh0SgJUIByABHRKAlQ4KBwUSgJkODh0OCAUgABKA
tQUgABKAuQYgARKAvRwDIAAcAyAADgQgAQgOBiABHQ4dAwUgABKAyQYgAQESgNUGIAEBEoCZCgcI
Dg4ODg4ODg4EIAEBHAYAAwgODgIFAAEOHQ4EIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQKAR4ABAcB
EwAGFRIkARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoI
iYRdzYCAzJEEAAAAAAQBAAAABwYVEiQBEgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiADBhJ5AwYS
fQMGEhgCBhwCBggDBhEoAwAAAQQAABIMBAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUAAQESfQQA
ABIYBCABAg4EIAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAASIAQIABJ5BAgA
En0ECAASGAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTVF84MzcyZWI2YTY3YjA0M2ExODY5MjBmZTg4MTQxMDBjYgAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDE1AAAFAQABAAApAQAkNzYxYzVkZWQtZTE0MS00Y2E1LWJjOGItZjdmZGZj
YmE0MDJkAAAMAQAHMS4wLjAuMAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0CAEAAQAAAAAAGAEACk15VGVtcGxh
dGUIMTEuMC4wLjAAAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENs
aWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEA
C015LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2Vi
U2VydmljZXMAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABQQAAAAAAAAAAAAABqQAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAXEAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADgAMwA3ADIAZQBiADYAYQA2ADcAYgAwADQAMwBhADEAOAA2ADkAMgAwAGYAZQA4ADgAMQA0ADEA
MAAwAGMAYgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AOAAzADcAMgBlAGIANgBhADYA
NwBiADAANAAzAGEAMQA4ADYAOQAyADAAZgBlADgAOAAxADQAMQAwADAAYwBiAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA4ADMANwAyAGUA
YgA2AGEANgA3AGIAMAA0ADMAYQAxADgANgA5ADIAMABmAGUAOAA4ADEANAAxADAAMABjAGIALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AOAAzADcAMgBlAGIA
NgBhADYANwBiADAANAAzAGEAMQA4ADYAOQAyADAAZgBlADgAOAAxADQAMQAwADAAYwBiAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAB8MAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{FF441DDD-1699-45A5-BC00-81B2DD733B14}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute Package Task - Run the remote package"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Execute Package Task"
          DTS:Disabled="True"
          DTS:DTSID="{C28794AE-2059-4AB9-91CF-FBC88BACBC76}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute Package Task - Run the remote package"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <Connection>{8D7E80CF-16EC-4910-BF14-C13703CE7138}</Connection>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute Process Task - Create Zip File"
          DTS:CreationName="Microsoft.ExecuteProcess"
          DTS:Description="Execute Process Task"
          DTS:Disabled="True"
          DTS:DTSID="{971DBBFB-6783-4598-9D63-B5771C2DB7D1}"
          DTS:ExecutableType="Microsoft.ExecuteProcess"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute Process Task - Create Zip File"
          DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Arguments">@[User::ZipCommand]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ExecuteProcessData
              Executable="E:\BI\Executables\7za920\7za.exe" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute SQL Task - Populate Email List Variables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{0DBA6E9E-9EAC-49CE-8716-D38AE354CCBA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - Populate Email List Variables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; Â© 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{702B745B-8EDB-45EA-8201-657547F5A20D}"
              SQLTask:SqlStatementSource="SELECT &#xA;  COALESCE([ToList] , '') AS ToList&#xA;, COALESCE([CCList] , '') AS CCList&#xA;, COALESCE([BCCList], '') AS BCCList&#xA;&#xA;FROM &#xA;  [OSUF_Static_Data].dbo.OSUF_SSISEmailNotification&#xA;&#xA;WHERE &#xA;    EmailNotificationName = 'New Faculty Staff File'"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="ToList"
                SQLTask:DtsVariableName="User::ToList" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="CCList"
                SQLTask:DtsVariableName="User::CCList" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="BCCList"
                SQLTask:DtsVariableName="User::BCCList" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Script Task - Build Zip command"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{2D2E325A-3943-4712-8714-1D6F89596B4C}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task - Build Zip command"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_2a15e0799b9a42cd8f1f996f1f9bf21f"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::FacultyStaffDataArchive,User::FacultyStaffDataFileName"
              ReadWriteVariables="ZipCommand">
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[' Microsoft SQL Server Integration Services Script Task
' Write scripts using Microsoft Visual Basic
' The ScriptMain class is the entry point of the Script Task.

Imports System
Imports System.Io
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

	' The execution engine calls this method when the task executes.
	' To access the object model, use the Dts object. Connections, variables, events,
	' and logging features are available as static members of the Dts class.
	' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
	' 
	' To open Code and Text Editor Help, press F1.
	' To open Object Browser, press Ctrl+Alt+J.



    Public Sub Main()
        '
        ' Add your code here
        '

        'Variables
        Dim FolderToBeZipped As String = Dts.Variables("FacultyStaffDataArchive").Value.ToString + Dts.Variables("FacultyStaffDataFileName").Value.ToString
        Dim ZippedFileOutputPath As String = Dts.Variables("FacultyStaffDataArchive").Value.ToString
        Dim ZippedFolderFileName As String = ZippedFileOutputPath + Dts.Variables("FacultyStaffDataFileName").Value.ToString.Replace(".csv", ".zip")



        'Delete the existing zip file if it exists
        If System.IO.File.Exists(ZippedFolderFileName) = True Then
            System.IO.File.Delete(ZippedFolderFileName)
        End If

        'there can not be a trailing backslash, this code removes it.
        If Right(FolderToBeZipped, 1) = "\" Then
            FolderToBeZipped = Left(FolderToBeZipped, FolderToBeZipped.Length - 1)
        End If

        'Create the Zip File Command
        Dts.Variables("ZipCommand").Value = " a -tzip """ & ZippedFolderFileName & """ """ & FolderToBeZipped & """"


        Dts.TaskResult = ScriptResults.Success
    End Sub

End Class]]></ProjectItem>
              <ProjectItem
                Name="ST_2a15e0799b9a42cd8f1f996f1f9bf21f.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B52390E1-4C2F-47FB-8A66-A73D5675D2E0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ScriptTask_825d4bf4048c4e84b222d4971b2bd6bf</RootNamespace>
    <AssemblyName>ST_2a15e0799b9a42cd8f1f996f1f9bf21f</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebuge2a5200a-8b31-449a-a4a3-a387b2652ad4/1f40dc60-eb97-4a7c-870e-4509c8506236&quot;" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <ItemGroup>
    <Compile Include="ScriptMain.vb" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="My Project\" />
  </ItemGroup>
  <PropertyGroup>
    <OptionCompare>Binary</OptionCompare>
  </PropertyGroup>
  <PropertyGroup>
    <OptionExplicit>On</OptionExplicit>
  </PropertyGroup>
  <PropertyGroup>
    <OptionStrict>On</OptionStrict>
  </PropertyGroup>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{B55112AA-F6A4-4338-BB10-F195D59ADD14}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ScriptTask_825d4bf4048c4e84b222d4971b2bd6bf</msb:CodeName>
		<msb:DisplayName>ScriptTask_825d4bf4048c4e84b222d4971b2bd6bf</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Folder Include="My Project\"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:Project Include="ST_2a15e0799b9a42cd8f1f996f1f9bf21f.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_2a15e0799b9a42cd8f1f996f1f9bf21f.dll">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
AQCiIAAAAAATCD0FRgEBAK4gAAAAABMIpgVLAQEAuiAAAAAABhhoBQYAAQDEIAAAAAAGAKAEBgAB
AOohAAAAAMYCeQajAAEA+CEAAAAAxgLdAI8AAgAAIgAAAACDADsBUAECAAwiAAAAAMYCjQNoAAIA
FCIAAAAAEQBzAFUBAgA0IgAAAAABAF8AXQEDAD0iAAAAAAYYaAUGAAQASCIAAAAAAwjEAEoABAB8
IgAAAAAGGGgFBgAEAAAAAQDDBAAAAQDUAAAAAQDUAAkAaAUBABEAaAUGABkAaAUKACkAaAUQADEA
aAUVAEEAaAUbAFkAaAUGAGEAaAUGAGkAaAUGAIEAaAUhAJEAaAUpAKEAaAUQAKkAaAUGALEAaAUp
AEkAaAUGAFEAaAUGAAwAaAUGABQAaAUGABwAaAUGACQAaAUGAAwAxABKABQAxABKABwAxABKACQA
xABKALkAaAUGALkAoQZUANEAYwZZANkAaAReAOEA8gJkAHEAjQNoAOkAvgZsAOkArQByAPEAtwZ4
APEAjAF9APkA2waCAAEBfwOIAOkAmwOPAPkA1gaCAOkAvgaTAOEA/AKZANEA4QYBAAkBBgOeAHEA
eQajAHEA3QCPAIkABAGoABkBtQC4AHEAaAUGADQA8AbPADwA8gJKADwA/ALmADwAaAUGAAgAHAAH
AQgAIAAMASkAYwCBAi4ACwB+AS4AEwCHAS4AGwCmAS4AIwCvAUAAOwAMAUAAMwD3AUMAKwAAAkMA
MwD3AUkAYwCSAmMAKwAAAmMAMwD3AWkAYwCmAoAAOwAMAYMAQwAMAYMASwAMAYMAKwAAAokAYwCz
AqAAOwAMAaMAawAMAaMAcwAZAsAAOwAMAcMAMwD3AcMAUwAfAuAAOwAMAeMAMwD3AeMAWwAZAkAB
MwD3AUABOwAMAWABMwD3AWABOwAMAYABMwD3AYABOwAMAaABMwD3AaABOwAMAcABOwAMAeABOwAM
AQACOwAMAQACMwD3ASACOwAMAUACOwAMAUACMwD3AU8AsADDAAQAAQAHAAUAAABVBWUBAAC3BGoB
AABBBW8BAAC4BXQBAADIAHkBAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgARAAsALgA1ADwAQwC1
AMgA1wDeAASAAAAAAAAAAAAAAAAAAAAAABUDAAAEAAAAAAAAAAAAAADsAI4AAAAAAAQAAAAAAAAA
AAAAAOwAcQQAAAAACgAAAAAAAAAAAAAA9QCXAAAAAAANAAAAAAAAAAAAAAD+AKYDAAAAAA0AAAAA
AAAAAAAAAP4APgAAAAAABgAEAAcABAAIAAUAAAAQAA4AXQAAABAAHQBdAAAAAAAfAF0AXQC+AF0A
4QAAAAAAAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxADxNb2R1bGU+
AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVABEaXNwb3NlX19JbnN0
YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwB2YWx1ZV9fAG1zY29ybGliAE1pY3Jvc29mdC5WaXN1
YWxCYXNpYwBSZXBsYWNlAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBH
ZXRIYXNoQ29kZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBG
aWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAR2V0VHlwZQBGYWlsdXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvbkJhc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUARGVsZXRlAEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJp
YnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUATXlHcm91cENvbGxl
Y3Rpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBDTFNDb21wbGlh
bnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUAU1Rf
MmExNWUwNzk5YjlhNDJjZDhmMWY5OTZmMWY5YmYyMWYAU2NyaXB0VGFza184MjVkNGJmNDA0OGM0
ZTg0YjIyMmQ0OTcxYjJiZDZiZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAENvbXBhcmVTdHJp
bmcAVG9TdHJpbmcATWF0aABnZXRfTGVuZ3RoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFz
awBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE1pY3Jvc29mdC5WaXN1
YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTVF8yYTE1ZTA3OTliOWE0MmNkOGYxZjk5NmYxZjliZjIxZi5kbGwAZ2V0X0l0
ZW0AU3lzdGVtAEVudW0AU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2lnbgBTY3JpcHRNYWluAGdl
dF9BcHBsaWNhdGlvbgBNeUFwcGxpY2F0aW9uAG8AbV9BcHBPYmplY3RQcm92aWRlcgBtX1VzZXJP
YmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2VzT2Jq
ZWN0UHJvdmlkZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIAZ2V0X0NvbXB1dGVy
AE15Q29tcHV0ZXIAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MATWlj
cm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAZ2V0X1dlYlNlcnZpY2VzAE15V2ViU2VydmljZXMA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUu
SW50ZXJvcFNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMARGVidWdnaW5nTW9kZXMAZ2V0X1ZhcmlhYmxl
cwBTdHJpbmdzAEVxdWFscwBSdW50aW1lSGVscGVycwBPcGVyYXRvcnMAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMARXhpc3RzAENvbmNhdABPYmplY3QATXlQcm9qZWN0AExlZnQAUmlnaHQA
c2V0X1Rhc2tSZXN1bHQAbV9Db250ZXh0AFNjcmlwdFRhc2tfODI1ZDRiZjQwNDhjNGU4NGIyMjJk
NDk3MWIyYmQ2YmYuTXkAAAAAAC9GAGEAYwB1AGwAdAB5AFMAdABhAGYAZgBEAGEAdABhAEEAcgBj
AGgAaQB2AGUAADFGAGEAYwB1AGwAdAB5AFMAdABhAGYAZgBEAGEAdABhAEYAaQBsAGUATgBhAG0A
ZQAACS4AYwBzAHYAAAkuAHoAaQBwAAADXAAAFVoAaQBwAEMAbwBtAG0AYQBuAGQAABUgAGEAIAAt
AHQAegBpAHAAIAAiAAEHIgAgACIAAAMiAAAAcG1fHwT+c0+xkf29Lnp3jAAEIAEBCAMgAAEFIAEB
EREEIAEBDgUgAgEODgUgAQERHQcgBAEODg4OBCABAQIGFRIcARIMBhUSHAESCAYVEhwBEj0GFRIc
ARIYBCAAEwAEBwIODgQgABJpBCAAEm0FIAEScRwDIAAcAyAADgUAAg4ODgUgAg4ODgQAAQIOBAAB
AQ4FAAIODggGAAMIDg4CAyAACAUAAQ4dDgQgAQEcBAABHBwEIAECHAcAARJFEYCJBAcBHgACHgAF
EAEAHgAECgEeAAQHARMABhUSHAETAAcGFRJNARMABhUSTQETAAITAAQKARMABSABARMACLd6XFYZ
NOCJCLA/X38R1Qo6CImEXc2AgMyRBAAAAAAEAQAAAAcGFRIcARIMBwYVEhwBEggHBhUSHAESPQcG
FRIcARIYAgYIAwYRIAMAAAEEAAASDAQAABIIBAAAEj0EAAASGAQgABJFBxABAR4AHgAHMAEBARAe
AAQIABIMBAgAEggECAASPQQIABIYBCgAEwAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0CAEAAQAAAAAAGAEACk15VGVtcGxhdGUI
MTEuMC4wLjAAAAUBAAAAAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0
cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAA
EAEAC015LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXku
V2ViU2VydmljZXMAAAAINAAAAAAAAAAAAAAiNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDQA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALQCAAAAAAAAAAAAALQCNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQUAgAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADwAQAAAQAwADAAMAAw
ADAANABiADAAAAAsAAIAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAIAAAADAA
CAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMAAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0
AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMgBhADEANQBlADAANwA5ADkAYgA5AGEANAAyAGMA
ZAA4AGYAMQBmADkAOQA2AGYAMQBmADkAYgBmADIAMQBmAC4AZABsAGwAAAAoAAIAAQBMAGUAZwBh
AGwAQwBvAHAAeQByAGkAZwBoAHQAAAAgAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADIAYQAxADUAZQAwADcAOQA5AGIAOQBhADQAMgBjAGQAOABmADEAZgA5
ADkANgBmADEAZgA5AGIAZgAyADEAZgAuAGQAbABsAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUA
cgBzAGkAbwBuAAAAMAAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAwAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAANDQAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Script Task - Delete file from folder"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{917088D4-0F0C-4E16-AC98-E160F12FE64A}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task - Delete file from folder"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_3d2828541bba40af88dac3b7ec717976"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::FacultyStaffDataFileName,User::NewDataFile">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_3d2828541bba40af88dac3b7ec717976")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_3d2828541bba40af88dac3b7ec717976")> 
<Assembly: AssemblyCopyright("Copyright @  2015")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("b40f63e0-4d85-4596-bf9a-094897cc2b8f")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        '
        Dim NewDataFileFileName As String = Dts.Variables("NewDataFile").Value.ToString + Dts.Variables("FacultyStaffDataFileName").Value.ToString

        If System.IO.File.Exists(NewDataFileFileName) = True Then
            System.IO.File.Delete(NewDataFileFileName)
        End If


        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_3d2828541bba40af88dac3b7ec717976</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_3d2828541bba40af88dac3b7ec717976</msb:DisplayName>
		<msb:ProjectId>{A60A73BD-3E83-479C-9D31-FC67244F0912}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_3d2828541bba40af88dac3b7ec717976.vbproj"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_3d2828541bba40af88dac3b7ec717976.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C7D37F48-FC23-4391-8E7F-7BD3336D5CA0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_3d2828541bba40af88dac3b7ec717976</RootNamespace>
    <AssemblyName>ST_3d2828541bba40af88dac3b7ec717976</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugd76c0c00-df71-4670-bdf0-2a5621058930/4d1efc33-215a-48f0-8f4a-a1f2ea8a979e&quot;" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_3d2828541bba40af88dac3b7ec717976.dll">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
OQYgAREAqgYoAREAfwEsAREALgQwAREAoAg0ASEAywjGAAYGqgA3AVaAdAg6AVaAXwE6AVAgAAAA
AAYYvAYGAAEAWCAAAAAABhi8BgYAAQBgIAAAAAARGMIGPgEBAIogAAAAABMIkgZCAQEAliAAAAAA
EwiRBUcBAQCiIAAAAAATCIMGTAEBAK4gAAAAABMIAgdRAQEAuiAAAAAAAxi8BgYAAQDCIAAAAAAW
CFcGVgEBAO4gAAAAABYIZwFbAQEA9SAAAAAAFghzAWABAQD9IAAAAAARGMIGPgECAA4hAAAAAAYY
vAYGAAIAGCEAAAAAFgg2BGYBAgB0IQAAAAAGGLwGBgACAHwhAAAAAAYAjAUGAAIA5yEAAAAAxgJe
CJ4AAgD1IQAAAADGAvkAowADAP0hAAAAAIMAVwFrAQMACSIAAAAAxgKEBIoAAwAUIgAAAAARAJcA
cAEDADQiAAAAAAEAgwB4AQQAuiAAAAAABhi8BgYABQBAIgAAAAADCOAASgAFAHQiAAAAAAYYvAYG
AAUAAAABAFMEAAABAPUFAAABAPAAAAABAPAACQC8BgEAEQC8BgYAGQC8BgoAKQC8BhAAMQC8BhAA
OQC8BhAAQQC8BhAASQC8BhAAUQC8BhAAWQC8BhUAYQC8BhUAaQC8BhAAcQC8BhAAeQC8BhAAgQC8
BhoAkQC8BiAAqQC8BgYAsQC8BgYAuQC8BgYA0QC8BiYA6QC8BhAACQG8BgYAEQG8BgYAmQC8BgYA
oQC8BgYADAC8BgYAFAC8BgYAHAC8BgYAJAC8BgYADADgAEoAFADgAEoAHADgAEoAJADgAEoAwQC8
BgYA2QAgAU8A2QD8CFcA8QC8Bl0AQQFKBGUAAQG8BgYASQGMBmoASQG3CGoAGQG8BgYAGQF8CHMA
UQFFCHkAWQFUBX8AYQE2BIYAwQCEBIoAaQGZCI4AcQGSCJQAcQHkAZkAUQG8CAEAwQBeCJ4AwQD5
AKMAeQHRAK8ANADLCMYAPAA2BEoAPABABN0APAC8BgYACAAsAP4ACAAwAAMBKQCrACgDLgALAKgB
LgATALEBLgAbANABLgAjANkBLgArAAICLgAzAAICLgA7ANkBLgBDAAgCLgBLAAICLgBTAB8CLgBb
AAICLgBjACUCLgBrAE8CLgBzAFwCQACLAAMBQACDAKQCQwB7AK0CQwCDAKQCSQCrADkDYwB7AK0C
YwCDAKQCaQCrAE0DgACLAAMBgwCTAAMBgwCbAAMBgwB7AK0CiQCrAFoDoACLAAMBqQCDANABwACL
AAMByQCDANAB4ACLAAMB4wC7AAMB4wBTAAIC6QCzAAMBAwGDAKQCAwGjAMYCIwGDAKQCIwFbAAIC
IAKDAKQCIAKLAAMBQAKDAKQCQAKLAAMBYAKDAKQCYAKLAAMBgAKDAKQCgAKLAAMBoAKLAAMBwAKL
AAMB4AKLAAMB4AKDAKQCAAOLAAMBIAOLAAMBIAODAKQCbwCnALoABAABAAUABQAGAAcACQAIAAAA
oQaAAQAAowWFAQAAhwaKAQAAFAePAQAAWwaUAQAAgwGZAQAAUwSeAQAA5ACjAQIABAADAAIABQAF
AAIABgAHAAIABwAJAAIACQALAAIACgANAAEACwANAAIADgAPAAIAGAARAC4ANQA8AEMArAC/AM4A
1QAEgAAAAQAAAAAAAAAAAAAAAAArAAAABAAAAAAAAAAAAAAA4wCyAAAAAAAEAAAAAAAAAAAAAADj
AF0FAAAAAAoAAAAAAAAAAAAAAOwAuwAAAAAADQAAAAAAAAAAAAAA9QCSBAAAAAANAAAAAAAAAAAA
AAD1AGIAAAAAAAAAAAABAAAA/gcAAAgABAAJAAQACgAHAAAAEAASAIEAAAAQACsAgQAAAAAALQCB
AG0AtQBtANgAAAAAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEAU1Rf
M2QyODI4NTQxYmJhNDBhZjg4ZGFjM2I3ZWM3MTc5NzYAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBUAERpc3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19J
bnN0YW5jZV9fAHZhbHVlX18AbXNjb3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAENyZWF0ZUlu
c3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBWYXJpYWJsZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUAR2V0VHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXND
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvbkJhc2UAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUARGVsZXRlAEd1aWRBdHRyaWJ1
dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTdGFuZGFy
ZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1
dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG1f
VmFsdWUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBTeXN0ZW0uVGhyZWFkaW5n
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWF0aABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfM2QyODI4NTQxYmJhNDBhZjg4ZGFjM2I3ZWM3MTc5
NzYuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24A
U2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBt
X0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQ
cm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAGdldF9Vc2VyAEVudGVyAGdldF9Db21wdXRlcgBNeUNv
bXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlX
ZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0
ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNUXzNkMjgyODU0MWJiYTQwYWY4OGRhYzNiN2VjNzE3OTc2Lk15LlJlc291cmNlcwBNeVJlc291
cmNlcwBTVF8zZDI4Mjg1NDFiYmE0MGFmODhkYWMzYjdlYzcxNzk3Ni5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMATXlTZXR0aW5ncwBFcXVhbHMAUnVudGlt
ZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMARXhpc3RzAENvbmNhdABtX1N5
bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rhc2tSZXN1bHQAbV9Db250ZXh0AFNUXzNkMjgy
ODU0MWJiYTQwYWY4OGRhYzNiN2VjNzE3OTc2Lk15AGdldF9Bc3NlbWJseQAAAAAAMU0AeQAuAFIA
ZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAXTgBlAHcARABhAHQAYQBG
AGkAbABlAAAxRgBhAGMAdQBsAHQAeQBTAHQAYQBmAGYARABhAHQAYQBGAGkAbABlAE4AYQBtAGUA
AAAAANrSmlWoEhhKq4HwLPw2hT4ABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQER
RQcgBAEODg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgJkFIAASgJ0H
IAIBDhKAnQQAARwcBAABARwDBwEOBSAAEoCpBSAAEoCtBiABEoCxHAMgABwDIAAOBQACDg4OBAAB
Ag4EAAEBDgQgAQIcAyAACAQHAR4AAh4ABRABAB4ABAoBHgAEBwETAAYVEiQBEwAHBhUScQETAAYV
EnEBEwACEwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/EdUKOgiJhF3NgIDMkQQAAAAABAEAAAAH
BhUSJAESDAcGFRIkARIIBwYVEiQBEmUHBhUSJAESIAMGEnkDBhJ9AwYSGAIGHAIGCAMGESgDAAAB
BAAAEgwEAAASCAQAABJlBAAAEiAEAAASeQQAABJ9BQABARJ9BAAAEhgEIAASbQcQAQEeAB4ABzAB
AQEQHgAECAASDAQIABIIBAgAEmUECAASIAQIABJ5BAgAEn0ECAASGAQoABMACAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8zZDI4Mjg1NDFiYmE0
MGFmODhkYWMzYjdlYzcxNzk3NgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE1AAAFAQABAAAp
AQAkYjQwZjYzZTAtNGQ4NS00NTk2LWJmOWEtMDk0ODk3Y2MyYjhmAAAMAQAHMS4wLjAuMAAARwEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVU
IEZyYW1ld29yayA0CAEAAQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4wLjAAAGEBADRTeXN0ZW0u
V2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5z
dGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1dGVyAAATAQAOTXkuQXBw
bGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMAAAAAtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AKg4AAAAAAAAAAAAAMI4AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0OAAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwAzAGQAMgA4ADIAOAA1ADQAMQBiAGIAYQA0ADAAYQBmADgAOABkAGEAYwAzAGIANwBlAGMA
NwAxADcAOQA3ADYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADMAZAAyADgAMgA4ADUA
NAAxAGIAYgBhADQAMABhAGYAOAA4AGQAYQBjADMAYgA3AGUAYwA3ADEANwA5ADcANgAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AMwBkADIA
OAAyADgANQA0ADEAYgBiAGEANAAwAGEAZgA4ADgAZABhAGMAMwBiADcAZQBjADcAMQA3ADkANwA2
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADMAZAAyADgA
MgA4ADUANAAxAGIAYgBhADQAMABhAGYAOAA4AGQAYQBjADMAYgA3AGUAYwA3ADEANwA5ADcANgAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA1DgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Script Task - Delete the file that was zipped up"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{E05B05B4-C016-4768-8C90-07B00C07A023}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task - Delete the file that was zipped up"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_6a6cfbab876243598f591a34057509ff"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::FacultyStaffDataArchive,User::FacultyStaffDataFileName">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_6a6cfbab876243598f591a34057509ff")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_6a6cfbab876243598f591a34057509ff")> 
<Assembly: AssemblyCopyright("Copyright @  2015")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("08c97b45-8a12-488c-9c96-6971c1fee548")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        '
        Dim ArchiveFileName As String = Dts.Variables("FacultyStaffDataArchive").Value.ToString + Dts.Variables("FacultyStaffDataFileName").Value.ToString

        If System.IO.File.Exists(ArchiveFileName) = True Then
            System.IO.File.Delete(ArchiveFileName)
        End If


        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_6a6cfbab876243598f591a34057509ff</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_6a6cfbab876243598f591a34057509ff</msb:DisplayName>
		<msb:ProjectId>{F01FFBFC-75E6-4758-9D8A-947D49D3F041}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_6a6cfbab876243598f591a34057509ff.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_6a6cfbab876243598f591a34057509ff.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{51FD3EB8-2F17-43A0-9FB8-2BD8734C9D8F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_6a6cfbab876243598f591a34057509ff</RootNamespace>
    <AssemblyName>ST_6a6cfbab876243598f591a34057509ff</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug3267977a-43d5-4efe-89e5-b603786f8e20/905eaf72-0d3b-42fa-a69a-4a18ad89749d&quot;" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_6a6cfbab876243598f591a34057509ff.dll">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
OQYgAREAqgYoAREAWwEsAREACgQwAREAoAg0ASEAywjGAAYGhgA3AVaAdAg6AVaAOwE6AVAgAAAA
AAYYvAYGAAEAWCAAAAAABhi8BgYAAQBgIAAAAAARGMIGPgEBAIogAAAAABMIkgZCAQEAliAAAAAA
EwiRBUcBAQCiIAAAAAATCIMGTAEBAK4gAAAAABMIAgdRAQEAuiAAAAAAAxi8BgYAAQDCIAAAAAAW
CFcGVgEBAO4gAAAAABYIQwFbAQEA9SAAAAAAFghPAWABAQD9IAAAAAARGMIGPgECAA4hAAAAAAYY
vAYGAAIAGCEAAAAAFggSBGYBAgB0IQAAAAAGGLwGBgACAHwhAAAAAAYAjAUGAAIA5yEAAAAAxgJe
CJ4AAgD1IQAAAADGAtUAowADAP0hAAAAAIMAMwFrAQMACSIAAAAAxgKEBIoAAwAUIgAAAAARAHMA
cAEDADQiAAAAAAEAXwB4AQQAuiAAAAAABhi8BgYABQBAIgAAAAADCLwASgAFAHQiAAAAAAYYvAYG
AAUAAAABAC8EAAABAPUFAAABAMwAAAABAMwACQC8BgEAEQC8BgYAGQC8BgoAKQC8BhAAMQC8BhAA
OQC8BhAAQQC8BhAASQC8BhAAUQC8BhAAWQC8BhUAYQC8BhUAaQC8BhAAcQC8BhAAeQC8BhAAgQC8
BhoAkQC8BiAAqQC8BgYAsQC8BgYAuQC8BgYA0QC8BiYA6QC8BhAACQG8BgYAEQG8BgYAmQC8BgYA
oQC8BgYADAC8BgYAFAC8BgYAHAC8BgYAJAC8BgYADAC8AEoAFAC8AEoAHAC8AEoAJAC8AEoAwQC8
BgYA2QD8AE8A2QD8CFcA8QC8Bl0AQQEmBGUAAQG8BgYASQGMBmoASQG3CGoAGQG8BgYAGQF8CHMA
UQFFCHkAWQFUBX8AYQESBIYAwQCEBIoAaQGZCI4AcQGSCJQAcQHAAZkAUQG8CAEAwQBeCJ4AwQDV
AKMAeQGtAK8ANADLCMYAPAASBEoAPAAcBN0APAC8BgYACAAsAP4ACAAwAAMBKQCrACgDLgALAKgB
LgATALEBLgAbANABLgAjANkBLgArAAICLgAzAAICLgA7ANkBLgBDAAgCLgBLAAICLgBTAB8CLgBb
AAICLgBjACUCLgBrAE8CLgBzAFwCQACLAAMBQACDAKQCQwB7AK0CQwCDAKQCSQCrADkDYwB7AK0C
YwCDAKQCaQCrAE0DgACLAAMBgwCTAAMBgwCbAAMBgwB7AK0CiQCrAFoDoACLAAMBqQCDANABwACL
AAMByQCDANAB4ACLAAMB4wC7AAMB4wBTAAIC6QCzAAMBAwGDAKQCAwGjAMYCIwGDAKQCIwFbAAIC
IAKDAKQCIAKLAAMBQAKDAKQCQAKLAAMBYAKDAKQCYAKLAAMBgAKDAKQCgAKLAAMBoAKLAAMBwAKL
AAMB4AKLAAMB4AKDAKQCAAOLAAMBIAOLAAMBIAODAKQCbwCnALoABAABAAUABQAGAAcACQAIAAAA
oQaAAQAAowWFAQAAhwaKAQAAFAePAQAAWwaUAQAAXwGZAQAALwSeAQAAwACjAQIABAADAAIABQAF
AAIABgAHAAIABwAJAAIACQALAAIACgANAAEACwANAAIADgAPAAIAGAARAC4ANQA8AEMArAC/AM4A
1QAEgAAAAQAAAAAAAAAAAAAAAAA1BAAABAAAAAAAAAAAAAAA4wCOAAAAAAAEAAAAAAAAAAAAAADj
AF0FAAAAAAoAAAAAAAAAAAAAAOwAlwAAAAAADQAAAAAAAAAAAAAA9QCSBAAAAAANAAAAAAAAAAAA
AAD1AD4AAAAAAAAAAAABAAAA/gcAAAgABAAJAAQACgAHAAAAEAASAF0AAAAQACsAXQAAAAAALQBd
AG0AtQBtANgAAAAAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEAPE1v
ZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBUAERpc3Bvc2Vf
X0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAHZhbHVlX18AbXNjb3JsaWIATWljcm9zb2Z0
LlZpc3VhbEJhc2ljAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRI
YXNoQ29kZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxl
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAR2V0VHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBB
cHBsaWNhdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUARGVsZXRlAEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJhdGVkQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
RGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBNeUdy
b3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAG1fVmFsdWUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RW
YWx1ZQBTVF82YTZjZmJhYjg3NjI0MzU5OGY1OTFhMzQwNTc1MDlmZgBTeXN0ZW0uVGhyZWFkaW5n
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWF0aABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNmE2Y2ZiYWI4NzYyNDM1OThmNTkxYTM0MDU3NTA5
ZmYuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24A
U2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBt
X0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQ
cm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAGdldF9Vc2VyAEVudGVyAGdldF9Db21wdXRlcgBNeUNv
bXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlX
ZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0
ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNUXzZhNmNmYmFiODc2MjQzNTk4ZjU5MWEzNDA1NzUwOWZmLk15LlJlc291cmNlcwBNeVJlc291
cmNlcwBTVF82YTZjZmJhYjg3NjI0MzU5OGY1OTFhMzQwNTc1MDlmZi5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMATXlTZXR0aW5ncwBFcXVhbHMAUnVudGlt
ZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMARXhpc3RzAENvbmNhdABtX1N5
bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rhc2tSZXN1bHQAbV9Db250ZXh0AFNUXzZhNmNm
YmFiODc2MjQzNTk4ZjU5MWEzNDA1NzUwOWZmLk15AGdldF9Bc3NlbWJseQAAAAAAMU0AeQAuAFIA
ZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAvRgBhAGMAdQBsAHQAeQBT
AHQAYQBmAGYARABhAHQAYQBBAHIAYwBoAGkAdgBlAAAxRgBhAGMAdQBsAHQAeQBTAHQAYQBmAGYA
RABhAHQAYQBGAGkAbABlAE4AYQBtAGUAAAAAAOorDUDlsgxKliB2ICx4cHAABCABAQgDIAABBSAB
ARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEODg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUS
JAESIAQgABMABwABEm0RgJkFIAASgJ0HIAIBDhKAnQQAARwcBAABARwDBwEOBSAAEoCpBSAAEoCt
BiABEoCxHAMgABwDIAAOBQACDg4OBAABAg4EAAEBDgQgAQIcAyAACAQHAR4AAh4ABRABAB4ABAoB
HgAEBwETAAYVEiQBEwAHBhUScQETAAYVEnEBEwACEwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/
EdUKOgiJhF3NgIDMkQQAAAAABAEAAAAHBhUSJAESDAcGFRIkARIIBwYVEiQBEmUHBhUSJAESIAMG
EnkDBhJ9AwYSGAIGHAIGCAMGESgDAAABBAAAEgwEAAASCAQAABJlBAAAEiAEAAASeQQAABJ9BQAB
ARJ9BAAAEhgEIAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAASIAQIABJ5BAgA
En0ECAASGAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTVF82YTZjZmJhYjg3NjI0MzU5OGY1OTFhMzQwNTc1MDlmZgAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDE1AAAFAQABAAApAQAkMDhjOTdiNDUtOGExMi00ODhjLTljOTYtNjk3MWMx
ZmVlNTQ4AAAMAQAHMS4wLjAuMAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0CAEAAQAAAAAAGAEACk15VGVtcGxh
dGUIMTEuMC4wLjAAAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENs
aWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEA
C015LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2Vi
U2VydmljZXMAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMA4AAAAAAAAAAAAANo4AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADMOAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwA2AGEANgBjAGYAYgBhAGIAOAA3ADYAMgA0ADMANQA5ADgAZgA1ADkAMQBhADMANAAwADUA
NwA1ADAAOQBmAGYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADYAYQA2AGMAZgBiAGEA
YgA4ADcANgAyADQAMwA1ADkAOABmADUAOQAxAGEAMwA0ADAANQA3ADUAMAA5AGYAZgAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANgBhADYA
YwBmAGIAYQBiADgANwA2ADIANAAzADUAOQA4AGYANQA5ADEAYQAzADQAMAA1ADcANQAwADkAZgBm
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADYAYQA2AGMA
ZgBiAGEAYgA4ADcANgAyADQAMwA1ADkAOABmADUAOQAxAGEAMwA0ADAANQA3ADUAMAA5AGYAZgAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA7DgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Script Task - Scan Directory  - FacultyStaffData"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{97559194-014A-4D73-9BB5-2CD4ADBA5A44}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task - Scan Directory  - FacultyStaffData"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_7a05a0903bf94b278880928133501cba"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::SF_FacultyStaff_Dir,User::SF_FacultyStaff_genericFilename"
              ReadWriteVariables="User::FacultyStaffDataFileName">
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.IO
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.



    Public Sub Main()
        ' Add your code here

        '

        Dim NewDataFile As String = Dts.Variables("SF_FacultyStaff_genericFilename").Value.ToString
        Dim SnowflakeFileDirectory As String = Dts.Variables("SF_FacutlyStaff_Dir").Value.ToString

        Dim ZippedFileOutputPath As String = Dts.Variables("SF_FacultyStaff_Dir").Value.ToString
        Dim FileToBeZipped As String
        Dim ZippedFolderFileName As String


        'Get filename of new data file with a datestamp
        Dim FileName As String = ""
        Dim SourceDir As New DirectoryInfo(SnowflakeFileDirectory) 'Ex: C:\SomeFolder
        For Each ff As FileInfo In SourceDir.GetFiles("*.csv")
            FileName = ff.Name
        Next

        'Delete Existing File with genericFilename
        If System.IO.File.Exists(SnowflakeFileDirectory + NewDataFile) Then
            System.IO.File.Delete(SnowflakeFileDirectory + NewDataFile)
        End If

        'Copy file with datestamp to genericFilename
        System.IO.File.Copy(SnowflakeFileDirectory + FileName, SnowflakeFileDirectory + NewDataFile)



        'Create Zip Command

        FileToBeZipped = Dts.Variables("SF_FacultyStaff_Dir").Value.ToString + Dts.Variables(FileName).Value.ToString
        ZippedFolderFileName = ZippedFileOutputPath + Dts.Variables(FileName).Value.ToString.Replace(".csv", ".zip")

        'Delete the existing zip of file with datestamp, if it exists
        If System.IO.File.Exists(ZippedFolderFileName) = True Then
            System.IO.File.Delete(ZippedFolderFileName)
        End If

        'there can not be a trailing backslash, this code removes it.
        If Right(FileToBeZipped, 1) = "\" Then
            FileToBeZipped = Left(FileToBeZipped, FileToBeZipped.Length - 1)
        End If

        'Set the Zip File Command
        Dts.Variables("ZipCommand").Value = " a -tzip """ & ZippedFolderFileName & """ """ & FileToBeZipped & """"















        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_c0b54bfaca0c4b2991d2c7c292da9c10")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_c0b54bfaca0c4b2991d2c7c292da9c10")> 
<Assembly: AssemblyCopyright("Copyright @  2013")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("c393606f-d310-4883-9277-24d128e33b2d")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_7a05a0903bf94b278880928133501cba</msb:CodeName>
		<msb:DisplayName>ST_7a05a0903bf94b278880928133501cba</msb:DisplayName>
		<msb:ProjectId>{D4B434B8-1C0F-4CD0-A42F-3E4F3634C456}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7a05a0903bf94b278880928133501cba.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_7a05a0903bf94b278880928133501cba.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3B2E9DDD-ACF9-48CE-9156-19B5E78DD0F5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_c0b54bfaca0c4b2991d2c7c292da9c10</RootNamespace>
    <AssemblyName>ST_7a05a0903bf94b278880928133501cba</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_7a05a0903bf94b278880928133501cba.dll">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
CgBDAtAGCgAEAmQFCgCLAmQFDgDcAYUHDgAGB0kHBgAzAzYHDgDPAs4HDgDnAt8ABgAmCasFDgDs
BoUHDgBoA98ABgCPAasFDgAlACgFCgAuArcFBgDABhUIBgBCBhIGCgDsAf0FBgBaAjYHEgAKBP8E
EgDAAf8EBgDQBKsFBgA5BlgABgCyBasFBgA6AasFBgCLCScGBgDbCPUHBgAuB44EEgBSBf8EFgCu
CGwBFgAxAWwBBgBOBlgABgDJBKsFBgBeAVgADgDBCN8ADgDqCM4HBgAXB6sFAAAAAE8AAAAAAAEA
AQAAAAAA7wVgCU0AAQABAAAAAAAEB2AJUQABAAIAAAEQAC0JYAlhAAEAAwAAAAAAVwgmCGEABQAI
AAABEADJCAEAgQAHAAwAAQAAANQFAQCNAAkADwAFAQAAdwcAAGEACQARAAUBAAA0AAAAYQAJABgA
AgEAAAQJAACZAAoAGgAxAIUGPgExAFwGRgExAHAGTgExAJ4GVgERAA8HXgERALQBYgERAGMEZgER
ACAJagEhAFYJ/AAGBqoAbQFWgPQIcAFWgJQBcAFQIAAAAAAGGCEHBgABAFggAAAAAAYYIQcGAAEA
YCAAAAAAERgnB3QBAQCKIAAAAAATCPcGeAEBAJYgAAAAABMI3wV9AQEAoiAAAAAAEwjoBoIBAQCu
IAAAAAATCGcHhwEBALogAAAAAAMYIQcGAAEAwiAAAAAAFgi8BowBAQDuIAAAAAAWCJwBkQEBAPUg
AAAAABYIqAGWAQEA/SAAAAAAERgnB3QBAgAOIQAAAAAGGCEHBgACABghAAAAABYIawScAQIAdCEA
AAAABhghBwYAAgB8IQAAAAAGANoFBgACAEgjAAAAAMYC1AjYAAIAViMAAAAAxgIlAckAAwBeIwAA
AACDAIwBoQEDAGojAAAAAMYCxwSUAAMAdCMAAAAAEQCXAKYBAwCUIwAAAAABAIMArgEEALogAAAA
AAYYIQcGAAUAoCMAAAAAAwgMAUoABQDUIwAAAAAGGCEHBgAFAAAAAQCIBAAAAQBaBgAAAQAcAQAA
AQAcAQkAIQcBABEAIQcGABkAIQcKACkAIQcQADEAIQcQADkAIQcQAEEAIQcQAEkAIQcQAFEAIQcQ
AFkAIQcVAGEAIQcVAGkAIQcQAHEAIQcQAHkAIQcQAIEAIQcaAJEAIQcgAKkAIQcGALEAIQcGALkA
IQcGANEAIQcmAOkAIQcQAAkBIQcGABEBIQcGAJkAIQcGAKEAIQcGAAwAIQcGABQAIQcGABwAIQcG
ACQAIQcGAAwADAFKABQADAFKABwADAFKACQADAFKAMEAIQcGANkATAFPANkAhwlXAPEAIQddAEkB
fwRlAAEBIQcGAFEB8QZqAFEBQglqABkBIQcGABkB/Ah9AFkBqgiDAGEBogWJAGkBawSQAMEAxwSU
AHEBIQcQAHEBuAiYACkBYwGUAHkBGQmgAIEBEgmmAIEBGQKrAIEBlAmwAHkB9QC2AIkBPAm8AJEB
uQTCAHkB1QTJAIkBNwm8AHkBGQnNAGkBdQTTAFkBRwkBAMEA1AjYAMEAJQHJAJkB/QDlADQAVgn8
ADwAawRKADwAdQQTATwAIQcGAAgALAA0AQgAMAA5ASkAqwBgAy4ACwDeAS4AEwDnAS4AGwAGAi4A
IwAPAi4AKwA4Ai4AMwA4Ai4AOwAPAi4AQwA+Ai4ASwA4Ai4AUwBVAi4AWwA4Ai4AYwBbAi4AawCF
Ai4AcwCSAkAAiwA5AUAAgwDcAkMAewDlAkMAgwDcAkkAqwBxA2MAewDlAmMAgwDcAmkAqwCFA4AA
iwA5AYMAkwA5AYMAmwA5AYMAewDlAokAqwCSA6AAiwA5AakAgwAGAsAAiwA5AckAgwAGAuAAiwA5
AeMAuwA5AeMAUwA4AukAswA5AQMBgwDcAgMBowD+AiMBgwDcAiMBWwA4AiACgwDcAiACiwA5AUAC
gwDcAkACiwA5AWACgwDcAmACiwA5AYACgwDcAoACiwA5AaACiwA5AcACiwA5AeACiwA5AeACgwDc
AgADiwA5ASADiwA5ASADgwDcAm8A3QDwAAQAAQAFAAUABgAHAAkACAAAAAYHtgEAAPEFuwEAAOwG
wAEAAHkHxQEAAMAGygEAALgBzwEAAIgE1AEAABAB2QECAAQAAwACAAUABQACAAYABwACAAcACQAC
AAkACwACAAoADQABAAsADQACAA4ADwACABgAEQAuADUAPABDAOIA9QAEAQsBBIAAAAEAAAAAAAAA
AAAAAAAAsgAAAAQAAAAAAAAAAAAAABkB1gAAAAAABAAAAAAAAAAAAAAAGQGrBQAAAAAKAAAAAAAA
AAAAAAAiAd8AAAAAAA0AAAAAAAAAAAAAACsB4AQAAAAADQAAAAAAAAAAAAAAKwFiAAAAAAAAAAAA
AQAAAGMIAAAIAAQACQAEAAoABwAAABAAEgCBAAAAEAArAIEAAAAAAC0AgQCDAOsAgwAOAQAAAAAA
U1RfYzBiNTRiZmFjYTBjNGIyOTkxZDJjN2MyOTJkYTljMTAAQ29udGV4dFZhbHVlYDEAVGhyZWFk
U2FmZU9iamVjdFByb3ZpZGVyYDEAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwBUAERpc3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAHZh
bHVlX18AU1RfN2EwNWEwOTAzYmY5NGIyNzg4ODA5MjgxMzM1MDFjYmEAbXNjb3JsaWIATWljcm9z
b2Z0LlZpc3VhbEJhc2ljAFJlcGxhY2UAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGlu
c3RhbmNlAEdldEhhc2hDb2RlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEZpbGUAZ2V0X05hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBHZXRU
eXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAX3Jlc0N1bHR1cmUAVlNUQVJUU2Ny
aXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0
dHJpYnV0ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRl
AEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVW
ZXJzaW9uQXR0cmlidXRlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3Jp
cHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0
cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUA
c2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBDb21wYXJlU3RyaW5nAFRvU3RyaW5nAE1hdGgAZ2V0X0xlbmd0aABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfN2EwNWEwOTAzYmY5NGIyNzg4ODA5
MjgxMzM1MDFjYmEuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAFN5c3RlbS5Db21wb25lbnRNb2Rl
bC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBGaWxl
SW5mbwBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2Vy
T2JqZWN0UHJvdmlkZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09i
amVjdFByb3ZpZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIA
Z2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVyAE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0b3IA
LmN0b3IALmNjdG9yAE1vbml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1
YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNl
cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYzBiNTRiZmFjYTBjNGIyOTkxZDJj
N2MyOTJkYTljMTAuTXkuUmVzb3VyY2VzAE15UmVzb3VyY2VzAFNUX2MwYjU0YmZhY2EwYzRiMjk5
MWQyYzdjMjkyZGE5YzEwLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X1Zh
cmlhYmxlcwBHZXRGaWxlcwBTdHJpbmdzAE15U2V0dGluZ3MARXF1YWxzAFJ1bnRpbWVIZWxwZXJz
AE9wZXJhdG9ycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBFeGlzdHMAQ29uY2F0AG1f
U3luY09iamVjdABNeVByb2plY3QATGVmdABSaWdodABFeGl0AHNldF9UYXNrUmVzdWx0AG1fQ29u
dGV4dABTVF9jMGI1NGJmYWNhMGM0YjI5OTFkMmM3YzI5MmRhOWMxMC5NeQBnZXRfQXNzZW1ibHkA
Q29weQAAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBz
AAA/UwBGAF8ARgBhAGMAdQBsAHQAeQBTAHQAYQBmAGYAXwBnAGUAbgBlAHIAaQBjAEYAaQBsAGUA
bgBhAG0AZQAAJ1MARgBfAEYAYQBjAHUAdABsAHkAUwB0AGEAZgBmAF8ARABpAHIAACdTAEYAXwBG
AGEAYwB1AGwAdAB5AFMAdABhAGYAZgBfAEQAaQByAAABAAsqAC4AYwBzAHYAAAkuAGMAcwB2AAAJ
LgB6AGkAcAAAA1wAABVaAGkAcABDAG8AbQBtAGEAbgBkAAAVIABhACAALQB0AHoAaQBwACAAIgAB
ByIAIAAiAAADIgAAAAAA5hxn4glYCUaEtlTHsEddVgAEIAEBCAMgAAEFIAEBEREEIAEBDgQgAQEC
BSACAQ4OBSABARFFByAEAQ4ODg4GFRIkARIMBhUSJAESCAYVEiQBEmUGFRIkARIgBCAAEwAHAAES
bRGAnQUgABKAoQcgAgEOEoChBAABHBwEAAEBHA0HCA4ODg4ODh0SgJUIBSAAEoCtBSAAEoCxBiAB
EoC1HAMgABwDIAAOByABHRKAlQ4FAAIODg4EAAECDgQAAQEOBQACAQ4OBSACDg4OBQACDg4IBgAD
CA4OAgMgAAgFAAEOHQ4EIAEBHAQgAQIcBAcBHgACHgAFEAEAHgAECgEeAAQHARMABhUSJAETAAcG
FRJxARMABhUScQETAAITAAQKARMABSABARMACLd6XFYZNOCJCLA/X38R1Qo6CImEXc2AgMyRBAAA
AAAEAQAAAAcGFRIkARIMBwYVEiQBEggHBhUSJAESZQcGFRIkARIgAwYSeQMGEn0DBhIYAgYcAgYI
AwYRKAMAAAEEAAASDAQAABIIBAAAEmUEAAASIAQAABJ5BAAAEn0FAAEBEn0EAAASGAQgABJtBxAB
AR4AHgAHMAEBARAeAAQIABIMBAgAEggECAASZQQIABIgBAgAEnkECAASfQQIABIYBCgAEwAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2MwYjU0
YmZhY2EwYzRiMjk5MWQyYzdjMjkyZGE5YzEwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTMA
AAUBAAEAACkBACRjMzkzNjA2Zi1kMzEwLTQ4ODMtOTI3Ny0yNGQxMjhlMzNiMmQAAAwBAAcxLjAu
MC4wAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuNQgBAAEAAAAAABgBAApNeVRlbXBsYXRlCDExLjAuMC4wAABh
AQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJD
cmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAABABAAtNeS5Db21wdXRlcgAA
EwEADk15LkFwcGxpY2F0aW9uAAAMAQAHTXkuVXNlcgAAEwEADk15LldlYlNlcnZpY2VzAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAADQOwAAAAAAAAAAAADqOwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3DsAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfAGMAMABiADUANABiAGYAYQBjAGEAMABjADQAYgAyADkAOQAxAGQAMgBjADcAYwAyADkAMgBk
AGEAOQBjADEAMAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANwBhADAANQBhADAAOQAw
ADMAYgBmADkANABiADIANwA4ADgAOAAwADkAMgA4ADEAMwAzADUAMAAxAGMAYgBhAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA3AGEAMAA1
AGEAMAA5ADAAMwBiAGYAOQA0AGIAMgA3ADgAOAA4ADAAOQAyADgAMQAzADMANQAwADEAYwBiAGEA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AYwAwAGIANQA0
AGIAZgBhAGMAYQAwAGMANABiADIAOQA5ADEAZAAyAGMANwBjADIAOQAyAGQAYQA5AGMAMQAwAAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAD8OwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Script Task - Send Email notification"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{19309978-1C5E-46C6-854C-C82D98111D73}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task - Send Email notification"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_328a8e06782a476191db4ff3e242775d"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="User::BCCList,User::CCList,User::SVC_SQL_PW,User::ToList">
              <ProjectItem
                Name="ST_328a8e06782a476191db4ff3e242775d.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5F2D9645-3FC7-43AA-878E-AE685157692A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_328a8e06782a476191db4ff3e242775d</RootNamespace>
    <AssemblyName>ST_328a8e06782a476191db4ff3e242775d</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_328a8e06782a476191db4ff3e242775d")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_328a8e06782a476191db4ff3e242775d")> 
<Assembly: AssemblyCopyright("Copyright @  2015")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("bdd5bfe4-6d75-45bf-884b-4236caf6fa08")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Net
Imports System.Net.Mail
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub SendEMail(MessageBody As String, MessageSubject As String, ToList As String, CCList As String)

        Dim mailMessage As MailMessage
        Dim smtpClient As SmtpClient

        mailMessage = New MailMessage("SSIS@osugiving.com", ToList)


        '--------------Email Account Password------------------------------------------
        Dim EmailPW As String = Dts.Variables("SVC_SQL_PW").Value.ToString

        'The CC List needs to be broken out into indiv email addresses
        If CCList.ToString.IndexOf("@") > 0 Then
            Dim CCListArry As String() = CCList.Split(New Char() {","c})
            Dim CC As String
            For Each CC In CCListArry
                mailMessage.CC.Add(Trim(CC.ToString))
            Next
        End If

        mailMessage.IsBodyHtml = True
        mailMessage.Body = MessageBody.ToString
        mailMessage.Subject = MessageSubject.ToString
        smtpClient = New SmtpClient("smtp.office365.com")
        smtpClient.Credentials = New NetworkCredential("SSIS@osuf.org", EmailPW)
        smtpClient.Port = 587
        smtpClient.EnableSsl = True
        smtpClient.Send(mailMessage)

    End Sub


    Public Sub Main()
        '
        ' Add your code here
        '

        Dim messageBody As String = "New faculty staff data files are ready to be processed."
        Dim messageSubject As String = "Faculty Staff Load"

        '--------------Email Account Password------------------------------------------
        Dim EmailPW As String = Dts.Variables("SVC_SQL_PW").Value.ToString

        'Email Lists
        Dim ToList As String = Dts.Variables("ToList").Value.ToString
        Dim CCList As String = Dts.Variables("CCList").Value.ToString
        Dim BCCList As String = Dts.Variables("BCCList").Value.ToString


        Dim mailMessage As MailMessage
        Dim smtpClient As SmtpClient


        '--------------Email List Code------------------------------------------
        mailMessage = New MailMessage("SSIS@osugiving.com", ToList)

        'CC List
        If CCList.ToString.IndexOf("@") > 0 Then
            Dim CCListArry As String() = CCList.Split(New Char() {","c})
            Dim CC As String
            For Each CC In CCListArry
                mailMessage.CC.Add(CC.ToString.Trim)
            Next
        End If

        'BCC List
        If BCCList.ToString.IndexOf("@") > 0 Then
            Dim BCCListArry As String() = BCCList.Split(New Char() {","c})
            Dim BCC As String
            For Each BCC In BCCListArry
                mailMessage.Bcc.Add(BCC.ToString.Trim)
            Next
        End If
        '--------------Email List Code------------------------------------------


        mailMessage.IsBodyHtml = True
        mailMessage.Body = messageBody.ToString
        mailMessage.Subject = messageSubject.ToString
        smtpClient = New SmtpClient("smtp.office365.com")
        smtpClient.Credentials = New NetworkCredential("SSIS@osuf.org", EmailPW)
        smtpClient.Port = 587
        smtpClient.EnableSsl = True
        smtpClient.Send(mailMessage)


        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_328a8e06782a476191db4ff3e242775d</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_328a8e06782a476191db4ff3e242775d</msb:DisplayName>
		<msb:ProjectId>{FB8590F6-6C5C-4DDE-AD22-874B1BD42498}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_328a8e06782a476191db4ff3e242775d.vbproj"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_328a8e06782a476191db4ff3e242775d.dll">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
YgAAAAAAAAACAAABVx2iCQkPAAAA+gEzABYAAAEAAAA1AAAACgAAAAwAAAAaAAAACAAAAEkAAAAC
AAAANwAAAAQAAAAEAAAACAAAAAkAAAAIAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAAAABuBQEA
AAAAAAYAeQMPCAYAHgQPCAYAUAJQBw8AtQgAAAYAkQI9BgYAXAM9BgYABQQ9BgYAmQM9BgYAsgM9
BgYA2AI9BgYAzQO8BQYAfQLJBwYA+QHJBwYAJAM9BgYA8wKABAoAHALqBgoA5AE+BQoAZAI+BQ4A
vAGfBw4AIAdjBwYADANQBw4AqALoBw4AwAKcAAYALwm8BQ4ABgefBw4AQQOcAAYAbwG8BQ4AAQAC
BQoABwLNBQYA2gYvCAYAZQYoBgoAzAETBgYAMwJQBxIA4wPHBBIAoAHHBAYAowS8BQoAEwFUBQYA
yAW8BQYAKAG8BQYA/wk9BgYA/AgPCAYASAdvBBIALAXHBBYAyAhMARYAHwFMAQYAnAS8BQYAcQa8
BQoATwZUBQ4A0gicAAoAgAlUBQoA8ARbCQoAoglbCQYAMQe8BQAAAAArAAAAAAABAAEAAAAAAAUG
vwlNAAEAAQAAAAAAHge/CVEAAQACAAABEABRCb8JYQABAAMAAAAAAHEIQAhhAAUACAAAARAA2giy
AIEABwAMAAEAAADqBbIAjQAJAA8ABQEAAJEHAABhAAkAEgAFAQAAEAAAAGEACQAZAAIBAAAbCQAA
mQAKABsAMQCfBjgBMQB2BkABMQCKBkgBMQC4BlABEQApB1gBEQCUAVwBEQA8BGABEQApCWQBIQC1
CfYABgaDAGcBVoALCWoBVoB0AWoBUCAAAAAABhg7BwYAAQBYIAAAAAAGGDsHBgABAGAgAAAAABEY
QQduAQEAiiAAAAAAEwgRB3IBAQCWIAAAAAATCPUFdwEBAKIgAAAAABMIAgd8AQEAriAAAAAAEwiB
B4EBAQC6IAAAAAADGDsHBgABAMIgAAAAABYI1gaGAQEA7iAAAAAAFgh8AYsBAQD1IAAAAAAWCIgB
kAEBAP0gAAAAABEYQQduAQIADiEAAAAABhg7BwYAAgAYIQAAAAAWCEQElgECAHQhAAAAAAYYOwcG
AAIAfCEAAAAABgBkBSYAAgBcIgAAAAAGAPAFBgAGABokAAAAAMYC9QjOAAYAKCQAAAAAxgIHAdMA
BwAwJAAAAACDAGwBmwEHADwkAAAAAMYCmgSRAAcARCQAAAAAEQBwAKABBwBkJAAAAAABAFwAqAEI
ALogAAAAAAYYOwcGAAkAcCQAAAAAAwjuAEoACQCkJAAAAAAGGDsHBgAJAAAAAQBhBAAAAQDvCQAA
AgBCCQAAAwCbCQAABACUCQAAAQBvBgAAAQD+AAAAAQD+AAkAOwcBABEAOwcGABkAOwcKACkAOwcQ
ADEAOwcQADkAOwcQAEEAOwcQAEkAOwcQAFEAOwcQAFkAOwcVAGEAOwcVAGkAOwcQAHEAOwcQAHkA
OwcQAIEAOwcaAJEAOwcgAKkAOwcGALEAOwcGALkAOwcGANEAOwcmAOkAOwcQAAkBOwcGABEBOwcG
AJkAOwcGAKEAOwcGAAwAOwcGABQAOwcGABwAOwcGACQAOwcGAAwA7gBKABQA7gBKABwA7gBKACQA
7gBKAMEAOwcGANkAOgFPANkA+wlXAPEAOwddAEkBWARlAAEBOwcGAFEBCwdqAFEBbAlqABkBOwcG
ACkBOwcaABkBEwl6AFkBxAiAAGEBswWGAGkBRASNAMEAmgSRAHEBmgSRAHEBZwSVAHEBZgmaACkB
NAChAIkBwwWnAIEB1gAQACkBlgUVACkB5gkQACkBNgkQAJEBOwcQAJkBOwcaAJEB5QisAJEBiwkB
AJEBpQUVAJEB2gCzAHEBwwWRACkBlAChAFkBcQkBAMEA9QjOAMEABwHTAKkB3wDfADQAtQn2ADwA
RARKADwATgQNATwAOwcGAAgALAAuAQgAMAAzASkAqwBYAy4ACwDYAS4AEwDhAS4AGwAAAi4AIwAJ
Ai4AKwAyAi4AMwAyAi4AOwAJAi4AQwA4Ai4ASwAyAi4AUwBPAi4AWwAyAi4AYwBVAi4AawB/Ai4A
cwCMAkAAiwAzAUAAgwDUAkMAewDdAkMAgwDUAkkAqwBpA2MAewDdAmMAgwDUAmkAqwB9A4AAiwAz
AYMAkwAzAYMAmwAzAYMAewDdAokAqwCKA6AAiwAzAakAgwAAAsAAiwAzAckAgwAAAuAAiwAzAeMA
uwAzAeMAUwAyAukAswAzAQMBgwDUAgMBowD2AiMBgwDUAiMBWwAyAkACgwDUAkACiwAzAWACgwDU
AmACiwAzAYACgwDUAoACiwAzAaACgwDUAqACiwAzAcACiwAzAeACiwAzAQADiwAzAQADgwDUAiAD
iwAzAUADiwAzAUADgwDUAm8AugDXAOoABAABAAUABQAGAAcACQAIAAAAIAewAQAABwa1AQAABge6
AQAAkwe/AQAA2gbEAQAAmAHJAQAAYQTOAQAA8gDTAQIABAADAAIABQAFAAIABgAHAAIABwAJAAIA
CQALAAIACgANAAEACwANAAIADgAPAAIAGQARAC4ANQA8AEMA3ADvAP4ABQEEgAAAAQAAAAAAAAAA
AAAAAACyAAAABAAAAAAAAAAAAAAAEwGLAAAAAAAEAAAAAAAAAAAAAAATAbwFAAAAAAoAAAAAAAAA
AAAAABwBnAAAAAAADQAAAAAAAAAAAAAAJQGoBAAAAAANAAAAAAAAAAAAAAAlATsAAAAAAAAAAAAB
AAAAfQgAAAgABAAJAAQACgAHAAAAEAASAFoAAAAQAC0AWgAAAAAALwBaAIsA5QCLAAgBAAAAAABD
b250ZXh0VmFsdWVgMQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQA8TW9kdWxlPgBnZXRfQ0MA
TWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVh
dGVfX0luc3RhbmNlX18AdmFsdWVfXwBtc2NvcmxpYgBnZXRfQmNjAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYwBTVF8zMjhhOGUwNjc4MmE0NzYxOTFkYjRmZjNlMjQyNzc1ZABBZGQAU2VuZABDcmVhdGVJ
bnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UAaW5zdGFuY2UAR2V0SGFzaENvZGUATWFpbE1lc3NhZ2UA
VmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZQBHZXRUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAX3Jlc0N1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uQmFz
ZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmli
dXRlAEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRh
cmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmli
dXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBt
X1ZhbHVlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUASW5kZXhPZgBTeXN0ZW0u
VGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWF0aABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBOZXR3b3JrQ3JlZGVudGlhbABNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNl
cy5JbnRlcm5hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVt
Lk5ldC5NYWlsAFNlbmRFTWFpbABTVF8zMjhhOGUwNjc4MmE0NzYxOTFkYjRmZjNlMjQyNzc1ZC5k
bGwAc2V0X0lzQm9keUh0bWwAc2V0X0VuYWJsZVNzbABnZXRfSXRlbQBTeXN0ZW0AVHJpbQBFbnVt
AFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24A
TXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBT
eXN0ZW0uUmVmbGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24AQ3VsdHVyZUluZm8AQ2hhcgBt
X0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQ
cm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAGdldF9Vc2VyAEVudGVyAGdldF9Db21wdXRlcgBNeUNv
bXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlX
ZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0
ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNUXzMyOGE4ZTA2NzgyYTQ3NjE5MWRiNGZmM2UyNDI3NzVkLk15LlJlc291cmNlcwBNeVJlc291
cmNlcwBTVF8zMjhhOGUwNjc4MmE0NzYxOTFkYjRmZjNlMjQyNzc1ZC5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMAU3RyaW5ncwBNeVNldHRpbmdzAHNldF9D
cmVkZW50aWFscwBFcXVhbHMAUnVudGltZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAbV9TeW5jT2JqZWN0AHNldF9TdWJqZWN0AE1lc3NhZ2VTdWJqZWN0AE15UHJvamVjdABT
eXN0ZW0uTmV0AFNwbGl0AEV4aXQAc2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABzZXRfUG9ydABD
Q0xpc3QAVG9MaXN0AElDcmVkZW50aWFsc0J5SG9zdABtX0NvbnRleHQAU1RfMzI4YThlMDY3ODJh
NDc2MTkxZGI0ZmYzZTI0Mjc3NWQuTXkAc2V0X0JvZHkATWVzc2FnZUJvZHkAZ2V0X0Fzc2VtYmx5
AAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAACVTAFMA
SQBTAEAAbwBzAHUAZwBpAHYAaQBuAGcALgBjAG8AbQAAFVMAVgBDAF8AUwBRAEwAXwBQAFcAAANA
AAAlcwBtAHQAcAAuAG8AZgBmAGkAYwBlADMANgA1AC4AYwBvAG0AABtTAFMASQBTAEAAbwBzAHUA
ZgAuAG8AcgBnAABvTgBlAHcAIABmAGEAYwB1AGwAdAB5ACAAcwB0AGEAZgBmACAAZABhAHQAYQAg
AGYAaQBsAGUAcwAgAGEAcgBlACAAcgBlAGEAZAB5ACAAdABvACAAYgBlACAAcAByAG8AYwBlAHMA
cwBlAGQALgAAJUYAYQBjAHUAbAB0AHkAIABTAHQAYQBmAGYAIABMAG8AYQBkAAANVABvAEwAaQBz
AHQAAA1DAEMATABpAHMAdAAAD0IAQwBDAEwAaQBzAHQAAAA/gGJf1x36TI060leCyld2AAQgAQEI
AyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQBDg4ODgYVEiQBEgwGFRIkARIIBhUS
JAESZQYVEiQBEiAEIAATAAcAARJtEYCdBSAAEoChByACAQ4SgKEEAAEcHAQAAQEcCgcFEoCVDg4d
DggFIAASgK0FIAASgLEGIAESgLUcAyAAHAMgAA4EIAEIDgYgAR0OHQMFIAASgMEEAAEODgYgAQES
gNEGIAEBEoCVEwcNDg4ODg4OEoCVDh0OCA4dDggEIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQKAR4A
BAcBEwAGFRIkARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHV
CjoIiYRdzYCAzJEEAAAAAAQBAAAABwYVEiQBEgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiADBhJ5
AwYSfQMGEhgCBhwCBggDBhEoAwAAAQQAABIMBAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUAAQES
fQQAABIYBCAAEm0HEAEBHgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9
BAgAEhgEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfMzI4YThlMDY3ODJhNDc2MTkxZGI0ZmYzZTI0Mjc3NWQAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAxNQAABQEAAQAAKQEAJGJkZDViZmU0LTZkNzUtNDViZi04ODRiLTQyMzZjYWY2
ZmEwOAAADAEABzEuMC4wLjAAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJh
bWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAgBAAEAAAAAABgBAApNeVRlbXBsYXRl
CDExLjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGll
bnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAABABAAtN
eS5Db21wdXRlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAMAQAHTXkuVXNlcgAAEwEADk15LldlYlNl
cnZpY2VzAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAACkPQAAAAAAAAAAAAC+PQAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAsD0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AMwAyADgAYQA4AGUAMAA2ADcAOAAyAGEANAA3ADYAMQA5ADEAZABiADQAZgBmADMAZQAyADQA
MgA3ADcANQBkAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAzADIAOABhADgAZQAwADYA
NwA4ADIAYQA0ADcANgAxADkAMQBkAGIANABmAGYAMwBlADIANAAyADcANwA1AGQALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADMAMgA4AGEA
OABlADAANgA3ADgAMgBhADQANwA2ADEAOQAxAGQAYgA0AGYAZgAzAGUAMgA0ADIANwA3ADUAZAAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwAzADIAOABhADgA
ZQAwADYANwA4ADIAYQA0ADcANgAxADkAMQBkAGIANABmAGYAMwBlADIANAAyADcANwA1AGQAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{191F540B-7304-4800-85B7-ADE265DF2E67}"
          DTS:From="Package\Sequence Container\Script Task - Build Zip command"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Execute Process Task - Create Zip File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint1]"
          DTS:CreationName=""
          DTS:DTSID="{1E052232-316B-4FE9-B378-5A195A8DCC00}"
          DTS:From="Package\Sequence Container\Execute Package Task - Run the remote package"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Script Task - Delete file from folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{DAC907B1-0054-4D1D-A94E-C5DC53B1F3B1}"
          DTS:From="Package\Sequence Container\Script Task - Scan Directory  - FacultyStaffData"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Script Task - Build Zip command" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{C5D23A88-F966-42A5-9224-561A928C259A}"
          DTS:From="Package\Sequence Container\Execute Process Task - Create Zip File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container\Script Task - Delete the file that was zipped up" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{D4332A8B-DE27-43EB-AD4E-6AF33313811B}"
          DTS:From="Package\Sequence Container\Script Task - Delete file from folder"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Sequence Container\Execute SQL Task - Populate Email List Variables" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{2A81CEAF-2593-4976-A7DD-F9D6964C3BAA}"
          DTS:From="Package\Sequence Container\Execute SQL Task - Populate Email List Variables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Sequence Container\Script Task - Send Email notification" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container 1"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:Disabled="True"
      DTS:DTSID="{542853AD-1A90-4962-B5A5-EA946B2759C9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container 1">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container 1\Execute SQL Task - Assign value to RERefreshStatus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{407CDB30-CDEF-42A9-A4D4-24462619FC9A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - Assign value to RERefreshStatus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B935DFB9-5468-49D5-AC2E-CF64A44699B4}"
              SQLTask:SqlStatementSource="EXEC dbo.RERefreshStatus"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="LastRunOutcome"
                SQLTask:DtsVariableName="User::RERefreshStatus" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{DBA7D5F0-9EF9-49D6-9747-3DDCF53D2A9D}"
      DTS:From="Package\Execute SQL Task - Get Email Account Password"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Sequence Container 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{450B0644-56A4-47EB-A122-EB692C73B958}"
      DTS:EvalOp="3"
      DTS:Expression="@RERefreshStatus == &quot;Success&quot;"
      DTS:From="Package\Sequence Container 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Script Task - Send Alert for exisitng file in 01 New Data File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{4BBA43D7-1FBB-4FBC-BC1B-C16B3D3A7ADE}"
      DTS:EvalOp="3"
      DTS:Expression="@NewDataFileFileExists == &quot;No&quot;  &amp;&amp; @FacultyStaffDataFileExists == &quot;Yes&quot;"
      DTS:From="Package\Script Task - Send Alert for exisitng file in 01 New Data File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Sequence Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="322,42"
          Id="Package\Execute SQL Task - Get Email Account Password"
          TopLeft="414,38" />
        <NodeLayout
          Size="360,42"
          Id="Package\Script Task - Send Alert for exisitng file in 01 New Data File"
          TopLeft="395,382.500000000003" />
        <NodeLayout
          Size="260,42"
          Id="Package\Sequence Container\Execute Process Task - Create Zip File"
          TopLeft="41.8333333333334,214.165318957772" />
        <NodeLayout
          Size="233,42"
          Id="Package\Sequence Container\Script Task - Build Zip command"
          TopLeft="60.6190476190476,126.666666666667" />
        <NodeLayout
          Size="302,42"
          Id="Package\Sequence Container\Script Task - Delete the file that was zipped up"
          TopLeft="26.75,291.75" />
        <NodeLayout
          Size="303,42"
          Id="Package\Sequence Container\Script Task - Scan Directory  - FacultyStaffData"
          TopLeft="24,32" />
        <NodeLayout
          Size="251,42"
          Id="Package\Sequence Container\Script Task - Send Email notification"
          TopLeft="63.5,674.333333333333" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="174.47619047619,168.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.498652291105"
              Start="0,0"
              End="0,37.998652291105">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.998652291105" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="176.309523809524,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.666666666667"
              Start="0,0"
              End="0,45.166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="174.791666666667,256.165318957772">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.584681042228"
              Start="0,0"
              End="0,28.084681042228">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.084681042228" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="this will copy file to the archive folder&#xA;move the file to the folder 01 - New Data File&#xA;&#xA;Also copying the file to the Snowflake folder."
          ParentId="Package\Sequence Container"
          FontInfo="{assembly:Null}"
          Size="268,88"
          Id="578ef0f5-5cf4-4699-88a2-8b16dffd8e60"
          TopLeft="352,26" />
        <AnnotationLayout
          Text="Clean up the unzipped file"
          ParentId="Package\Sequence Container"
          FontInfo="{assembly:Null}"
          Size="157,56"
          Id="bccfad1c-4834-479d-9e18-80561d1b7278"
          TopLeft="359.5,292" />
        <AnnotationLayout
          Text="Run the process to zip the file"
          ParentId="Package\Sequence Container"
          FontInfo="{assembly:Null}"
          Size="176,56"
          Id="76e34a28-3d6d-40dc-8122-8942b3238fd4"
          TopLeft="359.25,223" />
        <AnnotationLayout
          Text="Build the command that the Exec Process Task uses to zip the file"
          ParentId="Package\Sequence Container"
          FontInfo="{assembly:Null}"
          Size="351,56"
          Id="85aeb061-4f4e-4abe-8ef2-ea7279ec6158"
          TopLeft="355,126.25" />
        <AnnotationLayout
          Text="Delete file from folder: \\buss\Import\import data\OSU Faculty and Staff\01 - New Data File\"
          ParentId="Package\Sequence Container"
          FontInfo="{assembly:Null}"
          Size="482,56"
          Id="e62d12b0-f27c-4326-84e8-c0a40320f6fb"
          TopLeft="311.666666666667,458.333333333333" />
        <AnnotationLayout
          Text="Send email notification that Facutly Staff Import files are ready to:&#xA;&#xA;&#xA;The Email distribute list in [OSUF_Static_Data].dbo.OSUF_SSISEmailNotification&#xA;EmailNotificationName = 'New Faculty Staff File'&#xA;"
          ParentId="Package\Sequence Container"
          FontInfo="{assembly:Null}"
          Size="442,120"
          Id="f67904fc-68d2-45f8-9a99-d8f3b1730fd4"
          TopLeft="310.666666666667,657.333333333333" />
        <AnnotationLayout
          Text="Run package: E:\BI\NoSchedule_ETL\BioImports\BioImports\DataSource OSUFAcStaff.dtsx"
          ParentId="Package\Sequence Container"
          FontInfo="{assembly:Null}"
          Size="473,56"
          Id="5e9ebdee-f1f2-44a7-825e-07ca09d994e2"
          TopLeft="354.666666666667,384.333333333333" />
        <AnnotationLayout
          Text="Assign Values to the Email Distribution Lists"
          ParentId="Package\Sequence Container"
          FontInfo="{assembly:Null}"
          Size="260,40"
          Id="15f46922-6bad-4a39-9714-dcfc7654f73c"
          TopLeft="371.454545454545,552.454545454546" />
        <NodeLayout
          Size="323,42"
          Id="Package\Sequence Container\Execute SQL Task - Populate Email List Variables"
          TopLeft="22.3636363636364,559.727272727273" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="186.431818181818,601.727272727273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72.6060606060603"
              Start="0,0"
              End="0,65.1060606060603">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.1060606060603" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="246,42"
          Id="Package\Sequence Container\Script Task - Delete file from folder"
          TopLeft="59.6666666666667,458.333333333333" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="183.265151515152,500.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.3939393939398"
              Start="0,0"
              End="0,51.8939393939398">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.8939393939398" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="312,42"
          Id="Package\Sequence Container\Execute Package Task - Run the remote package"
          TopLeft="28.3333333333334,386" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint1]"
          TopLeft="183.5,428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.333333333333"
              Start="0,0"
              End="0,22.833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="849,898"
          Size="849,941"
          Id="Package\Sequence Container"
          TopLeft="152.833333333333,498.333333333334" />
        <NodeLayout
          Size="328,42"
          Id="Package\Sequence Container 1\Execute SQL Task - Assign value to RERefreshStatus"
          TopLeft="26,44" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="406,146"
          Size="406,189"
          Id="Package\Sequence Container 1"
          TopLeft="369.333333333333,143.166666666666" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="573.666666666667,80">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63.1666666666664"
              Start="0,0"
              End="0,55.6666666666664">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.6666666666664" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="573.666666666667,332.166666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.3333333333367"
              Start="0,0"
              End="0,42.8333333333367">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.8333333333367" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,13.4166666666683,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="576.166666666667,424.500000000003">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73.8333333333309"
              Start="0,0"
              End="0,66.3333333333309">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.3333333333309" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,25.1666666666655,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>